<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>骨盆前倾矫正[转载自知乎]</title>
    <url>/2020/02/14/%E9%AA%A8%E7%9B%86%E5%89%8D%E5%80%BE%E7%9F%AB%E6%AD%A3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri Feb 14 2020 16:03:36 GMT+0800 (GMT+08:00) --><p>作者：Mindfulness<br>链接：<a href="https://www.zhihu.com/question/43888394/answer/691126099" target="_blank" rel="noopener">https://www.zhihu.com/question/43888394/answer/691126099</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><p>其实网上的教程并不对，都是互相copy。网上教程的理论基本基于这两点：维持骨盆正位拮抗肌群不平衡这个不平衡从两个方面导致，分别是肌肉力量和紧张程度或长度(肌肉在紧张收缩的状态会变短)<br><img src="https://pic1.zhimg.com/80/v2-a86d3181aa075dd60ee8e9a9422c601e_hd.jpg" alt></p><a id="more"></a><p>然后得出下面结论：</p><p><em>A.从后面上拉骨盆的竖脊肌太紧张(缩短)</em></p><p><em>B.从后面下拉骨盆的臀大肌过弱</em></p><p><em>C.从前面上拉骨盆的腹肌过弱</em></p><p><em>D.从前面下拉骨盆的髂腰肌过紧(缩短)</em></p><p>这里面C只有没有问题，<strong>D是严重错误</strong>。<strong>实际AB也有问题，后面说。</strong></p><p><strong>错误1.</strong></p><p>拉伸髂腰肌先说什么情况肌肉会紧张缩短。只有肌肉处于长期被动牵拉的状态，人体进行自我的调节，才会在无意识的状态下让肌肉紧张缩短(应该是一种神经调节)。比如后背竖脊肌，长期坐姿被被动的牵拉，人体会自我保护的让它无意识的处于紧张状态并变短，或者更进一步的条索化(肌束横向的缩紧，类似把一把筷子攥在一起)，变得更有韧性。</p><p>所以，长期坐姿，<strong>髂腰肌(屈髋肌群)并不会被牵拉，是不可能过紧和也不可能是力量过强的。但是骨盆前倾最关键的问题就是D，问题就出在屈髋肌群这里。所以这个最关键的位置理论错了，自然就解决不了。</strong></p><p>实际上屈髋肌群确下拉骨盆导致前倾的原因在于肌肉和其他组织或骨骼的粘连。大腿根部的肌肉和骨盆，股直肌和内收肌粘在一起了(内收肌拉着骨盆前下端，股直肌拉着骨盆的耻骨到髂前上棘整个部分。所以你的骨盆前面是整体被下拉的，相反腹肌的作用反而不大)。长期坐姿这部分之间的组织没有相对滑动，长期下来腹股沟大腿根这里的组织间的分隔它们的筋膜无法正常运作了，因此这部分都粘在一起了。大腿根部间接骨盆的肌腱也都蜷缩在一起了。</p><p><strong>所以根本就不该拉伸髂腰肌。况且，你做下面这个动作是没用的。这时候屈髋肌群区粘在一起，你根本拉不到髂腰肌，你拉到的只有股直肌中段，你只会感到大腿被撕裂的感觉，实际腹股沟部还是卷缩在一起。</strong>你拉到的只是图中的A和B处，根本拉不到深层的髂肌。另外，<strong>如果你是静态拉伸，一直不动让大腿被动牵拉，只会让它越来越紧，更加恶化骨盆前倾。(另外，拉伸不会让肌肉变长，只有松解才会让紧张的肌肉恢复原有长度，所以这个动作错的离谱)</strong></p><p><img src="https://pic3.zhimg.com/80/v2-e373aefe885e532e56a094c5b73c1322_hd.jpg" alt></p><p><strong>错误2.</strong></p><p><strong>或者说没啥大用的办法：锻炼腹肌</strong></p><p>另一个动作，加强下腹肌(类似反向卷腹之类)，也是用处不大。<strong>因为这个动作除了加强你的下腹肌，无可避免的也加强了你的髂腰肌，腰方肌，只会让你的屈髋肌群更有力，更加剧骨盆前倾。。。。过强的腰方肌还会拉着你的腰椎进一步前凸。。骨盆前倾没好，又变成了腰椎前凸。。而且腹肌弱和强对骨盆的影响也不大，练这个意义不大。</strong></p><p><img src="https://pic4.zhimg.com/80/v2-cad9a2ceb9d6fff551d531900633b1ee_hd.jpg" alt></p><p><strong>错误3.</strong></p><p><strong>(或者说没啥大用的办法)臀桥</strong></p><p><img src="https://pic1.zhimg.com/80/v2-1ea1fe40127501626dc38a0ea1d57504_hd.jpg" alt></p><p>这个可以做，但是也不是太推荐(如果你臀肌实在太弱，可以做做。因为臀桥其实也有风险，<strong>虽然它加强了你的臀大肌，但做这个动作，你的后腰处，即竖脊肌下段也是非常坚固的，会让竖脊肌更强，更加剧向上拉你的骨盆。所以这个动作其实更多加强你骨盆的稳定性，对改善骨盆前倾意义也不大)</strong></p><p><strong>所以，什么腹肌臀肌练来练去都收效甚微，你这些肌群其实可以通过神经调节来产生交互抑制，自动的调整他们的平衡。</strong></p><p><img src="https://pic2.zhimg.com/80/v2-064d0a1f2381da76e8a6581917a3b3df_hd.jpg" alt></p><p><strong>你不需要时刻观察自己拮抗肌群是不是在平衡状态，今天臀肌是不是强了，明天腹肌是不是太弱了，然后去每天都调整以维持骨盆平衡……相信我，你的大脑可以通过神经调节自带这个功能…..(所谓主动肌群和拮抗肌群的交互抑制原理)</strong></p><p><img src="https://pic1.zhimg.com/80/v2-2cec8389f101738883307ad7913f57c2_hd.jpg" alt></p><p><strong>(经常健身和运动导致的 交互抑制性薄弱(网球肘) 另说，久坐不可能产生这个现象）</strong></p><p><strong>以上是分析网上教程的错误，暂告一段落</strong></p><p><strong>下面是解决办法，还有本教程基于的原理：</strong></p><p><strong>不从调整拮抗肌群平衡方面出发，而且从物理调整肌肉位置的角度出发。</strong></p><p><strong>需要解决的：</strong></p><p><strong>A.长期久坐导致的肌肉与骨盆的粘连，被长期外力挤压肌肉的失活，被过去牵拉引起的肌肉条索化</strong></p><p><strong>B.久坐导致的肌肉与肌肉的粘连，筋膜间滑动能力的降低</strong></p><hr><p><strong><em>正式开始：</em></strong></p><p><strong>步骤1.解决骨盆前侧面粘连(股直肌和腹股沟处粘连)</strong></p><p>把你大腿根部和骨盆和腹股沟粘连在一起的组织分开。用一根小棍，沿着腹股沟最下端可以摸到分界线的地方，把粘在一起的大腿根部肌肉和其他组织撬开。你会感觉到，呼吸都更深了。完全撬开的话，你的腹股沟是会有一道明显的凹陷，瘦的话，还可以摸到骨盆下边缘，然后骨盆瞬间就可以回正一部分了。<strong>沿着腹股沟韧带的凹陷处(图中A点)开始，一点点剥开，慢慢找感觉。最开始要先找到A点的凹陷。</strong></p><p><img src="https://pic3.zhimg.com/80/v2-e4d8e5b5863d989be37255326b4d7faa_hd.jpg" alt></p><p><strong><em><a href="https://www.zhihu.com/question/43888394/answer/691126099" target="_blank" rel="noopener">原帖</a>有演示视频</em></strong></p><p><strong>2.分离内收肌和股内测肌缝匠肌的粘连，恢复肌肉间筋膜相对滑动能力</strong></p><p><strong>分离下图A区域(大腿内收肌）与B区域(股直肌股内侧肌缝匠肌等）的粘连，恢复C位置筋膜滑动能力。</strong></p><p><strong>目标：总之让这一部分的肌肉都恢复滑动能力(可以先按重点分离主要的，然后再修补细节大范围松解)</strong></p><p><img src="https://pic4.zhimg.com/80/v2-70d6f3ebefa2340e6b31d1387e80f6d1_hd.jpg" alt></p><p><strong>先泡沫轴松解上图AB处</strong>，压倒泡沫轴上面然后弯曲和伸展大腿，<strong>不要大腿静止不动的在泡沫轴上反复的滚来滚去(如下图，不要这样绷直了腿滚)</strong></p><p><img src="https://pic2.zhimg.com/80/v2-8dda858932d65a147d641d2d1146f186_hd.jpg" alt></p><p>压在上面然后折叠大腿同时很慢很慢的滚动，目的是让泡沫轴压住即固定住肌肉，然后同时大腿运动让肌肉伸缩，让大腿肌肉运动，从而牵拉松解粘连的组织。否则你只是在单纯的反复按压那里而已，没法分离粘连的组织。</p><p><strong>(1)手动剥离</strong></p><p><strong>筋膜枪或者按摩棒沿着内收肌和股直肌分界线顺着肌肉走向横着推，怎么弄都行，总之让这两块肌肉分开。</strong></p><p><strong>(2)大腿夹泡沫轴推墙分离</strong></p><p>用力夹住，然后<strong>慢慢直起大腿</strong>起身，一边<strong>夹紧</strong>一边<strong>向前顶</strong>。维持一段时间，泡沫轴要贴着骨盆下端，因为主要分离股直肌和内收肌上端的肌肉。</p><p><img src="https://pic4.zhimg.com/80/v2-9dadc2440f473d93544a60140e885aff_hd.jpg" alt></p><p><strong>校验成果阶段：</strong></p><p>做完1.2，如果你做到位了，你应该已经大大改善了，你会发现<strong>呼吸更深了，你站着的时候，腹肌明显绷紧了，后背竖脊肌明显松弛了，走路时候两腿的重心也自然的回到了腿的内测，走起来臀肌发力也明显了</strong></p><p><strong>步骤3 (可忽略)</strong></p><p><strong>a.剥离臀大肌与臀中肌的粘连，恢复相对滑动能力</strong></p><p><strong>b.恢复失活的臀中肌这里先插入一个原理：</strong></p><p><strong>当肌肉受到持续外部压力的时候它会失去弹性而改为韧性，有弹性的肌肉会变成塑料一样坚硬稳固，同时意味着变得非常薄。</strong></p><p><img src="https://pic3.zhimg.com/80/v2-1e6827db13f3bb32340d9c13738a5e87_hd.jpg" alt></p><p><strong>关于受压：</strong>本身人类演化出来的身体构造，并不是适合久坐的。如果你一直坐着，你本来有弹性和力量和伸缩能力的臀肌会有部分贴在骨盆上，变得薄硬且失去伸缩性失去力量。<strong>这里受压的主要是臀中肌和臀小肌(正襟危坐时候应该没影响，所以这一步可以取消，躺着坐，可能有粘连)</strong>这一部分的失效可以说是间接导致了你的骨盆前倾。你的臀小肌梨状肌由于粘连所以它失去了本该有的力量与弹性，如让股骨外旋的能力。<strong>大腿发生内旋(也许你没有，腿型正常就代表正常)，大腿股骨内旋间接导致骨盆前倾。</strong>可以自己做一个把两腿内旋的动作，看看是不是骨盆向下倾了。</p><p><strong>关于被牵拉：</strong>你在坐姿状态臀肌处于被牵拉状态，长期拉伸发生牵拉性薄弱，也会导致力量下降</p><p><strong>操作方法：</strong></p><p>用一根按摩棒，从屁股按进去，顶到骨盆(不要太深，别太用力按到神经血管啥的)，顺着骨盆后面的肌肌走向，横向的拨动或者撬动。</p><p>你会感觉到贴合在骨盆上面的肌肉已经变成硬塑料一样的东西，还有条索化的一条条硬棱，沿着这个棱的边缘拨动这些硬的肌肉，感受撬动的一瞬间，肌肉在一瞬间弹开的感觉。这个过程很缓慢，每次只能释放开一层肌肉，需要慢慢来，可能需要一两周(平时还有避免再压屁股，避免久坐)。但是一晚上时间你大概就能感到臀部变得有弹性了。</p><p>其实就是一个<strong>更深层臀肌的松解</strong>。</p><p>校验步骤3的做法：做一个身体略前倾，收紧绷紧腰部，抬起一侧大腿起跑的姿势，是不是感觉抬腿时候腹部核心肌群(腹肌等)可以有自动收紧的感觉。</p><p><strong>最后来个总结：</strong></p><p><strong>1.分离骨盆 腹股沟处 的粘连。</strong></p><p><strong>2.分离 股内测肌缝匠肌区域 和 内收肌区域 的粘连</strong></p><p><strong>3.激活臀部肌肉</strong></p><p>维持方法：把骨盆回正以后，不需要额外的练习，<strong>只要正常站着，腹肌就会加强，竖脊肌就会松解。只要正常走路，臀肌就会被加强。</strong>打破了之前的恶性循环以后，身体自然而然的进入了正向的循环。多走路，多站着就是维持方法。<strong>当然练练卷腹，练练臀桥也更好(而这两个只是维持方法，不属于解决办法。反过来说，解决办法也可就是避免久坐，也即避免粘连和长期牵拉)。</strong></p><p><strong>风险提示：</strong>不要伤害到骨盆周围的神经(下图黄色)和动静脉(红蓝色)(<strong>大腿处有一根股动脉，别伤到</strong>)，疼的话一定不要按了，不要太深入，轻一些，慢慢来。<strong>你是松解肌肉不是给自己造成物理外伤，不要往死里怼。。不过也别怕，一般按摩伤不到神经血管。</strong></p><p><img src="https://pic3.zhimg.com/80/v2-a46975c2224c3915a28b21b8e12fb171_hd.jpg" alt></p><p><img src="https://pic3.zhimg.com/80/v2-85c223594e2da26dfd330097822f723b_hd.jpg" alt></p><p>最后，本文只适用于久坐导致的骨盆前倾。而且，其实如果你真的因为身体不舒服了，那应该先改变生活方式，导致你身体损伤的根本原因不是骨盆前倾而且久坐(实际你任何一种姿势，时间长了都不好，一直站着一直躺着都会不好），所以说影响你健康的更进一步说，其实是“久”。这个久不光是长期维持一种姿势，也包括过度运动，过度拉伸。</p><p><strong>如果你的骨盆前倾不影响到你的健康，实则没有改变的必要，只要不是长期经常主动发力的肌肉那它就不会紧张）</strong></p><p><strong>体态不良不是病理性的，把它理解为身体的一种适应性行为更好。</strong></p><p><strong>最主要是不要久坐。</strong></p><p><strong>最后，祝大家都拥有美好体态。</strong></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>运动</category>
      </categories>
      <tags>
        <tag>体态</tag>
      </tags>
  </entry>
  <entry>
    <title>Why Losing Kobe Bryant Felt Like Losing a Relative or Friend</title>
    <url>/2020/02/13/Why-Losing-Kobe-Bryant-Felt-Like-Losing-a-Relative-or-Friend/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri Feb 14 2020 16:03:36 GMT+0800 (GMT+08:00) --><p><img src="https://media-image1.baydn.com/85f5f5911e5b8517408539bca0d5dcea0fdf350892173d0ec6530b996846ac74.png?x-oss-process=image/quality,Q_90" alt></p><a id="more"></a><p>On the afternoon of January 26, I was at the Indiana men’s basketball game when a <strong>chorus</strong> of cellphones in the crowd pinged, alertinsg them to the news of Kobe Bryant’s death. I was <strong>astonished</strong> at how quickly fans’ attention switched from the game to <strong>utter shock</strong> and disbelief at the news of Bryant’s passing.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chorus [n]齐声，异口同声，合唱团，副歌，朗诵演员；[v]合唱，齐声说，异口同声地说</span><br><span class="line">utter [v]以口发出声音，讲，说；[adj]彻底的，完全的，绝对的</span><br><span class="line">utter shock 彻底震惊，无比震惊</span><br><span class="line">disbelief 不相信，怀疑</span><br></pre></td></tr></table></figure><blockquote><p>在1月26号的下午，我正在印第安纳步行者队的篮球比赛现场，这时，人群中手机铃声响起，告知人们科比布莱恩特死亡的消息。粉丝的注意力立刻从比赛转为对这个消息的无比震惊和不可置信，对此我大为惊讶。</p></blockquote><p>Soon, it seemed like the entire nation was in mourning.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mourning 悲痛，丧服，灵柩车</span><br><span class="line">    mourn [v]哀悼，服丧，忧伤</span><br><span class="line">    mourn for&#x2F;over 追悼，悼念</span><br><span class="line">    grieve [v]使悲伤，使苦恼，悲痛，哀悼</span><br><span class="line">    grieve for&#x2F;over 哀悼，追悼</span><br></pre></td></tr></table></figure><blockquote><p>很快，整个国家似乎都陷入了悲伤。</p></blockquote><p>Sure, we might <strong>expect</strong> the basketball world to <strong>grieve the passing of</strong> one its <strong>all-time</strong> greats. But <strong>grief</strong> came from all <strong>corners</strong>. The <strong>Grammy Awards</strong> <strong>featured</strong> <strong>poignant</strong> <strong>tributes</strong> to Bryant. People who had never met Bryant told reporters they felt like they just lose a family member.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">expect 预料，预期，认为...会发生，理应得到，期望，期待，猜想，认为某事是真实的</span><br><span class="line">grieve [v]使悲伤，使苦恼，悲痛，哀悼</span><br><span class="line">grieve the passing of 为...的逝世悲伤</span><br><span class="line">all-time greats 空前的，创纪录的，最伟大的球员</span><br><span class="line">grief 悲伤，悲痛，悲伤的事，悲痛的缘由</span><br><span class="line">corner 角落，拐角处，困境，窘境，地区，偏僻处；[v]相交成角，囤积，垄断，使陷入绝境，把...难住</span><br><span class="line">Grammy Awards 格莱美奖</span><br><span class="line">    award [v]授予，判定；[n]奖品，判决</span><br><span class="line">feature 容貌，特色，特征，起重要作用，以...为特色，由...主演；特写</span><br><span class="line">poignant 伤心至极的，辛酸的，痛切的，令人心碎的，强烈深刻的</span><br><span class="line">tribute 贡品，颂词，礼物</span><br><span class="line">    pay a tribute to 称赞，歌颂</span><br></pre></td></tr></table></figure><blockquote><p>诚然，我们可能期待篮球界为它最伟大的球员之一的逝去悲伤，不过伤痛弥漫了每个角落。格莱美奖给科比特写了悲伤的悼词。从来没有亲眼见到布莱恩特的人告诉笔者，他们感觉他们刚刚失去了家人。</p></blockquote><p>How can so many be so deeply <strong>affected</strong> by the death of someone they’ve never even met? Why might some people see Kobe Bryant as a family member?</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">affected 假装的；做作的；受到影响的；</span><br><span class="line">    affect [v]影响，假装，感动，感染，倾向，喜欢；[n]情感，引起感情的因素</span><br></pre></td></tr></table></figure><blockquote><p>一个人的死亡，怎么能如此广泛而深远地影响从未见过他的人？为什么有些人把科比布莱恩特视为家人？</p></blockquote><p>As a social <strong>psychologist</strong>, I’m not <strong>surprised by</strong> these <strong>reactions</strong>. I see three main reasons, <strong>grounded in</strong> psychology, that <strong>explain</strong> why Bryant’s death had such a <strong>profound</strong> <strong>effect</strong> on so many people.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">social 社会的，社交的，群居的；[n]联欢会联谊会</span><br><span class="line">psychologist 心理学家</span><br><span class="line">reaction 反应，感应，反作用，反动，复古</span><br><span class="line">ground in 训练...，打好...基础</span><br><span class="line">grounded in &#x3D; based on 基于</span><br><span class="line">explain 说明，解释</span><br><span class="line">profound 深刻深刻深远深奥的，知识渊博的，见解深刻的</span><br><span class="line">effect [n]效果，作用，影响；[v]产生，达到目的</span><br></pre></td></tr></table></figure><blockquote><p>作为社会心理学家，我对这些反应并不感到惊奇。基于心理学我找到三个主要的原因，可以解释为什么科比・布莱恩特的死亡深深的影响了如此多的人。</p></blockquote><p>Feelings Formed From <strong>Afar</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">afar [adv]从远处，远处，遥远，远离着</span><br></pre></td></tr></table></figure><blockquote><p>潜移默化的感情。</p></blockquote><p>Psychologists Shira Gabriel and Melanie Green have written about how many of us form what are called “<strong>parasocial bonds</strong>“ with other people. These <strong>tend to</strong> be one-way relationships with people whom we’ve never met or interacted with, but <strong>nonetheless</strong> feel <strong>intimately</strong> <strong>connected</strong> to.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">* parasocial bonds 准社会关系</span><br><span class="line">para- [前缀] 表示“超” “相似“ “准“ “旁“ “侧</span><br><span class="line">tend to 往往，倾向于，易于，引起，造成，势必</span><br><span class="line">one-way 单行道的，单向的</span><br><span class="line">nonetheless 虽然如此，但是</span><br><span class="line">intimately 熟悉地，亲密地，私下地，秘密地，详尽地</span><br><span class="line">    intimate 亲密的，私人的；[v]暗示，通知，宣布；[n]至交，知己</span><br><span class="line">connected 连接的，有关系的，有联系的，有社交关系的，有血统关系的</span><br></pre></td></tr></table></figure><blockquote><p>心理学家Shira Gabriel和Melanie Green撰写了有关我们中有多少人与他人形成所谓的“准社会关系”的文章。这些往往是与我们从未见过面或互相交流过的，但是依然觉得密切相关的人之间建立的单向关系。</p></blockquote><p>Although ideas about parasocial bonds were first developed in the 1950s, they’ve <strong>garnered</strong> a lot of attention over <strong>the past couple of decades</strong>. For example, loyal fans of Oprah Winfrey and Ellen DeGeneres watch their shows almost every day, with the hosts actively trying to build a warm rapport with their viewers and their audience developing intense feelings of attachment.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">* garner 储存；获得；把...存入谷仓；[n]谷仓</span><br><span class="line">the past couple of decades 过去几十年</span><br></pre></td></tr></table></figure><blockquote></blockquote><!-- rebuild by neat -->]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英文短文阅读</tag>
      </tags>
  </entry>
  <entry>
    <title>The Ecnomist——The World in 2019</title>
    <url>/2020/02/10/The%20Ecnomist%E2%80%94%E2%80%94The%20World%20in%202019/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri Feb 14 2020 16:03:36 GMT+0800 (GMT+08:00) --><p><img src="http://q5iywwuvz.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202020-02-11%20%E4%B8%8B%E5%8D%883.01.27.png" alt></p><a id="more"></a><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="520" height="86" src="//music.163.com/outchain/player?type=2&id=28357876&auto=1&height=66"></iframe><p><strong>Leonardo da Vinci</strong> 500 years on<br><strong>Angelina Jolie</strong> Responding to refugees<br><strong>Laurene Powell Jobs</strong> Voting rights<br><strong>Christine Lagarde</strong> Inclusive growth<br><strong>Pony Ma</strong> Virtuous tech<br><strong>Stacey Cunningham</strong> Markets and Main St</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Leonardo da Vinci 李奥纳多·达·芬奇</span><br><span class="line">Responding to refugees 对难民的回应</span><br><span class="line">Laurence Powell Jobs 劳伦哪·鲍威尔·乔布斯 Steve Jobs&#39;s daughter</span><br><span class="line">voting rights 投票权</span><br><span class="line">Christine Lagarde 克里斯蒂娜·拉加德 法国财政部长</span><br><span class="line">Pony Ma 马化腾</span><br><span class="line">Virtuous tech 良性技术</span><br><span class="line">Stacey Cunningham 史黛西-坎宁安 纽交所首位女总裁</span><br></pre></td></tr></table></figure><h1 id="From-the-Editor"><a href="#From-the-Editor" class="headerlink" title="From the Editor"></a>From the Editor</h1><h2 id="The-World-in-2019"><a href="#The-World-in-2019" class="headerlink" title="The World in 2019"></a>The World in 2019</h2><p><strong>Daniel Franklin, Editor,</strong> <strong><em>The World in 2019</em></strong><br><img src="http://q5iywwuvz.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202020-02-11%20%E4%B8%8B%E5%8D%883.04.11.png" alt><br>It’s the year of <strong>vegan</strong>, “slow social”, <strong>gender self-ID</strong> and <strong>civil partnerships</strong>.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vegan&#x2F;veganism 纯素主义者</span><br><span class="line">slow social 慢社交</span><br><span class="line">gender self-ID 性别自我认同</span><br><span class="line">civil partnerships 公民伙伴关系&#x2F;民事伙伴关系</span><br></pre></td></tr></table></figure><blockquote><p><strong>这是纯素食，慢社交，性别自我认同和公民伙伴关系的一年。</strong></p></blockquote><p>GOING INTO 2019, the world looks <strong>wobbly</strong>. From <strong>Brazil</strong> to Italy, more <strong>populists</strong> are <strong>in power</strong>, the global economy is more <strong>fragile</strong> than it was a year age, the markets are <strong>jittery</strong>, a trade war between America and China is <strong>under way</strong>, technology (and <strong>giant</strong> tech companies) <strong>arouse</strong> growing <strong>angst</strong> and the rules-based international order is under threat. That makes this a <strong>tricky</strong> time for <strong>predictions</strong>, but also an <strong>intriguing</strong> one.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wobbly 摆动的，不稳定的，歪斜的</span><br><span class="line">Brazil 巴西🇧🇷</span><br><span class="line">populist 平民主义者</span><br><span class="line">in power 当权，执政</span><br><span class="line">fragile 易碎的，虚弱的，脆弱的，禁不起折腾的</span><br><span class="line">jittery 神经过敏的，紧张不安的，战战兢兢的</span><br><span class="line">under way 航行中，进行中</span><br><span class="line">giant 巨人，大力士，伟人，卓越人物，巨大的特大的</span><br><span class="line">giant tech company 大型科技公司</span><br><span class="line">arouse 引起，激发，唤醒</span><br><span class="line">angst （因忧世忧民引起的）焦虑不安，烦恼</span><br><span class="line">tricky 机警的，狡猾的</span><br><span class="line">prediction 预言，预言的事物</span><br><span class="line">intriguing 引起好奇心的，令人感兴趣的，有迷惑力的</span><br></pre></td></tr></table></figure><blockquote><p><strong>进入2019年，世界看起来摇摆不定，从巴西到意大利，更多的民粹主义者掌权，全球经济比上一年更加脆弱，市场风声鹤唳，中美贸易战正在进行，技术（包括大型科技公司）出引起越来越多的焦虑，基于规则的国际秩序正受到威胁。这使得这是一个很难预测的时刻，但也是一个有趣的时刻。</strong></p></blockquote><p>What do The Economist’s <strong>journalists</strong> and <strong>guest</strong> <strong>contributors</strong> <strong>foresee</strong> for the year <strong>ahead</strong>? Here are a <strong>dozen</strong> <strong>takeaways</strong>.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">journalists 记日志者，新闻工作者</span><br><span class="line">guest 客人，旅客，客串演员</span><br><span class="line">contributors 捐款人，促成因素，撰稿人，投稿人</span><br><span class="line">foresee 预知，预见</span><br><span class="line">ahead 向前，预先，领先，先前的，领先的</span><br><span class="line">dozen 一打的，十二个[n][adj]</span><br><span class="line">takeaway 外卖食品，外卖餐馆；外卖的，外吃的</span><br></pre></td></tr></table></figure><blockquote><p><strong>《经济学人》的记者和客座撰稿人对未来一年有何预测？这里有十几份外卖。</strong></p></blockquote><p><strong>1. The economic wind is changing.</strong> By <strong>mid-year</strong> America will break its <strong>record</strong> for its longest <strong>uninterrupted expansion</strong>, but <strong>by the end of</strong> the year it could be <strong>heading into</strong> a <strong>recession</strong>. China’s <strong>growth rate</strong> will <strong>slow down</strong>, while India’s <strong>speeds up</strong>. <strong>Post-chaos Syria</strong> will top <strong>the global growth league</strong>; <strong>at the other end</strong> will be a <strong>shrinking</strong> <strong>Venezuela</strong> and <strong>Iran</strong>. In Europe, Italy will <strong>flirt with</strong> <strong>financial crisis</strong>.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mid-year 年中，学年中期考试</span><br><span class="line">record</span><br><span class="line">uninterrupted 不间断的，连续的</span><br><span class="line">interrupted 被阻止的，中断的，不通的</span><br><span class="line">expansion 扩张，扩大，膨胀，扩张物，膨胀物</span><br><span class="line">by the end of 到...时为止，在...之前</span><br><span class="line">head into 走进，进入，走向，陷入</span><br><span class="line">recession 经济衰退，不景气，后退，撤退，撤回</span><br><span class="line">growth rate 增长率</span><br><span class="line">slow down 减速</span><br><span class="line">speed up 加速</span><br><span class="line">Post-chaos 后混乱时期</span><br><span class="line">Syria 叙利亚🇸🇾</span><br><span class="line">league 联盟，社团，使...结盟，与...联合</span><br><span class="line">the global growth league 全球增长联盟</span><br><span class="line">at the other end 在另一端</span><br><span class="line">shrinking 皱缩 shrink 收缩，退缩</span><br><span class="line">Venezuela 委内瑞拉🇻🇪</span><br><span class="line">Iran 伊朗🇮🇷</span><br><span class="line">flirt with 对...调情，不认真考虑</span><br></pre></td></tr></table></figure><blockquote><p><strong>经济风向正在改变。到年中，美国将打破其最长不间断扩张记录，但到年底，美国可能会陷入衰退。中国的增长速度将放缓，而印度的增长速度将加快。后混乱时期的叙利亚将在全球经济增长联盟中名列前茅；另一端将是不断萎缩的委内瑞拉和伊朗。在欧洲，意大利将面临金融危机。</strong></p></blockquote><p><strong>2. The markets converge.</strong> But which way? Will America’s <strong>stockmarket</strong> <strong>fall back</strong>, or <strong>the rest of</strong> the world rise? The smart <strong>bet</strong> is on the latter. America’s bosses, however, should enjoy life while they can: the good times for usa <strong>Inc</strong> won’t <strong>last</strong>.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">converge 集中于一点，会于一点，趋于相似或相同</span><br><span class="line">stockmarket 证券市场，证券交易所，证券交易，证券行情</span><br><span class="line">fall back 后退，（对方因被击败而）退却</span><br><span class="line">the rest of 其余的，剩下的</span><br><span class="line">bet 打赌，赌金赌注，肯定，确信</span><br><span class="line">Inc 股份有限公司 incorporated【股份有限的，组成公司的】</span><br><span class="line">last 延续，持续，最后的，经受住，上一次，最近一次，最后</span><br></pre></td></tr></table></figure><blockquote><p><strong>市场收缩。但是是哪条路呢？美国股市会回落？还是世界其他地区会上升？明智的选择是后者。然而，美国的老板们应该尽可能享受生活：美国公司的美好时光不会长久。</strong></p></blockquote><p><strong>3. Democracy has a big year.</strong> Countries with more than a third of the world’s population will hold <strong>nationwide</strong> elections——including India, the world’s biggest democracy, as well as <strong>Indonesia</strong> and <strong>Nigeria</strong>. <strong>Optimists</strong> hope this will bring the beginnings of <strong>reversal</strong> in the global <strong>trend</strong> of <strong>recent</strong> years towards <strong>declining</strong> freedoms.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">democracy 民主，民主制，民主国家</span><br><span class="line">nationwide 全国范围的，全国性的</span><br><span class="line">Indonesia 印度尼西亚🇮🇩</span><br><span class="line">Nigeria 尼日利亚🇳🇬</span><br><span class="line">Optimist 乐观主义者</span><br><span class="line">reversal [n]逆转，撤销，反转</span><br><span class="line">trend 趋势，倾向，流行</span><br><span class="line">recent 不久前的，近来的</span><br><span class="line">decline 下降，减少，衰退，辞谢，谢绝（邀请等），（太阳）落下</span><br></pre></td></tr></table></figure><blockquote><p><strong>民主有一个重要的一年。世界人口超过三分之一的国家将举行全国性的选举，其中包括世界上最大的民主国家印度，以及印尼和尼日利亚。乐观主义者希望，这将带来近年来全球自由度下降趋势逆转的开端。</strong></p></blockquote><p><strong>4. Brexit happens.</strong> And <strong>as</strong> <strong>Britain</strong> leaves the European Union the <strong>recriminations</strong> will <strong>intensify</strong>. The EU, <strong>meanwhile</strong>, will get a new <strong>commission</strong>, a new <strong>parliament</strong> and a new head for the European Central Bank.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Brexit 英国脱欧</span><br><span class="line">as 因为，随着，依照，如同，同样地；和...一样的</span><br><span class="line">Britain&#x2F; 英国 Great Britain</span><br><span class="line">recriminations 吵架，相互指责</span><br><span class="line">intensify 增强，加剧</span><br><span class="line">meanwhile 同时，其间</span><br><span class="line">commission 授权，委托，委员会，佣金，回扣</span><br><span class="line">parliament 议会，国会</span><br></pre></td></tr></table></figure><blockquote><p><strong>英国脱欧发生了。并且随着英国退出欧盟，相互指责将愈演愈烈。与此同时，欧盟将获得一个新的委员会，一个新的议会和一个新的欧洲央行行长。</strong></p></blockquote><p><strong>5. China gets nervous about the number nine.</strong> Years ending in nine bring a <strong>clutch</strong> of <strong>awkward</strong> <strong>anniversaries</strong> that worry China’s leaders. In 2019 it is 100 years since the May Fourth Movement, a much-<strong>celebrated</strong> <strong>protest</strong>, and 30 years since the bloody <strong>suppression</strong> of <strong>student-led</strong> <strong>demonstrations</strong> in Tiananmen <strong>Square</strong>.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">clutch [v]抓住，紧握；[n]控制，离合器，紧急关头；[adj]紧急关头的，没有手提带或背带的</span><br><span class="line">a clutch of 一系列，一次产的或孵的蛋，一群人，一组</span><br><span class="line">awkward 笨拙的，尴尬的，棘手的，不合适的</span><br><span class="line">anniversary 周年纪念</span><br><span class="line">celebrated 有名的，著名的</span><br><span class="line">protest [n]抗议，反对；[v]声明，抗议</span><br><span class="line">suppression 压制，镇压，禁止，抑制，阻止，忍住，隐瞒，压抑，被压抑的思想（或冲动）</span><br><span class="line">student-led 学生领导的</span><br><span class="line">demonstrate 游行示威，说明，演示，论证，证明，表示，显露</span><br><span class="line">demonstration 表明，证明，游行示威</span><br><span class="line">square 直角的，正方形的，正直的，平方，正方形，广场，与...一致</span><br></pre></td></tr></table></figure><blockquote><p><strong>中国对数字九感到紧张。以九为结尾的年份带来了一系列令中国领导人担忧的尴尬的周年纪念。2019年是五四运动100周年，这是一次非常著名的抗议活动，也是血腥镇压天安门广场</strong></p></blockquote><p><strong>6. Famous figures return to the limelight.</strong> They do so thanks to their <strong>anniversaries</strong>: 150 years since <strong>Mahatma</strong> <strong>Gandhi</strong>‘s birth, 500 years since Hernán Cortés arrived in Mexico and since Leonardo da Vinci’s death(the Tuscan genius time-travels to 2019 to share his <strong>observations</strong> about the modern world, and his drawings <strong>inspire</strong> our cover).</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">figure [n]图形，数字，体形，人物，画像，价格；[v]出现，计算，扮演角色，描绘，认为，象征</span><br><span class="line">Famous figures 著名人物</span><br><span class="line">limelight 众人注意的的中心，关注焦点</span><br><span class="line">anniversary 周年纪念</span><br><span class="line">mahatma 大圣，超人，圣雄</span><br><span class="line">Gandhi 甘地</span><br><span class="line">observation 注意，观察，观察力，言论，评论，意见</span><br><span class="line">modern 现代的，近代的，新式的，时髦的，当代风格的，现代派的</span><br><span class="line">inspire 鼓舞，激发，启示，产生</span><br></pre></td></tr></table></figure><blockquote><p><strong>名人又重新成为人们关注的焦点。他们这样做是由于他们的周年纪念：圣雄甘地诞辰150周年，埃尔南·科尔特斯抵达墨西哥500年，莱昂纳多·达·芬奇逝世（托斯卡纳天才时间旅行到2019，分享他对现代世界的观察，他的画激发我们的封面）。</strong></p></blockquote><p><strong>7. A new Moonrush begins.</strong> Fifty years after neil Armstrong took his giant <strong>leap</strong> for <strong>mankind</strong>, <strong>spacecraft</strong>(some of them private) are <strong>heading back</strong> to the Moon. Meanwhile, NASA’s New Horizons probe reaches <strong>Ultima Thule</strong>, in the most <strong>distant</strong> <strong>encounter</strong> in the history of <strong>spaceflight</strong>.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Moonrush 奔月</span><br><span class="line">leap 跳跃，飞跃</span><br><span class="line">mankind 人类，男性</span><br><span class="line">spacecraft 航天器</span><br><span class="line">head back 返回</span><br><span class="line">Ultima Thule 天涯海角，最远点</span><br><span class="line">distant （时间或空间）远隔的，遥远的，不太友好，不太热情</span><br><span class="line">encounter 遇到，遭遇，突然碰到</span><br><span class="line">spaceflight 航天，宇宙飞行</span><br></pre></td></tr></table></figure><blockquote><p><strong>新一轮的奔月开始。在尼尔·阿姆斯特朗为人类实现巨大飞跃的五十年后，宇宙飞船（其中一些是私人飞船）正在重返月球。与此同时，NASA的「新视野号」探测器到达被称为「极北之地」（Ultima Thule）的柯伊伯带天体，这是太空飞行史上最遥远的探索。</strong></p></blockquote><p><strong>8. There’s no hiding from, or for, tech.</strong> Whether it’s <strong>artificial intelligence</strong> or <strong>facial</strong> <strong>recognition</strong>, tech will be everywhere. But <strong>Silicon Valley</strong> may have <strong>peaked</strong>, and the tech giants will be in <strong>regulators</strong>‘ <strong>sights</strong> in both America and Europe.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hide 隐藏，隐瞒，兽皮，皮革</span><br><span class="line">hide from 隐瞒</span><br><span class="line">artificial intelligence 人工智能</span><br><span class="line">artificial 人造的，人工的，虚假的，不真挚的，人为的</span><br><span class="line">intelligence 智力，智慧，理解力，情报，消息，情报人员</span><br><span class="line">facial 面部的，表面的，脸的，美容，美颜，脸部按摩</span><br><span class="line">recognition 认出，识别，承认</span><br><span class="line">Silicon Valley 硅谷</span><br><span class="line">peak [n]顶点，山峰，最高点；[v]使到达最高点，使竖起，消瘦，到达最高点，变憔悴；[adj]最高的，最大值的</span><br><span class="line">peaked 尖的</span><br><span class="line">regulator 调节器，校准器，监管机构</span><br><span class="line">regulate 调节，规定，有系统的管理，控制，校准</span><br><span class="line">sight 视野，视力，情景，景象，看见</span><br></pre></td></tr></table></figure><blockquote><p><strong>没有什么可以逃过技术。无论是人工智能还是面部识别，科技将无处不在。但硅谷可能已经见顶，科技巨头们将进入欧美监管机构的视野。</strong></p></blockquote><p><strong>9. Big culture makes a splash.</strong> America has the <strong>excitement</strong> of The <strong>Shed</strong> in New York (a giant new space for the arts). Germany experiences the <strong>shock</strong> of the <strong>controversial</strong> new Humboldt <strong>Forum</strong> in Berlin.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">splash 溅起，溅落，</span><br><span class="line">make a splash 引起轰动</span><br><span class="line">excitement 兴奋，激动，令人兴奋的事</span><br><span class="line">shed 棚，库，流出，流下，蜕皮，树叶脱落</span><br><span class="line">shock 打击，震动，休克，受到震动，感到震惊，蓬乱的，浓密的</span><br><span class="line">controversial 有争议的，引起争议的</span><br><span class="line">forum 论坛，讨论会，法庭，公开讨论的广场</span><br><span class="line">new Humboldt Forum</span><br></pre></td></tr></table></figure><blockquote><p><strong>大文化引起轰动。美国对纽约棚屋（一个巨大的艺术新空间）感到兴奋。德国经历了柏林有争议的新洪堡论坛的冲击。</strong></p></blockquote><p>The arts <strong>represent</strong> an <strong>outlet</strong> of <strong>expression</strong>, that is usually influenced by culture and which <strong>in turn</strong> helps to change culture. <strong>As such</strong>, the arts are a <strong>physical manifestation</strong> of the <strong>internal creative impulse</strong>. <strong>Major</strong> <strong>constituents</strong> of the arts include literature – including <strong>poetry</strong>, <strong>novels</strong> and short stories, and <strong>epics</strong>; performing arts – <strong>among</strong> them music, dance, and <strong>theatre</strong>; <strong>culinary</strong> arts such as baking, <strong>chocolatiering</strong>, and <strong>winemaking</strong>; media arts like <strong>photography</strong> and <strong>cinematography</strong>, and visual arts – including drawing, painting, <strong>ceramics</strong>, and <strong>sculpting</strong>. Some art forms combine a visual element with <strong>performance</strong> (e.g. film) and the <strong>written</strong> word (e.g. comics).</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">represent 表现，描绘，代表，象征，表示，作为...的代表</span><br><span class="line">    representative 代表，代理人，有代表性的，典型的</span><br><span class="line">expression 表达，表现，表示，表情，感情，措辞，词组</span><br><span class="line">in turn 依次，轮流，反之，反过来</span><br><span class="line">as such 因此，照这样，就这点而论</span><br><span class="line">physical 身体的，物质的，物理的，体格检查</span><br><span class="line">manifestation 显示，表示，示威运动</span><br><span class="line">internal 国内的，内部的，内在的</span><br><span class="line">creative 创造性的，有创造力的</span><br><span class="line">    creation 创造，创作，创作物，产物</span><br><span class="line">    creativity 创造性，创造力，创作能力</span><br><span class="line">impulse [n]冲动，脉冲，刺激，推动力，神经冲动；[v]推动</span><br><span class="line">major 主要的，主修的，重要的，成年人，主修科目，陆军少校，主修</span><br><span class="line">literature 文学，文学作品，文献，图书资料</span><br><span class="line">poetry 诗篇，诗歌，诗集，作诗法，诗情诗意</span><br><span class="line">    poem 诗 poet 诗人</span><br><span class="line">    portray [v]画像，描述，扮演</span><br><span class="line">    portrait [n]肖像，画像，生动的描写</span><br><span class="line">novel 新奇的，异常的，小说</span><br><span class="line">epic [adj]史诗的，叙事诗的；[n]史诗，叙事诗</span><br><span class="line">performing arts 表演艺术</span><br><span class="line">among 在...中间，在... 之中</span><br><span class="line">theatre 电影院，戏院，戏剧，阶梯式讲堂</span><br><span class="line">culinary 厨房的，烹饪的 culinary arts 烹饪艺术，厨艺</span><br><span class="line">chocolatiering 巧克力分层</span><br><span class="line">    chocolatier 巧克力生产（或销售）商</span><br><span class="line">winemaking 酿酒</span><br><span class="line">photography 摄影术</span><br><span class="line">    photograph 照片，相片，拍照</span><br><span class="line">cinematograph电影术</span><br><span class="line">    cinematograph 电影放映机，电影摄影机</span><br><span class="line">    cinema 电影院，电影艺术，电影业</span><br><span class="line">ceramics 制陶术，陶器，陶瓷</span><br><span class="line">sculpting 雕刻品</span><br><span class="line">    sculpt 雕刻，造型，雕刻品</span><br><span class="line">written 书面的，全挂在脸上的，形之于色，明显受到...的影响；显然有（某特点）</span><br><span class="line">comics 连环画，漫画</span><br><span class="line">    comic 滑稽的，好笑的，喜剧的，</span><br><span class="line">    comedy 喜剧，喜剧狂</span><br></pre></td></tr></table></figure><blockquote><p><strong>艺术代表着一种表达方式，它通常受到文化的影响，反过来又有助于改变文化。因此，艺术是一种内在创造冲动的物质表现。艺术的主要组成部分包括文学——包括诗歌、小说、短篇小说和史诗；表演艺术——其中包括音乐、舞蹈和戏剧；烹饪艺术，例如烘焙，巧克力加工和酿酒；摄影，电影摄影等媒体艺术，以及绘画，绘画，陶瓷和雕刻等视觉艺术。一些艺术形式将视觉元素与表演（例如电影）和文字（例如漫画）结合在一起。</strong></p></blockquote><h1 id="Leaders"><a href="#Leaders" class="headerlink" title="Leaders"></a>Leaders</h1><!-- rebuild by neat -->]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>The Economist</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWeb从入门到入土-Part1.JSP环境搭建及入门</title>
    <url>/2019/03/05/JavaWeb%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-Part1.JSP%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8A%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri Feb 14 2020 16:03:36 GMT+0800 (GMT+08:00) --><p><img src="http://www.9553.com/upload/2015/1030/20151030022850505.png" alt></p><a id="more"></a><h1 id="Part1-JSP环境搭建及入门"><a href="#Part1-JSP环境搭建及入门" class="headerlink" title="Part1.JSP环境搭建及入门"></a>Part1.JSP环境搭建及入门</h1><h2 id="静态网页和动态网页区别"><a href="#静态网页和动态网页区别" class="headerlink" title="静态网页和动态网页区别"></a>静态网页和动态网页区别</h2><h4 id="静态网页"><a href="#静态网页" class="headerlink" title="静态网页"></a>静态网页</h4><p>html、cs、js、jquery</p><h4 id="动态网页"><a href="#动态网页" class="headerlink" title="动态网页"></a>动态网页</h4><p>百度搜索房价、天气（会随着时间、地点、用户操作改变而改变）</p><h2 id="CS架构-amp-BS架构"><a href="#CS架构-amp-BS架构" class="headerlink" title="CS架构&amp;BS架构"></a>CS架构&amp;BS架构</h2><h3 id="CS架构"><a href="#CS架构" class="headerlink" title="CS架构"></a>CS架构</h3><p>Client Server架构（如QQ客户端，各种电脑端游戏）</p><h4 id="CS架构优势"><a href="#CS架构优势" class="headerlink" title="CS架构优势"></a>CS架构优势</h4><ol><li>能充分发挥客户端PC的处理能力，很多工作可以在客户端处理后再提交给服务器，所以CS客户端响应速度快。</li><li>C/S结构的管理信息系统具有较强的事务处理能力，能实现复杂的业务流程。</li><li>操作界面漂亮、形式多样，可以充分满足客户自身的个性化要求。</li><li>安全性能可以很容易保证，C/S一般面向相对固定的用户群，程序更加注重流程，它可以对权限进行多层次校验，提供了更安全的存取模式，对信息安全的控制能力很强。一般高度机密的信息系统采用C/S结构适宜。</li></ol><h4 id="CS架构劣势"><a href="#CS架构劣势" class="headerlink" title="CS架构劣势"></a>CS架构劣势</h4><ol><li>如果软件升级，所有软件都需要升级</li><li>维护麻烦：需要维护每一台客户端软件</li><li>每一台客户端都需要安装客户端软件</li><li>分布功能弱，针对点多面广且不具备网络条件的用户群体，不能够实现快速部署安装和配置。</li><li>用户群固定。由于程序需要安装才可使用，因此不适合面向一些不可知的用户，所以适用面窄，通常用于局域网中。</li></ol><h3 id="BS架构"><a href="#BS架构" class="headerlink" title="BS架构"></a>BS架构</h3><p>Browser Server架构（如网页QQ，网页游戏）</p><h4 id="BS架构优势"><a href="#BS架构优势" class="headerlink" title="BS架构优势"></a>BS架构优势</h4><ol><li>分布性强，客户端零维护。只要有网络、浏览器，可以随时随地进行查询、浏览等业务处理。</li><li>业务扩展简单方便，通过增加网页即可增加服务器功能。</li><li>维护简单方便，只需要改变网页，即可实现所有用户的同步更新。</li><li>开发简单，共享性强。</li></ol><h4 id="BS架构劣势"><a href="#BS架构劣势" class="headerlink" title="BS架构劣势"></a>BS架构劣势</h4><ol><li>个性化特点明显降低，无法实现具有个性化的功能要求。</li><li>在跨浏览器上，BS架构不尽如人意。</li><li>客户端服务器端的交互是请求-响应模式，通常动态刷新页面，响应速度明显降低（Ajax可以一定程度上解决这个问题）。无法实现分页显示，给数据库访问造成较大的压力。</li><li>在速度和安全性上需要花费巨大的设计成本。</li><li>功能弱化，难以实现传统模式下的特殊功能要求。</li></ol><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>CS响应速度快，安全性强，一般应用于局域网中，但是开发维护成本高；BS可以实现跨平台，客户端零维护，但是个性化能力低，响应速度较慢。所以有些单位日常办公应用BS，在实际生产中使用CS结构。</p><h2 id="Tomcat下载安装、目录结构及功能"><a href="#Tomcat下载安装、目录结构及功能" class="headerlink" title="Tomcat下载安装、目录结构及功能"></a>Tomcat下载安装、目录结构及功能</h2><h3 id="Tomcat下载安装"><a href="#Tomcat下载安装" class="headerlink" title="Tomcat下载安装"></a>Tomcat下载安装</h3><p>将Tomcat从官网<a href="https://tomcat.apache.org/whichversion.html" target="_blank" rel="noopener">https://tomcat.apache.org</a>或（（注意不同版本号对应的Java-Version要求）<br>Tomcat<a href="https://mirrors.cnnic.cn/apache/tomcat/" target="_blank" rel="noopener">国内镜像</a>，根据<a href="https://blog.csdn.net/qq_41113081/article/details/88061570" target="_blank" rel="noopener">步骤</a>进行下载安装，速度会快一点。</p><h3 id="文件结构及功能"><a href="#文件结构及功能" class="headerlink" title="文件结构及功能"></a>文件结构及功能</h3><blockquote><p><strong>bin</strong>: 可执行文件:(Windows:startup.bat/shutdown.bat)<br>Mac/Linux:startup.sh/shutdown.sh)<br><strong>conf</strong>:配置文件（server.xml）用于配置Tomcat<br><strong>lib</strong>：Tomcat依赖的jar包<br><strong>log</strong>：日志文件（记录出错等信息）<br><strong>temp</strong>：临时文件<br><strong>webapps</strong>：可执行的项目（将我们开发的项目 放入该目录）<br><strong>work</strong>：存放由jsp翻译成的Java，以及编译成的class文件</p></blockquote><p><em>只需要写jsp，最终执行文件是class文件。jsp -&gt; java -&gt; class</em></p><h2 id="配置Tomcat"><a href="#配置Tomcat" class="headerlink" title="配置Tomcat"></a>配置Tomcat</h2><h3 id="a-配置jdk（配置TOMCAT必须配置JAVA-HOME）"><a href="#a-配置jdk（配置TOMCAT必须配置JAVA-HOME）" class="headerlink" title="a. 配置jdk（配置TOMCAT必须配置JAVA_HOME）"></a>a. 配置jdk（配置TOMCAT必须配置JAVA_HOME）</h3><p>以及java_home classPath path</p><h3 id="b-配置catalinahome"><a href="#b-配置catalinahome" class="headerlink" title="b. 配置catalinahome"></a>b. 配置catalinahome</h3><p>电脑 -&gt; 属性 -&gt; 高级系统设置 -&gt; 高级 -&gt; 环境变量 -&gt; 系统变量 -&gt; 新建 -&gt; 变量名：CATALINA_HOME；变量值：TOMCAT根目录</p><h3 id="验证是否配置成功："><a href="#验证是否配置成功：" class="headerlink" title="验证是否配置成功："></a>验证是否配置成功：</h3><p>Windows系统直接执行bin/startup.bat，执行成功最终会出现Server startup in *** ms。<br>Linux系统用命令行执行./startup.sh执行成功最终会出现Tomcat started.<br>关闭Tomcat服务时，不要直接关闭终端窗口，而是运行shutdown.bat/shutdown.sh，否则有可能导致非正常关闭。</p><h3 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h3><p>可能与其他服务的端口号冲突，tomcat默认端口号8080（此端口较为常见，容易冲突），建议修改此端口（例如8888）。<br>conf -&gt; server.xml大概65行附近</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;Connector connectionTimeout&#x3D;&quot;20000&quot; port&#x3D;&quot;8080&quot; protocol&#x3D;&quot;HTTP&#x2F;1.1&quot; redirectPort&#x3D;&quot;8443&quot;&#x2F;&gt;</span><br><span class="line">&#x2F;&#x2F;修改8080为8888</span><br></pre></td></tr></table></figure><p>改完之后重新启动就可以了<br>然后浏览器访问localhost:8888 如果出现以下页面，则说明配置成功：<br><img src="https://i.loli.net/2020/02/14/Ik3wVzbxDeZufig.png" alt></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>JavaWeb</tag>
      </tags>
  </entry>
  <entry>
    <title>解决HexoMenu图标和路径不能共存的问题</title>
    <url>/2019/01/01/%E8%A7%A3%E5%86%B3HexoMenu%E5%9B%BE%E6%A0%87%E5%92%8C%E8%B7%AF%E5%BE%84%E4%B8%8D%E8%83%BD%E5%85%B1%E5%AD%98%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri Feb 14 2020 14:59:59 GMT+0800 (GMT+08:00) --><h1 id="Step-1"><a href="#Step-1" class="headerlink" title="Step 1."></a>Step 1.</h1><h2 id="config-yml文件中：menu改为"><a href="#config-yml文件中：menu改为" class="headerlink" title="_config.yml文件中：menu改为"></a>_config.yml文件中：menu改为</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F;</span><br><span class="line">  # about: &#x2F;about</span><br><span class="line">  tags: &#x2F;tags</span><br><span class="line">  categories: &#x2F;categories</span><br><span class="line">  archives: &#x2F;archives</span><br><span class="line">  # schedule: &#x2F;schedule</span><br><span class="line">  # sitemap: &#x2F;sitemap.xml || sitemap</span><br><span class="line">  #commonweal: &#x2F;404&#x2F; || heartbeat</span><br></pre></td></tr></table></figure><p>⁨</p><a id="more"></a><h1 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2."></a>Step 2.</h1><h2 id="Macintosh-HD⁩-gt-⁨用户⁩-gt-⁨dai⁩-gt-⁨blog⁩-gt-⁨themes⁩-gt-⁨hexo-theme-next-master⁩-gt-⁨languages⁩-gt-zh-Hans-yml：menu位置改为："><a href="#Macintosh-HD⁩-gt-⁨用户⁩-gt-⁨dai⁩-gt-⁨blog⁩-gt-⁨themes⁩-gt-⁨hexo-theme-next-master⁩-gt-⁨languages⁩-gt-zh-Hans-yml：menu位置改为：" class="headerlink" title="Macintosh HD⁩ -&gt; ⁨用户⁩ -&gt; ⁨dai⁩ -&gt; ⁨blog⁩ -&gt; ⁨themes⁩ -&gt; ⁨hexo-theme-next-master⁩ -&gt; ⁨languages⁩ -&gt; zh-Hans.yml：menu位置改为："></a>Macintosh HD⁩ -&gt; ⁨用户⁩ -&gt; ⁨dai⁩ -&gt; ⁨blog⁩ -&gt; ⁨themes⁩ -&gt; ⁨hexo-theme-next-master⁩ -&gt; ⁨languages⁩ -&gt; zh-Hans.yml：menu位置改为：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &lt;span class&#x3D;&quot;with-love&quot;&gt;&lt;i class&#x3D;&quot;fa fa-home&quot;&gt;&lt;&#x2F;i&gt;&lt;&#x2F;span&gt;首页</span><br><span class="line">  archives: &lt;span class&#x3D;&quot;with-love&quot;&gt;&lt;i class&#x3D;&quot;fa fa-archive&quot;&gt;&lt;&#x2F;i&gt;&lt;&#x2F;span&gt;归档</span><br><span class="line">  categories: &lt;span class&#x3D;&quot;with-love&quot;&gt;&lt;i class&#x3D;&quot;fa fa-th&quot;&gt;&lt;&#x2F;i&gt;&lt;&#x2F;span&gt;分类</span><br><span class="line">  tags: &lt;span class&#x3D;&quot;with-love&quot;&gt;&lt;i class&#x3D;&quot;fa fa-tags&quot;&gt;&lt;&#x2F;i&gt;&lt;&#x2F;span&gt;标签</span><br><span class="line">  about: 关于</span><br><span class="line">  search: &lt;span class&#x3D;&quot;with-love&quot;&gt;&lt;i class&#x3D;&quot;fa fa-search&quot;&gt;&lt;&#x2F;i&gt;&lt;&#x2F;span&gt;搜索</span><br><span class="line">  schedule: 日程表</span><br><span class="line">  sitemap: 站点地图</span><br><span class="line">  commonweal: 公益404</span><br></pre></td></tr></table></figure><h1 id="Step-3"><a href="#Step-3" class="headerlink" title="Step 3."></a>Step 3.</h1><h2 id="⁨Macintosh-HD⁩-gt-⁨用户⁩-gt-⁨dai⁩-gt-⁨blog⁩-gt-⁨themes⁩-gt-⁨hexo-theme-next-master⁩-gt-⁨layout⁩-gt-⁨-partials⁩-gt-header-swig：第45行"><a href="#⁨Macintosh-HD⁩-gt-⁨用户⁩-gt-⁨dai⁩-gt-⁨blog⁩-gt-⁨themes⁩-gt-⁨hexo-theme-next-master⁩-gt-⁨layout⁩-gt-⁨-partials⁩-gt-header-swig：第45行" class="headerlink" title="⁨Macintosh HD⁩ -&gt; ⁨用户⁩ -&gt; ⁨dai⁩ -&gt; ⁨blog⁩ -&gt; ⁨themes⁩ -&gt; ⁨hexo-theme-next-master⁩ -&gt; ⁨layout⁩ -&gt; ⁨_partials⁩ -&gt; header.swig：第45行"></a>⁨Macintosh HD⁩ -&gt; ⁨用户⁩ -&gt; ⁨dai⁩ -&gt; ⁨blog⁩ -&gt; ⁨themes⁩ -&gt; ⁨hexo-theme-next-master⁩ -&gt; ⁨layout⁩ -&gt; ⁨_partials⁩ -&gt; header.swig：第45行</h2><p>由：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;i class&#x3D;&quot;menu-item-icon fa fa-fw fa-&#123;&#123; path.split(&#39;||&#39;)[1] | trim | default(&#39;question-circle&#39;) &#125;&#125;&quot;&gt;&lt;&#x2F;i&gt; &lt;br &#x2F;&gt;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;i class&#x3D;&quot;menu-item-icon fa fa-fw fa-&#123;&#123; path.split(&#39;||&#39;)[1] | trim  &#125;&#125;&quot;&gt;&lt;&#x2F;i&gt; &lt;br &#x2F;&gt;</span><br></pre></td></tr></table></figure><hr><p>更新：<br>将_config.yml文件中的menu 每个项目/和||中间的空格删除就好了。。。</p><!-- rebuild by neat -->]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue.js - Day1</title>
    <url>/2018/04/11/Vue.js%20-%20Day1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri Feb 14 2020 16:03:36 GMT+0800 (GMT+08:00) --><h1 id="Vue-js-Day1"><a href="#Vue-js-Day1" class="headerlink" title="Vue.js - Day1"></a>Vue.js - Day1</h1><h2 id="课程介绍"><a href="#课程介绍" class="headerlink" title="课程介绍"></a>课程介绍</h2><p>前5天： 都在学习Vue基本的语法和概念；打包工具 Webpack , Gulp<br>后5天： 以项目驱动教学；</p><h3 id="什么是Vue-js"><a href="#什么是Vue-js" class="headerlink" title="什么是Vue.js"></a>什么是Vue.js</h3><ul><li><p>Vue.js 是目前最火的一个前端框架，React是最流行的一个前端框架（React除了开发网站，还可以开发手机App， Vue语法也是可以用于进行手机App开发的，需要借助于Weex）</p></li><li><p>Vue.js 是前端的<strong>主流框架之一</strong>，和Angular.js、React.js 一起，并成为前端三大主流框架！</p></li><li><p>Vue.js 是一套构建用户界面的框架，<strong>只关注视图层</strong>，它不仅易于上手，还便于与第三方库或既有项目整合。（Vue有配套的第三方类库，可以整合起来做大型项目的开发）</p></li></ul><a id="more"></a><ul><li>前端的主要工作？主要负责MVC中的V这一层；主要工作就是和界面打交道，来制作前端页面效果；</li></ul><h2 id="为什么要学习流行框架"><a href="#为什么要学习流行框架" class="headerlink" title="为什么要学习流行框架"></a>为什么要学习流行框架</h2><ul><li>企业为了提高开发效率：在企业中，时间就是效率，效率就是金钱；<ul><li>企业中，使用框架，能够提高开发的效率；</li></ul></li></ul><ul><li>提高开发效率的发展历程：原生JS -&gt; Jquery之类的类库 -&gt; 前端模板引擎 -&gt; Angular.js / Vue.js（能够帮助我们减少不必要的DOM操作；提高渲染效率；双向数据绑定的概念【通过框架提供的指令，我们前端程序员只需要关心数据的业务逻辑，不再关心DOM是如何渲染的了】）</li><li>在Vue中，一个核心的概念，就是让用户不再操作DOM元素，解放了用户的双手，让程序员可以更多的时间去关注业务逻辑；</li></ul><ul><li>增强自己就业时候的竞争力<ul><li>人无我有，人有我优</li><li>你平时不忙的时候，都在干嘛？</li></ul></li></ul><h2 id="框架和库的区别"><a href="#框架和库的区别" class="headerlink" title="框架和库的区别"></a>框架和库的区别</h2><ul><li><p>框架：是一套完整的解决方案；对项目的侵入性较大，项目如果需要更换框架，则需要重新架构整个项目。</p><ul><li>node 中的 express；</li></ul></li></ul><ul><li>库（插件）：提供某一个小功能，对项目的侵入性较小，如果某个库无法完成某些需求，可以很容易切换到其它库实现需求。<ul><li><ol><li>从Jquery 切换到 Zepto</li></ol></li><li><ol start="2"><li>从 EJS 切换到 art-template</li></ol></li></ul></li></ul><h2 id="Node（后端）中的-MVC-与-前端中的-MVVM-之间的区别"><a href="#Node（后端）中的-MVC-与-前端中的-MVVM-之间的区别" class="headerlink" title="Node（后端）中的 MVC 与 前端中的 MVVM 之间的区别"></a>Node（后端）中的 MVC 与 前端中的 MVVM 之间的区别</h2><ul><li><p>MVC 是后端的分层开发概念；</p></li><li><p>MVVM是前端视图层的概念，主要关注于 视图层分离，也就是说：MVVM把前端的视图层，分为了 三部分 Model, View , VM ViewModel</p></li><li><p><img src="https://i.loli.net/2020/02/11/CxHjZAv9uUmcVSr.png" alt="01.MVC和MVVM的关系图解.png"></p></li><li><p>为什么有了MVC还要有MVVM</p></li></ul><h2 id="Vue-js-基本代码-和-MVVM-之间的对应关系"><a href="#Vue-js-基本代码-和-MVVM-之间的对应关系" class="headerlink" title="Vue.js 基本代码 和 MVVM 之间的对应关系"></a>Vue.js 基本代码 和 MVVM 之间的对应关系</h2><h2 id="Vue之-基本的代码结构和插值表达式、v-cloak"><a href="#Vue之-基本的代码结构和插值表达式、v-cloak" class="headerlink" title="Vue之 - 基本的代码结构和插值表达式、v-cloak"></a>Vue之 - <code>基本的代码结构</code>和<code>插值表达式</code>、<code>v-cloak</code></h2><h2 id="Vue指令之v-text和v-html"><a href="#Vue指令之v-text和v-html" class="headerlink" title="Vue指令之v-text和v-html"></a>Vue指令之<code>v-text</code>和<code>v-html</code></h2><h2 id="Vue指令之v-bind的三种用法"><a href="#Vue指令之v-bind的三种用法" class="headerlink" title="Vue指令之v-bind的三种用法"></a>Vue指令之<code>v-bind</code>的三种用法</h2><ol><li><p>直接使用指令<code>v-bind</code></p></li><li><p>使用简化指令<code>:</code></p></li><li><p>在绑定的时候，拼接绑定内容：<code>:title=&quot;btnTitle + &#39;, 这是追加的内容&#39;&quot;</code></p></li></ol><h2 id="Vue指令之v-on和跑马灯效果"><a href="#Vue指令之v-on和跑马灯效果" class="headerlink" title="Vue指令之v-on和跑马灯效果"></a>Vue指令之<code>v-on</code>和<code>跑马灯效果</code></h2><h3 id="跑马灯效果"><a href="#跑马灯效果" class="headerlink" title="跑马灯效果"></a>跑马灯效果</h3><ol><li>HTML结构：</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;p&gt;&#123;&#123;info&#125;&#125;&lt;&#x2F;p&gt;</span><br><span class="line"></span><br><span class="line">    &lt;input type&#x3D;&quot;button&quot; value&#x3D;&quot;开启&quot; v-on:click&#x3D;&quot;go&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;input type&#x3D;&quot;button&quot; value&#x3D;&quot;停止&quot; v-on:click&#x3D;&quot;stop&quot;&gt;</span><br><span class="line"></span><br><span class="line">  &lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>Vue实例：</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;&#x2F; 创建 Vue 实例，得到 ViewModel</span><br><span class="line"></span><br><span class="line">   var vm &#x3D; new Vue(&#123;</span><br><span class="line"></span><br><span class="line">     el: &#39;#app&#39;,</span><br><span class="line"></span><br><span class="line">     data: &#123;</span><br><span class="line"></span><br><span class="line">       info: &#39;猥琐发育，别浪~！&#39;,</span><br><span class="line"></span><br><span class="line">       intervalId: null</span><br><span class="line"></span><br><span class="line">     &#125;,</span><br><span class="line"></span><br><span class="line">     methods: &#123;</span><br><span class="line"></span><br><span class="line">       go() &#123;</span><br><span class="line"></span><br><span class="line">         &#x2F;&#x2F; 如果当前有定时器在运行，则直接return</span><br><span class="line"></span><br><span class="line">         if (this.intervalId !&#x3D; null) &#123;</span><br><span class="line"></span><br><span class="line">           return;</span><br><span class="line"></span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         &#x2F;&#x2F; 开始定时器</span><br><span class="line"></span><br><span class="line">         this.intervalId &#x3D; setInterval(() &#x3D;&gt; &#123;</span><br><span class="line"></span><br><span class="line">           this.info &#x3D; this.info.substring(1) + this.info.substring(0, 1);</span><br><span class="line"></span><br><span class="line">         &#125;, 500);</span><br><span class="line"></span><br><span class="line">       &#125;,</span><br><span class="line"></span><br><span class="line">       stop() &#123;</span><br><span class="line"></span><br><span class="line">         clearInterval(this.intervalId);</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">   &#125;);</span><br></pre></td></tr></table></figure><h2 id="Vue指令之v-on的缩写和事件修饰符"><a href="#Vue指令之v-on的缩写和事件修饰符" class="headerlink" title="Vue指令之v-on的缩写和事件修饰符"></a>Vue指令之<code>v-on的缩写</code>和<code>事件修饰符</code></h2><h3 id="事件修饰符："><a href="#事件修饰符：" class="headerlink" title="事件修饰符："></a>事件修饰符：</h3><ul><li><p>.stop 阻止冒泡</p></li><li><p>.prevent 阻止默认事件</p></li><li><p>.capture 添加事件侦听器时使用事件捕获模式</p></li><li><p>.self 只当事件在该元素本身（比如不是子元素）触发时触发回调</p></li><li><p>.once 事件只触发一次</p></li></ul><h2 id="Vue指令之v-model和双向数据绑定"><a href="#Vue指令之v-model和双向数据绑定" class="headerlink" title="Vue指令之v-model和双向数据绑定"></a>Vue指令之<code>v-model</code>和<code>双向数据绑定</code></h2><h2 id="简易计算器案例"><a href="#简易计算器案例" class="headerlink" title="简易计算器案例"></a>简易计算器案例</h2><ol><li>HTML 代码结构</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line"></span><br><span class="line">  &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;n1&quot;&gt;</span><br><span class="line"></span><br><span class="line">  &lt;select v-model&#x3D;&quot;opt&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;option value&#x3D;&quot;0&quot;&gt;+&lt;&#x2F;option&gt;</span><br><span class="line"></span><br><span class="line">    &lt;option value&#x3D;&quot;1&quot;&gt;-&lt;&#x2F;option&gt;</span><br><span class="line"></span><br><span class="line">    &lt;option value&#x3D;&quot;2&quot;&gt;*&lt;&#x2F;option&gt;</span><br><span class="line"></span><br><span class="line">    &lt;option value&#x3D;&quot;3&quot;&gt;÷&lt;&#x2F;option&gt;</span><br><span class="line"></span><br><span class="line">  &lt;&#x2F;select&gt;</span><br><span class="line"></span><br><span class="line">  &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;n2&quot;&gt;</span><br><span class="line"></span><br><span class="line">  &lt;input type&#x3D;&quot;button&quot; value&#x3D;&quot;&#x3D;&quot; v-on:click&#x3D;&quot;getResult&quot;&gt;</span><br><span class="line"></span><br><span class="line">  &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;result&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>Vue实例代码：</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;&#x2F; 创建 Vue 实例，得到 ViewModel</span><br><span class="line"></span><br><span class="line">   var vm &#x3D; new Vue(&#123;</span><br><span class="line"></span><br><span class="line">     el: &#39;#app&#39;,</span><br><span class="line"></span><br><span class="line">     data: &#123;</span><br><span class="line"></span><br><span class="line">       n1: 0,</span><br><span class="line"></span><br><span class="line">       n2: 0,</span><br><span class="line"></span><br><span class="line">       result: 0,</span><br><span class="line"></span><br><span class="line">       opt: &#39;0&#39;</span><br><span class="line"></span><br><span class="line">     &#125;,</span><br><span class="line"></span><br><span class="line">     methods: &#123;</span><br><span class="line"></span><br><span class="line">       getResult() &#123;</span><br><span class="line"></span><br><span class="line">         switch (this.opt) &#123;</span><br><span class="line"></span><br><span class="line">           case &#39;0&#39;:</span><br><span class="line"></span><br><span class="line">             this.result &#x3D; parseInt(this.n1) + parseInt(this.n2);</span><br><span class="line"></span><br><span class="line">             break;</span><br><span class="line"></span><br><span class="line">           case &#39;1&#39;:</span><br><span class="line"></span><br><span class="line">             this.result &#x3D; parseInt(this.n1) - parseInt(this.n2);</span><br><span class="line"></span><br><span class="line">             break;</span><br><span class="line"></span><br><span class="line">           case &#39;2&#39;:</span><br><span class="line"></span><br><span class="line">             this.result &#x3D; parseInt(this.n1) * parseInt(this.n2);</span><br><span class="line"></span><br><span class="line">             break;</span><br><span class="line"></span><br><span class="line">           case &#39;3&#39;:</span><br><span class="line"></span><br><span class="line">             this.result &#x3D; parseInt(this.n1) &#x2F; parseInt(this.n2);</span><br><span class="line"></span><br><span class="line">             break;</span><br><span class="line"></span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">   &#125;);</span><br></pre></td></tr></table></figure><h2 id="在Vue中使用样式"><a href="#在Vue中使用样式" class="headerlink" title="在Vue中使用样式"></a>在Vue中使用样式</h2><h3 id="使用class样式"><a href="#使用class样式" class="headerlink" title="使用class样式"></a>使用class样式</h3><ol><li><p>数组</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;h1 :class&#x3D;&quot;[&#39;red&#39;, &#39;thin&#39;]&quot;&gt;这是一个邪恶的H1&lt;&#x2F;h1&gt;</span><br></pre></td></tr></table></figure></li><li><p>数组中使用三元表达式</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;h1 :class&#x3D;&quot;[&#39;red&#39;, &#39;thin&#39;, isactive?&#39;active&#39;:&#39;&#39;]&quot;&gt;这是一个邪恶的H1&lt;&#x2F;h1&gt;</span><br></pre></td></tr></table></figure></li><li><p>数组中嵌套对象</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;h1 :class&#x3D;&quot;[&#39;red&#39;, &#39;thin&#39;, &#123;&#39;active&#39;: isactive&#125;]&quot;&gt;这是一个邪恶的H1&lt;&#x2F;h1&gt;</span><br></pre></td></tr></table></figure></li><li><p>直接使用对象</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;h1 :class&#x3D;&quot;&#123;red:true, italic:true, active:true, thin:true&#125;&quot;&gt;这是一个邪恶的H1&lt;&#x2F;h1&gt;</span><br></pre></td></tr></table></figure></li></ol><h3 id="使用内联样式"><a href="#使用内联样式" class="headerlink" title="使用内联样式"></a>使用内联样式</h3><ol><li><p>直接在元素上通过 <code>:style</code> 的形式，书写样式对象</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;h1 :style&#x3D;&quot;&#123;color: &#39;red&#39;, &#39;font-size&#39;: &#39;40px&#39;&#125;&quot;&gt;这是一个善良的H1&lt;&#x2F;h1&gt;</span><br></pre></td></tr></table></figure></li><li><p>将样式对象，定义到 <code>data</code> 中，并直接引用到 <code>:style</code> 中</p><ul><li>在data上定义样式：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">data: &#123;</span><br><span class="line">        h1StyleObj: &#123; color: &#39;red&#39;, &#39;font-size&#39;: &#39;40px&#39;, &#39;font-weight&#39;: &#39;200&#39; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在元素中，通过属性绑定的形式，将样式对象应用到元素中：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;h1 :style&#x3D;&quot;h1StyleObj&quot;&gt;这是一个善良的H1&lt;&#x2F;h1&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>在 <code>:style</code> 中通过数组，引用多个 <code>data</code> 上的样式对象</p><ul><li>在data上定义样式：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">data: &#123;</span><br><span class="line">        h1StyleObj: &#123; color: &#39;red&#39;, &#39;font-size&#39;: &#39;40px&#39;, &#39;font-weight&#39;: &#39;200&#39; &#125;,</span><br><span class="line">        h1StyleObj2: &#123; fontStyle: &#39;italic&#39; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在元素中，通过属性绑定的形式，将样式对象应用到元素中：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;h1 :style&#x3D;&quot;[h1StyleObj, h1StyleObj2]&quot;&gt;这是一个善良的H1&lt;&#x2F;h1&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="Vue指令之v-for和key属性"><a href="#Vue指令之v-for和key属性" class="headerlink" title="Vue指令之v-for和key属性"></a>Vue指令之<code>v-for</code>和<code>key</code>属性</h2><ol><li>迭代数组</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">  &lt;li v-for&#x3D;&quot;(item, i) in list&quot;&gt;索引：&#123;&#123;i&#125;&#125; --- 姓名：&#123;&#123;item.name&#125;&#125; --- 年龄：&#123;&#123;item.age&#125;&#125;&lt;&#x2F;li&gt;</span><br><span class="line">&lt;&#x2F;ul&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>迭代对象中的属性</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!-- 循环遍历对象身上的属性 --&gt;</span><br><span class="line"></span><br><span class="line">   &lt;div v-for&#x3D;&quot;(val, key, i) in userInfo&quot;&gt;&#123;&#123;val&#125;&#125; --- &#123;&#123;key&#125;&#125; --- &#123;&#123;i&#125;&#125;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>迭代数字</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;p v-for&#x3D;&quot;i in 10&quot;&gt;这是第 &#123;&#123;i&#125;&#125; 个P标签&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure><blockquote><p>2.2.0+ 的版本里，<strong>当在组件中使用</strong> v-for 时，key 现在是必须的。</p></blockquote><p>当 Vue.js 用 v-for 正在更新已渲染过的元素列表时，它默认用 “<strong>就地复用</strong>” 策略。如果数据项的顺序被改变，Vue将<strong>不是移动 DOM 元素来匹配数据项的顺序</strong>， 而是<strong>简单复用此处每个元素</strong>，并且确保它在特定索引下显示已被渲染过的每个元素。</p><p>为了给 Vue 一个提示，<strong>以便它能跟踪每个节点的身份，从而重用和重新排序现有元素</strong>，你需要为每项提供一个唯一 key 属性。</p><h2 id="Vue指令之v-if和v-show"><a href="#Vue指令之v-if和v-show" class="headerlink" title="Vue指令之v-if和v-show"></a>Vue指令之<code>v-if</code>和<code>v-show</code></h2><blockquote><p>一般来说，v-if 有更高的切换消耗而 v-show 有更高的初始渲染消耗。因此，如果需要频繁切换 v-show 较好，如果在运行时条件不大可能改变 v-if 较好。</p></blockquote><h2 id="品牌管理案例"><a href="#品牌管理案例" class="headerlink" title="品牌管理案例"></a>品牌管理案例</h2><h3 id="添加新品牌"><a href="#添加新品牌" class="headerlink" title="添加新品牌"></a>添加新品牌</h3><h3 id="删除品牌"><a href="#删除品牌" class="headerlink" title="删除品牌"></a>删除品牌</h3><h3 id="根据条件筛选品牌"><a href="#根据条件筛选品牌" class="headerlink" title="根据条件筛选品牌"></a>根据条件筛选品牌</h3><ol><li>1.x 版本中的filterBy指令，在2.x中已经被废除：</li></ol><p><a href="https://v1-cn.vuejs.org/api/#filterBy" target="_blank" rel="noopener">filterBy - 指令</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;tr v-for&#x3D;&quot;item in list | filterBy searchName in &#39;name&#39;&quot;&gt;</span><br><span class="line"></span><br><span class="line">  &lt;td&gt;&#123;&#123;item.id&#125;&#125;&lt;&#x2F;td&gt;</span><br><span class="line"></span><br><span class="line">  &lt;td&gt;&#123;&#123;item.name&#125;&#125;&lt;&#x2F;td&gt;</span><br><span class="line"></span><br><span class="line">  &lt;td&gt;&#123;&#123;item.ctime&#125;&#125;&lt;&#x2F;td&gt;</span><br><span class="line"></span><br><span class="line">  &lt;td&gt;</span><br><span class="line"></span><br><span class="line">    &lt;a href&#x3D;&quot;#&quot; @click.prevent&#x3D;&quot;del(item.id)&quot;&gt;删除&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line">  &lt;&#x2F;td&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;tr&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>在2.x版本中<a href="https://cn.vuejs.org/v2/guide/list.html#显示过滤-排序结果" target="_blank" rel="noopener">手动实现筛选的方式</a>：</li></ol><ul><li>筛选框绑定到 VM 实例中的 <code>searchName</code> 属性：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;hr&gt; 输入筛选名称：</span><br><span class="line"></span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;searchName&quot;&gt;</span><br></pre></td></tr></table></figure><ul><li>在使用 <code>v-for</code> 指令循环每一行数据的时候，不再直接 <code>item in list</code>，而是 <code>in</code> 一个 过滤的methods 方法，同时，把过滤条件<code>searchName</code>传递进去：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;tbody&gt;</span><br><span class="line"></span><br><span class="line">      &lt;tr v-for&#x3D;&quot;item in search(searchName)&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;td&gt;&#123;&#123;item.id&#125;&#125;&lt;&#x2F;td&gt;</span><br><span class="line"></span><br><span class="line">        &lt;td&gt;&#123;&#123;item.name&#125;&#125;&lt;&#x2F;td&gt;</span><br><span class="line"></span><br><span class="line">        &lt;td&gt;&#123;&#123;item.ctime&#125;&#125;&lt;&#x2F;td&gt;</span><br><span class="line"></span><br><span class="line">        &lt;td&gt;</span><br><span class="line"></span><br><span class="line">          &lt;a href&#x3D;&quot;#&quot; @click.prevent&#x3D;&quot;del(item.id)&quot;&gt;删除&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line">        &lt;&#x2F;td&gt;</span><br><span class="line"></span><br><span class="line">      &lt;&#x2F;tr&gt;</span><br><span class="line"></span><br><span class="line">    &lt;&#x2F;tbody&gt;</span><br></pre></td></tr></table></figure><ul><li><code>search</code> 过滤方法中，使用 数组的 <code>filter</code> 方法进行过滤：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">search(name) &#123;</span><br><span class="line"></span><br><span class="line">  return this.list.filter(x &#x3D;&gt; &#123;</span><br><span class="line"></span><br><span class="line">    return x.name.indexOf(name) !&#x3D; -1;</span><br><span class="line"></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Vue调试工具vue-devtools的安装步骤和使用"><a href="#Vue调试工具vue-devtools的安装步骤和使用" class="headerlink" title="Vue调试工具vue-devtools的安装步骤和使用"></a>Vue调试工具<code>vue-devtools</code>的安装步骤和使用</h2><p><a href="https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd?hl=zh-CN" target="_blank" rel="noopener">Vue.js devtools - 翻墙安装方式 - 推荐</a></p><h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><p>概念：Vue.js 允许你自定义过滤器，<strong>可被用作一些常见的文本格式化</strong>。过滤器可以用在两个地方：<strong>mustache 插值和 v-bind 表达式</strong>。过滤器应该被添加在 JavaScript 表达式的尾部，由“管道”符指示；</p><h3 id="私有过滤器"><a href="#私有过滤器" class="headerlink" title="私有过滤器"></a>私有过滤器</h3><ol><li>HTML元素：</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;td&gt;&#123;&#123;item.ctime | dataFormat(&#39;yyyy-mm-dd&#39;)&#125;&#125;&lt;&#x2F;td&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>私有 <code>filters</code> 定义方式：</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">filters: &#123; &#x2F;&#x2F; 私有局部过滤器，只能在 当前 VM 对象所控制的 View 区域进行使用</span><br><span class="line"></span><br><span class="line">    dataFormat(input, pattern &#x3D; &quot;&quot;) &#123; &#x2F;&#x2F; 在参数列表中 通过 pattern&#x3D;&quot;&quot; 来指定形参默认值，防止报错</span><br><span class="line"></span><br><span class="line">      var dt &#x3D; new Date(input);</span><br><span class="line"></span><br><span class="line">      &#x2F;&#x2F; 获取年月日</span><br><span class="line"></span><br><span class="line">      var y &#x3D; dt.getFullYear();</span><br><span class="line"></span><br><span class="line">      var m &#x3D; (dt.getMonth() + 1).toString().padStart(2, &#39;0&#39;);</span><br><span class="line"></span><br><span class="line">      var d &#x3D; dt.getDate().toString().padStart(2, &#39;0&#39;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      &#x2F;&#x2F; 如果 传递进来的字符串类型，转为小写之后，等于 yyyy-mm-dd，那么就返回 年-月-日</span><br><span class="line"></span><br><span class="line">      &#x2F;&#x2F; 否则，就返回  年-月-日 时：分：秒</span><br><span class="line"></span><br><span class="line">      if (pattern.toLowerCase() &#x3D;&#x3D;&#x3D; &#39;yyyy-mm-dd&#39;) &#123;</span><br><span class="line"></span><br><span class="line">        return &#96;$&#123;y&#125;-$&#123;m&#125;-$&#123;d&#125;&#96;;</span><br><span class="line"></span><br><span class="line">      &#125; else &#123;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 获取时分秒</span><br><span class="line"></span><br><span class="line">        var hh &#x3D; dt.getHours().toString().padStart(2, &#39;0&#39;);</span><br><span class="line"></span><br><span class="line">        var mm &#x3D; dt.getMinutes().toString().padStart(2, &#39;0&#39;);</span><br><span class="line"></span><br><span class="line">        var ss &#x3D; dt.getSeconds().toString().padStart(2, &#39;0&#39;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        return &#96;$&#123;y&#125;-$&#123;m&#125;-$&#123;d&#125; $&#123;hh&#125;:$&#123;mm&#125;:$&#123;ss&#125;&#96;;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><blockquote><p>使用ES6中的字符串新方法 String.prototype.padStart(maxLength, fillString=’’) 或 String.prototype.padEnd(maxLength, fillString=’’)来填充字符串；</p></blockquote><h3 id="全局过滤器"><a href="#全局过滤器" class="headerlink" title="全局过滤器"></a>全局过滤器</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;&#x2F; 定义一个全局过滤器</span><br><span class="line"></span><br><span class="line">Vue.filter(&#39;dataFormat&#39;, function (input, pattern &#x3D; &#39;&#39;) &#123;</span><br><span class="line"></span><br><span class="line">  var dt &#x3D; new Date(input);</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; 获取年月日</span><br><span class="line"></span><br><span class="line">  var y &#x3D; dt.getFullYear();</span><br><span class="line"></span><br><span class="line">  var m &#x3D; (dt.getMonth() + 1).toString().padStart(2, &#39;0&#39;);</span><br><span class="line"></span><br><span class="line">  var d &#x3D; dt.getDate().toString().padStart(2, &#39;0&#39;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; 如果 传递进来的字符串类型，转为小写之后，等于 yyyy-mm-dd，那么就返回 年-月-日</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; 否则，就返回  年-月-日 时：分：秒</span><br><span class="line"></span><br><span class="line">  if (pattern.toLowerCase() &#x3D;&#x3D;&#x3D; &#39;yyyy-mm-dd&#39;) &#123;</span><br><span class="line"></span><br><span class="line">    return &#96;$&#123;y&#125;-$&#123;m&#125;-$&#123;d&#125;&#96;;</span><br><span class="line"></span><br><span class="line">  &#125; else &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 获取时分秒</span><br><span class="line"></span><br><span class="line">    var hh &#x3D; dt.getHours().toString().padStart(2, &#39;0&#39;);</span><br><span class="line"></span><br><span class="line">    var mm &#x3D; dt.getMinutes().toString().padStart(2, &#39;0&#39;);</span><br><span class="line"></span><br><span class="line">    var ss &#x3D; dt.getSeconds().toString().padStart(2, &#39;0&#39;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    return &#96;$&#123;y&#125;-$&#123;m&#125;-$&#123;d&#125; $&#123;hh&#125;:$&#123;mm&#125;:$&#123;ss&#125;&#96;;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>注意：当有局部和全局两个名称相同的过滤器时候，会以就近原则进行调用，即：局部过滤器优先于全局过滤器被调用！</p></blockquote><h2 id="键盘修饰符以及自定义键盘修饰符"><a href="#键盘修饰符以及自定义键盘修饰符" class="headerlink" title="键盘修饰符以及自定义键盘修饰符"></a>键盘修饰符以及自定义键盘修饰符</h2><h3 id="1-x中自定义键盘修饰符【了解即可】"><a href="#1-x中自定义键盘修饰符【了解即可】" class="headerlink" title="1.x中自定义键盘修饰符【了解即可】"></a>1.x中自定义键盘修饰符【了解即可】</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Vue.directive(&#39;on&#39;).keyCodes.f2 &#x3D; 113;</span><br></pre></td></tr></table></figure><h3 id="2-x中自定义键盘修饰符"><a href="#2-x中自定义键盘修饰符" class="headerlink" title="2.x中自定义键盘修饰符"></a><a href="https://cn.vuejs.org/v2/guide/events.html#键值修饰符" target="_blank" rel="noopener">2.x中自定义键盘修饰符</a></h3><ol><li>通过<code>Vue.config.keyCodes.名称 = 按键值</code>来自定义案件修饰符的别名：</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Vue.config.keyCodes.f2 &#x3D; 113;</span><br></pre></td></tr></table></figure><ol start="2"><li>使用自定义的按键修饰符：</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;name&quot; @keyup.f2&#x3D;&quot;add&quot;&gt;</span><br></pre></td></tr></table></figure><h2 id="自定义指令"><a href="#自定义指令" class="headerlink" title="自定义指令"></a><a href="https://cn.vuejs.org/v2/guide/custom-directive.html" target="_blank" rel="noopener">自定义指令</a></h2><ol><li>自定义全局和局部的 自定义指令：</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;&#x2F; 自定义全局指令 v-focus，为绑定的元素自动获取焦点：</span><br><span class="line"></span><br><span class="line">Vue.directive(&#39;focus&#39;, &#123;</span><br><span class="line"></span><br><span class="line">  inserted: function (el) &#123; &#x2F;&#x2F; inserted 表示被绑定元素插入父节点时调用</span><br><span class="line"></span><br><span class="line">    el.focus();</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 自定义局部指令 v-color 和 v-font-weight，为绑定的元素设置指定的字体颜色 和 字体粗细：</span><br><span class="line"></span><br><span class="line">  directives: &#123;</span><br><span class="line"></span><br><span class="line">    color: &#123; &#x2F;&#x2F; 为元素设置指定的字体颜色</span><br><span class="line"></span><br><span class="line">      bind(el, binding) &#123;</span><br><span class="line"></span><br><span class="line">        el.style.color &#x3D; binding.value;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#39;font-weight&#39;: function (el, binding2) &#123; &#x2F;&#x2F; 自定义指令的简写形式，等同于定义了 bind 和 update 两个钩子函数</span><br><span class="line"></span><br><span class="line">      el.style.fontWeight &#x3D; binding2.value;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>自定义指令的使用方式：</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;searchName&quot; v-focus v-color&#x3D;&quot;&#39;red&#39;&quot; v-font-weight&#x3D;&quot;900&quot;&gt;</span><br></pre></td></tr></table></figure><h2 id="Vue-1-x-中-自定义元素指令【已废弃-了解即可】"><a href="#Vue-1-x-中-自定义元素指令【已废弃-了解即可】" class="headerlink" title="Vue 1.x 中 自定义元素指令【已废弃,了解即可】"></a>Vue 1.x 中 自定义元素指令【已废弃,了解即可】</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Vue.elementDirective(&#39;red-color&#39;, &#123;</span><br><span class="line">  bind: function () &#123;</span><br><span class="line">    this.el.style.color &#x3D; &#39;red&#39;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>使用方式：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;red-color&gt;1232&lt;&#x2F;red-color&gt;</span><br></pre></td></tr></table></figure><h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><ol><li><a href="https://v1-cn.vuejs.org/" target="_blank" rel="noopener">vue.js 1.x 文档</a></li><li><a href="https://cn.vuejs.org/" target="_blank" rel="noopener">vue.js 2.x 文档</a></li><li><a href="http://www.css88.com/archives/7715" target="_blank" rel="noopener">String.prototype.padStart(maxLength, fillString)</a></li><li><a href="http://www.cnblogs.com/wuhua1/p/6686237.html" target="_blank" rel="noopener">js 里面的键盘事件对应的键码</a></li><li><a href="http://www.cnblogs.com/kidney/p/6052935.html" target="_blank" rel="noopener">Vue.js双向绑定的实现原理</a></li></ol><!-- rebuild by neat -->]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Vue</tag>
      </tags>
  </entry>
</search>
