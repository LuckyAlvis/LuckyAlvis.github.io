<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>每日食谱</title>
    <url>/2020/04/11/%E6%AF%8F%E6%97%A5%E9%A3%9F%E8%B0%B1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Sat Apr 11 2020 22:39:41 GMT+0800 (CST) --><p><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1586625854415&di=8fd1a56359c315ec96c81bdb59a6173d&imgtype=0&src=http%3A%2F%2Fpic1.win4000.com%2Fwallpaper%2F1%2F53a15a1343174.jpg" alt></p><a id="more"></a><h1 id="起床-5-00"><a href="#起床-5-00" class="headerlink" title="起床 5:00"></a>起床 5:00</h1><h1 id="早餐-8-00"><a href="#早餐-8-00" class="headerlink" title="早餐 8:00"></a>早餐 8:00</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2个鸡蛋</span><br><span class="line">1杯燕麦</span><br><span class="line">1个苹果</span><br><span class="line">1块鸡胸</span><br><span class="line">1把坚果</span><br></pre></td></tr></table></figure><p>#练后餐 10:00</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1碗面条</span><br><span class="line">1勺蛋白</span><br></pre></td></tr></table></figure><p>#午餐 12:00</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">半斤牛奶</span><br><span class="line">1斤沙拉</span><br><span class="line">1块鸡胸</span><br><span class="line">1碗米饭</span><br><span class="line">1个鸡蛋</span><br><span class="line">1棵芹菜</span><br></pre></td></tr></table></figure><p>#加餐 15:00</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">半斤牛奶</span><br><span class="line">1个鸡蛋</span><br><span class="line">1碗米饭&#x2F;1杯燕麦</span><br><span class="line">1根香蕉</span><br></pre></td></tr></table></figure><h1 id="晚餐-18-00"><a href="#晚餐-18-00" class="headerlink" title="晚餐 18:00"></a>晚餐 18:00</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1斤沙拉</span><br><span class="line">2块鸡胸</span><br><span class="line">1碗米饭</span><br></pre></td></tr></table></figure><h1 id="加餐9-00"><a href="#加餐9-00" class="headerlink" title="加餐9:00"></a>加餐9:00</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1勺蛋白</span><br><span class="line">1杯燕麦</span><br></pre></td></tr></table></figure><h1 id="睡觉9-30-10-00"><a href="#睡觉9-30-10-00" class="headerlink" title="睡觉9:30-10:00"></a>睡觉9:30-10:00</h1><!-- rebuild by neat -->]]></content>
      <categories>
        <category>运动</category>
      </categories>
  </entry>
  <entry>
    <title>毕业设计【实验室管理系统】开发文档【新】</title>
    <url>/2020/03/26/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E3%80%90%E5%AE%9E%E9%AA%8C%E5%AE%A4%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E3%80%91%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E3%80%90%E6%96%B0%E3%80%91/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Sat Apr 11 2020 22:38:57 GMT+0800 (CST) --><p><img src="http://gb.cri.cn/mmsource/images/2014/04/08/69/14501388399028347293.jpg" alt></p><a id="more"></a><h1 id="一、使用MyBatis-Generator生成Entity类以及XXXMapper接口"><a href="#一、使用MyBatis-Generator生成Entity类以及XXXMapper接口" class="headerlink" title="一、使用MyBatis-Generator生成Entity类以及XXXMapper接口"></a>一、使用MyBatis-Generator生成Entity类以及XXXMapper接口</h1><h2 id="在XXXMapper-java接口中，添加需要的方法"><a href="#在XXXMapper-java接口中，添加需要的方法" class="headerlink" title="在XXXMapper.java接口中，添加需要的方法"></a>在XXXMapper.java接口中，添加需要的方法</h2><h2 id="在XXXMapper-xml文件中，添加"><a href="#在XXXMapper-xml文件中，添加" class="headerlink" title="在XXXMapper.xml文件中，添加"></a>在XXXMapper.xml文件中，添加</h2><h1 id="二、新建Mapper类（DAO）"><a href="#二、新建Mapper类（DAO）" class="headerlink" title="二、新建Mapper类（DAO）"></a>二、新建Mapper类（DAO）</h1><h2 id="在org-dai-mapper类中新建XXXMapper接口，写入要添加的方法："><a href="#在org-dai-mapper类中新建XXXMapper接口，写入要添加的方法：" class="headerlink" title="在org.dai.mapper类中新建XXXMapper接口，写入要添加的方法："></a>在org.dai.mapper类中新建XXXMapper接口，写入要添加的方法：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package org.dai.mapper;</span><br><span class="line"></span><br><span class="line">import org.dai.entity.Student;</span><br><span class="line"></span><br><span class="line">public interface StudentMapper &#123;</span><br><span class="line">    public void addStudent(Student student);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在org-dai-mapper包中新建XXXMapper-xml文件："><a href="#在org-dai-mapper包中新建XXXMapper-xml文件：" class="headerlink" title="在org.dai.mapper包中新建XXXMapper.xml文件："></a>在org.dai.mapper包中新建XXXMapper.xml文件：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line">  PUBLIC &quot;-&#x2F;&#x2F;mybatis.org&#x2F;&#x2F;DTD Mapper 3.0&#x2F;&#x2F;EN&quot;</span><br><span class="line">  &quot;http:&#x2F;&#x2F;mybatis.org&#x2F;dtd&#x2F;mybatis-3-mapper.dtd&quot;&gt;</span><br><span class="line">&lt;mapper namespace&#x3D;&quot;org.dai.mapper.StudentMapper&quot;&gt;</span><br><span class="line">	&lt;select id&#x3D;&quot;queryStudentByStuno&quot; parameterType&#x3D;&quot;int&quot; resultType&#x3D;&quot;org.dai.entity.Student&quot;&gt;</span><br><span class="line">		select * from Student where stuNo &#x3D; #&#123;stuNo&#125;</span><br><span class="line">	&lt;&#x2F;select&gt;</span><br><span class="line">	&lt;insert id&#x3D;&quot;addStudent&quot; parameterType&#x3D;&quot;org.dai.entity.Student&quot;&gt;</span><br><span class="line">		insert into Student values(#&#123;stuName&#125;,#&#123;stuAge&#125;,#&#123;stuNo&#125;)</span><br><span class="line">	&lt;&#x2F;insert&gt;</span><br><span class="line">&lt;&#x2F;mapper&gt;</span><br></pre></td></tr></table></figure><h1 id="三、新建XXXService接口"><a href="#三、新建XXXService接口" class="headerlink" title="三、新建XXXService接口"></a>三、新建XXXService接口</h1><h2 id="在org-dai-service包中新建XXXService接口，内容和XXXMapper接口一样"><a href="#在org-dai-service包中新建XXXService接口，内容和XXXMapper接口一样" class="headerlink" title="在org.dai.service包中新建XXXService接口，内容和XXXMapper接口一样"></a>在org.dai.service包中新建XXXService接口，内容和XXXMapper接口一样</h2><p><strong>Mapper接口</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package org.dai.mapper;</span><br><span class="line"></span><br><span class="line">import org.dai.entity.User;</span><br><span class="line"></span><br><span class="line">public interface UserMapper &#123;</span><br><span class="line">	void addUser(User user);</span><br><span class="line">	void deleteUserByUserID(int userID);</span><br><span class="line">	void updateUser(User user);</span><br><span class="line">	User queryUser(User user);</span><br><span class="line">	User queryUserByUserName(String userName);</span><br><span class="line">	User queryUserByUserID(int userID);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Service接口</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package org.dai.service;</span><br><span class="line"></span><br><span class="line">import org.dai.entity.User;</span><br><span class="line"></span><br><span class="line">public interface UserService &#123;</span><br><span class="line">	void addUser(User user);</span><br><span class="line">	void deleteUserByUserID(int userID);</span><br><span class="line">	void updateUser(User user);</span><br><span class="line">	User queryUser(User user);</span><br><span class="line">	User queryUserByUserName(String userName);</span><br><span class="line">	User queryUserByUserID(int userID);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="四、新建Service接口实现类XXXServiceImpl"><a href="#四、新建Service接口实现类XXXServiceImpl" class="headerlink" title="四、新建Service接口实现类XXXServiceImpl"></a>四、新建Service接口实现类XXXServiceImpl</h1><h2 id="在org-dai-service-impl包下新建XXXServiceImpl，实现XXXService接口"><a href="#在org-dai-service-impl包下新建XXXServiceImpl，实现XXXService接口" class="headerlink" title="在org.dai.service.impl包下新建XXXServiceImpl，实现XXXService接口"></a>在org.dai.service.impl包下新建XXXServiceImpl，实现XXXService接口</h2><h2 id="定义一个private属性xxxMapper，添加-Autowired注解"><a href="#定义一个private属性xxxMapper，添加-Autowired注解" class="headerlink" title="定义一个private属性xxxMapper，添加@Autowired注解"></a>定义一个private属性xxxMapper，添加@Autowired注解</h2><h2 id="实现接口中的方法，调用mapper中的方法"><a href="#实现接口中的方法，调用mapper中的方法" class="headerlink" title="实现接口中的方法，调用mapper中的方法"></a>实现接口中的方法，调用mapper中的方法</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Component</span><br><span class="line">public class PersonServiceImpl implements PersonService &#123;</span><br><span class="line"></span><br><span class="line">	@Autowired</span><br><span class="line">	private PersonMapper personMapper;</span><br><span class="line"></span><br><span class="line">	public void setPersonMapper(PersonMapper personMapper) &#123;</span><br><span class="line">		this.personMapper &#x3D; personMapper;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public int LoginById_Psd(Person person) &#123;</span><br><span class="line">		return personMapper.LoginById_Psd(person);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="五、新建XXXController类"><a href="#五、新建XXXController类" class="headerlink" title="五、新建XXXController类"></a>五、新建XXXController类</h1><h2 id="在org-dai-controller包下新建XXXController类，以作用对象进行区分"><a href="#在org-dai-controller包下新建XXXController类，以作用对象进行区分" class="headerlink" title="在org.dai.controller包下新建XXXController类，以作用对象进行区分"></a>在org.dai.controller包下新建XXXController类，以作用对象进行区分</h2><h2 id="添加-Controller，-RequestMapping，-ResponseBody等标记"><a href="#添加-Controller，-RequestMapping，-ResponseBody等标记" class="headerlink" title="添加@Controller，@RequestMapping，@ResponseBody等标记"></a>添加@Controller，@RequestMapping，@ResponseBody等标记</h2><h2 id="类的RequestMapping标记名与类名一致，方法的RequestMapping标记与方法名一致。"><a href="#类的RequestMapping标记名与类名一致，方法的RequestMapping标记与方法名一致。" class="headerlink" title="类的RequestMapping标记名与类名一致，方法的RequestMapping标记与方法名一致。"></a>类的RequestMapping标记名与类名一致，方法的RequestMapping标记与方法名一致。</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@RequestMapping(&quot;StudentController&quot;)</span><br><span class="line">@Controller</span><br><span class="line">public class StudentController &#123;</span><br><span class="line">	@Autowired</span><br><span class="line">	private StudentService studentService;</span><br><span class="line"></span><br><span class="line">	@ResponseBody</span><br><span class="line">	@RequestMapping(&quot;queryStudentByNo&quot;)&#x2F;&#x2F;@PathVariable(&quot;stuno&quot;) Integer stuNo,Map&lt;String&gt; map</span><br><span class="line">	public List&lt;Student&gt; queryStudentByNo() &#123;</span><br><span class="line">		List&lt;Student&gt; students &#x3D; new ArrayList&lt;Student&gt;();</span><br><span class="line">		students &#x3D; studentService.queryStudentByNo(stuNo);</span><br><span class="line">		Student S1 &#x3D; new Student(&quot;A&quot;,11,12);</span><br><span class="line">		Student S2 &#x3D; new Student(&quot;B&quot;,21,22);</span><br><span class="line">		Student S3 &#x3D; new Student(&quot;C&quot;,31,32);</span><br><span class="line">		students.add(S1);</span><br><span class="line">		students.add(S2);</span><br><span class="line">		students.add(S3);</span><br><span class="line">		return students;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PersonController类"><a href="#PersonController类" class="headerlink" title="PersonController类"></a>PersonController类</h3><ol><li>LoginById_Psd</li><li>ChangePsdById</li></ol><!-- rebuild by neat -->]]></content>
      <categories>
        <category>毕业设计-实验室管理系统</category>
      </categories>
      <tags>
        <tag>开发文档</tag>
      </tags>
  </entry>
  <entry>
    <title>毕业设计【实验室管理系统】开发文档</title>
    <url>/2020/03/22/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E3%80%90%E5%AE%9E%E9%AA%8C%E5%AE%A4%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E3%80%91%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Sun Mar 22 2020 18:31:45 GMT+0800 (CST) --><p><img src="http://gb.cri.cn/mmsource/images/2014/04/08/69/14501388399028347293.jpg" alt></p><a id="more"></a><h1 id="一、创建实体类"><a href="#一、创建实体类" class="headerlink" title="一、创建实体类"></a>一、创建实体类</h1><h2 id="在org-dai-entity包下新建XXX类，以表进行区分"><a href="#在org-dai-entity包下新建XXX类，以表进行区分" class="headerlink" title="在org.dai.entity包下新建XXX类，以表进行区分"></a>在org.dai.entity包下新建XXX类，以表进行区分</h2><h2 id="添加Setter，Getter以及构造方法"><a href="#添加Setter，Getter以及构造方法" class="headerlink" title="添加Setter，Getter以及构造方法"></a>添加Setter，Getter以及构造方法</h2><p><strong>需要的类：</strong><br>Person类</p><h1 id="二、新建Mapper类（DAO）"><a href="#二、新建Mapper类（DAO）" class="headerlink" title="二、新建Mapper类（DAO）"></a>二、新建Mapper类（DAO）</h1><h2 id="在org-dai-mapper类中新建XXXMapper接口，写入要添加的方法："><a href="#在org-dai-mapper类中新建XXXMapper接口，写入要添加的方法：" class="headerlink" title="在org.dai.mapper类中新建XXXMapper接口，写入要添加的方法："></a>在org.dai.mapper类中新建XXXMapper接口，写入要添加的方法：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package org.dai.mapper;</span><br><span class="line"></span><br><span class="line">import org.dai.entity.Student;</span><br><span class="line"></span><br><span class="line">public interface StudentMapper &#123;</span><br><span class="line">    public void addStudent(Student student);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在org-dai-mapper包中新建XXXMapper-xml文件："><a href="#在org-dai-mapper包中新建XXXMapper-xml文件：" class="headerlink" title="在org.dai.mapper包中新建XXXMapper.xml文件："></a>在org.dai.mapper包中新建XXXMapper.xml文件：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line">  PUBLIC &quot;-&#x2F;&#x2F;mybatis.org&#x2F;&#x2F;DTD Mapper 3.0&#x2F;&#x2F;EN&quot;</span><br><span class="line">  &quot;http:&#x2F;&#x2F;mybatis.org&#x2F;dtd&#x2F;mybatis-3-mapper.dtd&quot;&gt;</span><br><span class="line">&lt;mapper namespace&#x3D;&quot;org.dai.mapper.StudentMapper&quot;&gt;</span><br><span class="line">	&lt;select id&#x3D;&quot;queryStudentByStuno&quot; parameterType&#x3D;&quot;int&quot; resultType&#x3D;&quot;org.dai.entity.Student&quot;&gt;</span><br><span class="line">		select * from Student where stuNo &#x3D; #&#123;stuNo&#125;</span><br><span class="line">	&lt;&#x2F;select&gt;</span><br><span class="line">	&lt;insert id&#x3D;&quot;addStudent&quot; parameterType&#x3D;&quot;org.dai.entity.Student&quot;&gt;</span><br><span class="line">		insert into Student values(#&#123;stuName&#125;,#&#123;stuAge&#125;,#&#123;stuNo&#125;)</span><br><span class="line">	&lt;&#x2F;insert&gt;</span><br><span class="line">&lt;&#x2F;mapper&gt;</span><br></pre></td></tr></table></figure><h1 id="三、新建XXXService接口"><a href="#三、新建XXXService接口" class="headerlink" title="三、新建XXXService接口"></a>三、新建XXXService接口</h1><h2 id="在org-dai-service包中新建XXXService接口，内容和XXXMapper接口一样"><a href="#在org-dai-service包中新建XXXService接口，内容和XXXMapper接口一样" class="headerlink" title="在org.dai.service包中新建XXXService接口，内容和XXXMapper接口一样"></a>在org.dai.service包中新建XXXService接口，内容和XXXMapper接口一样</h2><p><strong>Mapper接口</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package org.dai.mapper;</span><br><span class="line"></span><br><span class="line">import org.dai.entity.User;</span><br><span class="line"></span><br><span class="line">public interface UserMapper &#123;</span><br><span class="line">	void addUser(User user);</span><br><span class="line">	void deleteUserByUserID(int userID);</span><br><span class="line">	void updateUser(User user);</span><br><span class="line">	User queryUser(User user);</span><br><span class="line">	User queryUserByUserName(String userName);</span><br><span class="line">	User queryUserByUserID(int userID);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Service接口</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package org.dai.service;</span><br><span class="line"></span><br><span class="line">import org.dai.entity.User;</span><br><span class="line"></span><br><span class="line">public interface UserService &#123;</span><br><span class="line">	void addUser(User user);</span><br><span class="line">	void deleteUserByUserID(int userID);</span><br><span class="line">	void updateUser(User user);</span><br><span class="line">	User queryUser(User user);</span><br><span class="line">	User queryUserByUserName(String userName);</span><br><span class="line">	User queryUserByUserID(int userID);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="四、新建Service接口实现类XXXServiceImpl"><a href="#四、新建Service接口实现类XXXServiceImpl" class="headerlink" title="四、新建Service接口实现类XXXServiceImpl"></a>四、新建Service接口实现类XXXServiceImpl</h1><h2 id="在org-dai-service-impl包下新建XXXServiceImpl，实现XXXService接口"><a href="#在org-dai-service-impl包下新建XXXServiceImpl，实现XXXService接口" class="headerlink" title="在org.dai.service.impl包下新建XXXServiceImpl，实现XXXService接口"></a>在org.dai.service.impl包下新建XXXServiceImpl，实现XXXService接口</h2><h2 id="定义一个private属性xxxMapper，添加-Autowired注解"><a href="#定义一个private属性xxxMapper，添加-Autowired注解" class="headerlink" title="定义一个private属性xxxMapper，添加@Autowired注解"></a>定义一个private属性xxxMapper，添加@Autowired注解</h2><h2 id="实现接口中的方法，调用mapper中的方法"><a href="#实现接口中的方法，调用mapper中的方法" class="headerlink" title="实现接口中的方法，调用mapper中的方法"></a>实现接口中的方法，调用mapper中的方法</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Component</span><br><span class="line">public class PersonServiceImpl implements PersonService &#123;</span><br><span class="line"></span><br><span class="line">	@Autowired</span><br><span class="line">	private PersonMapper personMapper;</span><br><span class="line"></span><br><span class="line">	public void setPersonMapper(PersonMapper personMapper) &#123;</span><br><span class="line">		this.personMapper &#x3D; personMapper;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public int LoginById_Psd(Person person) &#123;</span><br><span class="line">		return personMapper.LoginById_Psd(person);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="五、新建XXXController类"><a href="#五、新建XXXController类" class="headerlink" title="五、新建XXXController类"></a>五、新建XXXController类</h1><h2 id="在org-dai-controller包下新建XXXController类，以作用对象进行区分"><a href="#在org-dai-controller包下新建XXXController类，以作用对象进行区分" class="headerlink" title="在org.dai.controller包下新建XXXController类，以作用对象进行区分"></a>在org.dai.controller包下新建XXXController类，以作用对象进行区分</h2><h2 id="添加-Controller，-RequestMapping，-ResponseBody等标记"><a href="#添加-Controller，-RequestMapping，-ResponseBody等标记" class="headerlink" title="添加@Controller，@RequestMapping，@ResponseBody等标记"></a>添加@Controller，@RequestMapping，@ResponseBody等标记</h2><h2 id="类的RequestMapping标记名与类名一致，方法的RequestMapping标记与方法名一致。"><a href="#类的RequestMapping标记名与类名一致，方法的RequestMapping标记与方法名一致。" class="headerlink" title="类的RequestMapping标记名与类名一致，方法的RequestMapping标记与方法名一致。"></a>类的RequestMapping标记名与类名一致，方法的RequestMapping标记与方法名一致。</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@RequestMapping(&quot;StudentController&quot;)</span><br><span class="line">@Controller</span><br><span class="line">public class StudentController &#123;</span><br><span class="line">	@Autowired</span><br><span class="line">	private StudentService studentService;</span><br><span class="line"></span><br><span class="line">	@ResponseBody</span><br><span class="line">	@RequestMapping(&quot;queryStudentByNo&quot;)&#x2F;&#x2F;@PathVariable(&quot;stuno&quot;) Integer stuNo,Map&lt;String&gt; map</span><br><span class="line">	public List&lt;Student&gt; queryStudentByNo() &#123;</span><br><span class="line">		List&lt;Student&gt; students &#x3D; new ArrayList&lt;Student&gt;();</span><br><span class="line">		students &#x3D; studentService.queryStudentByNo(stuNo);</span><br><span class="line">		Student S1 &#x3D; new Student(&quot;A&quot;,11,12);</span><br><span class="line">		Student S2 &#x3D; new Student(&quot;B&quot;,21,22);</span><br><span class="line">		Student S3 &#x3D; new Student(&quot;C&quot;,31,32);</span><br><span class="line">		students.add(S1);</span><br><span class="line">		students.add(S2);</span><br><span class="line">		students.add(S3);</span><br><span class="line">		return students;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PersonController类"><a href="#PersonController类" class="headerlink" title="PersonController类"></a>PersonController类</h3><ol><li>LoginById_Psd</li><li>ChangePsdById</li></ol><!-- rebuild by neat -->]]></content>
      <categories>
        <category>毕业设计-实验室管理系统</category>
      </categories>
      <tags>
        <tag>开发文档</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue问题汇总</title>
    <url>/2020/03/13/Vue%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri Mar 13 2020 00:39:31 GMT+0800 (CST) --><p><a href="https://www.cnblogs.com/qiuchuanji/p/10048805.html" target="_blank" rel="noopener">vue-cli的项目中关于axios的全局配置</a></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>晴耕雨读</title>
    <url>/2020/02/22/%E6%99%B4%E8%80%95%E9%9B%A8%E8%AF%BB/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Tue Mar 10 2020 11:37:31 GMT+0800 (CST) --><p><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583821458992&di=e9162c5800b51e86cde3040cdabf8ed5&imgtype=0&src=http%3A%2F%2Fimg1.qunarzz.com%2Ftravel%2Fpoi%2F1412%2F69%2F691b0a7588376243cdb.jpg_r_1024x683x95_bc76d2dc.jpg" alt></p><a id="more"></a><p>常听人说，太舒服的路，往往是下坡路。</p><p>人为生活去拼搏，拼搏的目的是更好的生活。拼搏的过程，就是人生上坡路。物质上从无到有，精神上从学知识到产生智慧。幸亏世界总是不完美，而人类至今一直走的是上坡路，总在不断追求不断完善。</p><p>问题是，上坡意味着辛苦，而辛苦总是有被迫而为的因素；下坡意味着舒服，而舒服正是人类拼搏的动力所在。</p><p>所以说，智者止步于有度，知道物极必反；愚者荒淫无度，放纵不止。有度者，张驰并重，谋而后动，享乐而不贪，拼搏而不过，得失平常心，起伏进退皆自在自如，乃至于当仁不让，甚至可以视死如归。无度者则正相反。</p><p>故有度与无度，既是哲学命题，是人生两种价值观的选择，也是评判生命质量好坏的核心衡量标准。有度意味着品味与境界，是真正的人格，而无度就是无脑，永远囿于欲，纵欲不止，只是走肉。这就是本文开头那句话的警示意义所在。</p><p>安逸不能长久，久则不思进取，终丧生存能力；舒服不得长久，久而懒于思考，终必反噬自己。习惯了下坡路，惊回首，千帆已过，而逝者如斯夫。</p><p>“正在毁掉我们的，不是我们所憎恨的东西，恰恰是我们所热爱的东西。”这是尼尔.波兹曼1985年出版《娱乐致死》这本书中的警言。三十多年过去了，科技越来越进步，生活越来越舒服，自由度越来越高。然而发现没？人类思考的能力也越来越弱，情绪化日益严重。只要金牌在，谁去管金牌背后的团队、拼搏往事、体育精神？一旦成功，谁在意堆积如山的日复一日、前赴后继的推波助澜、默默无闻的平淡与真实？大家放纵于煽情视频，炫耀于短平快，向往于不劳而获，沉迷于一夜成名。这个世界越来越验证了他的预言。</p><p>归于理性，守于有度，是不丧失人伦的世纪呐喊。</p><p>再推荐一部电影，艾瑞克.瓦利执导的《喜马拉雅》。与灵魂共舞的配乐，还有刻骨铭心那句话：“当你面前有两条路时，选最难的那条路”。</p><p>人类，为什么要刻意守拙，刻意不取巧，有意考验自己，有心迎接挑战？是人性的光辉，是人类的大智慧。动物永远不会这样。</p><p>这便是美术馆里高悬的匾额“欲培福地耕心地，且种书田作稻田”的真实意义。</p><p>老实讲，如果没有这种智慧，当幸福来临之际，你都无眼辨明、不懂享用，这是极大的愚蠢，是真正的没有福气。</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title>《考研英语阅读理解精读100篇》</title>
    <url>/2020/02/22/%E3%80%8A%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3%E7%B2%BE%E8%AF%BB100%E7%AF%87%E3%80%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Tue Mar 10 2020 11:37:31 GMT+0800 (CST) --><p><img src="https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=2811584385,4107951140&fm=26&gp=0.jpg" alt></p><a id="more"></a><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=33875750&auto=1&height=66"></iframe><h1 id="Unit-1"><a href="#Unit-1" class="headerlink" title="Unit 1"></a>Unit 1</h1><h2 id="Text-1"><a href="#Text-1" class="headerlink" title="Text 1"></a>Text 1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">behemoth 巨大的，高大的，巨兽，河马</span><br><span class="line">release 释放，发行，发布</span><br><span class="line">earnings 收入</span><br><span class="line">maturation 化脓，成熟</span><br><span class="line">fuel 得到燃料，供以燃料，燃料</span><br><span class="line">hype 大肆宣传；使...兴奋</span><br><span class="line">fall off 跌落，下降，偏离</span><br><span class="line">compensate 补偿，报酬</span><br><span class="line">push into 推进，推动（做某事）</span><br><span class="line">lower-margin 低利润</span><br><span class="line">    margin 页面空白，边缘，差数，差额，余地</span><br><span class="line">related 相关的，讲述的，有关系关联的</span><br><span class="line">sag [n][v]向下凹或者中间下陷</span><br><span class="line">accidentally 偶然地，意外地，非故意的</span><br><span class="line">clerical 文书的，办事员的；牧师的，教士的；教权主义</span><br><span class="line">reveal 显示，露出，泄漏，透露</span><br><span class="line">worrisome 令人不安的</span><br><span class="line">plow 耕，犁，艰苦前进，在考试中淘汰；[n]犁</span><br><span class="line">hardware 五金器具，硬件</span><br><span class="line">take a big bet on 下了一大笔赌注</span><br><span class="line">counterweight 平衡物，平衡力</span><br><span class="line">big thing 热门事件</span><br><span class="line">foray 突袭，侵略，攻击</span><br><span class="line">handsets 手机，电话听筒</span><br><span class="line">acquisition 获得，得到，获得者，获得物</span><br><span class="line">    acquisition aggrement 收购协议</span><br><span class="line">    acquisition of 收购</span><br><span class="line">take out of 取出，除去，将...带出，要赔偿</span><br><span class="line">quarterly [n]季刊 [adj&#x2F;v]一年四次的&#x2F;地，每季的</span><br><span class="line">profitability 获利情况，盈利情况</span><br><span class="line">get traffic 获得流量</span><br><span class="line">hype 大肆宣传；使...兴奋</span><br><span class="line">resemblance 相似，形似</span><br><span class="line">innovative 新发明的，新引进的，革新的，有改革精神的</span><br><span class="line">ironically 嘲讽地，挖苦地，具有讽刺意味地</span><br><span class="line">slug it out 决一雌雄</span><br><span class="line">indifference 不关心，不在乎，漠然</span><br><span class="line">glee 快乐，欢欣</span><br><span class="line">steady 稳定的，不变的，沉着的，稳定</span><br><span class="line">devise 想出，计划，设计，发明</span><br></pre></td></tr></table></figure><h2 id="Text-2"><a href="#Text-2" class="headerlink" title="Text 2"></a>Text 2</h2><!-- rebuild by neat -->]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英文短文阅读</tag>
      </tags>
  </entry>
  <entry>
    <title>ContentType，charset和pageEncoding的区别</title>
    <url>/2020/02/21/ContentType%EF%BC%8Ccharset%E5%92%8CpageEncoding%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri Feb 21 2020 16:06:10 GMT+0800 (GMT+08:00) --><h1 id="说法一"><a href="#说法一" class="headerlink" title="说法一"></a>说法一</h1><p>ContentType 属性指定响应的 HTTP 内容类型。如果未指定 ContentType，默认为 text/HTML。 　　语法　　Response.ContentType [= ContentType ] 　　参数 　　ContentType</p><p>pageEncoding是jsp文件本身的编码</p><p>contentType的charset是指服务器发送给客户端时的内容编码</p><p>JSP要经过两次的“编码”，第一阶段会用pageEncoding，第二阶段会用utf-8至utf-8，第三阶段就是由Tomcat出来的网页， 用的是contentType。</p><a id="more"></a><p>第一阶段是jsp编译成.java，它会根据pageEncoding的设定读取jsp，结果是由指定的编码方案翻译成统一的UTF-8 JAVA源码（即.java），如果pageEncoding设定错了，或没有设定，出来的就是中文乱码。</p><p>第二阶段是由JAVAC的JAVA源码至java byteCode的编译，不论JSP编写时候用的是什么编码方案，经过这个阶段的结果全部是UTF-8的encoding的java源码。</p><p>pageEncoding：设置JSP源文件和响应正文中的字符集编码。<br>contentType：设置JSP源文件和响应正文的字符集编码及MIME类型。</p><p>可见,pageEncoding和contentType都可以设置JSP源文件和响应正文中的字符集编码。但也有区别:<br>设置JSP源文件字符集时,优先级为pageEncoding&gt;contentType。如果都没有设置，默认ISO-8859-1。<br>设置响应输出的字符集时,优先级为contentType&gt;pageEncoding。如果都没有设置，默认ISO-8859-1。</p><p>可以简单认为是，pageEncoding是jsp文件本身的编码；contentType的charset是指服务器发送给客户端时的内容编码。例如：pageEncoding=”GBK”。这句话的意思是，告诉JVM 这个jsp本身采用的”GBK”编码,在JSP编译成Servlet传给JVM的时候，就用“GBK”的编码方式将Jsp网页源文件翻译成统一的UTF-8形式的Java字节码。如果不加设定，则JVM默认的用ISO-8859-1这种编码方式。contentType里的charset=gbk，指的是此网页文件输出到浏览器的输出方式为gbk。在这个过程中，一个JSP的源文件需要经过三个阶段，两次编码，才能完成一次完整的输出。</p><p>第一阶段：将jsp编译成Servlet（.java）文件。用到的指令是pageEncoding，根据pageEncoding＝“XXX”的指示，找到编码的规则为“XXX”，服务器在将JSP文件编译成.java文件时会根据pageEncoding的设定读取jsp，结果是由指定的编码方案翻译成统一的UTF-8编码的JAVA源码（即.java）。<br>第二阶段：从Servlet文件（.java）到Java字节码文件（.class），从UTF-8到UTF-8。在这一阶段中，不论JSP编写时候用的是什么编码方案，经过这个阶段的结果全部是UTF-8的encoding的java源码。JAVAC用UTF-8的encoding读取java源码，编译成UTF-8编码的二进制码（即.class），这是JVM对常数字串在二进制码（java encoding）内表达的规范。这一过程是由JVM的内在规范决定的，不受外界控制。<br>第三阶段：从服务器到浏览器，这在一过程中用到的指令是contentType。服务器载入和执行由第二阶段生成出来JAVA二进制码，输出的结果，也就是在客户端可见到的结果，在这次输出过程中，由contentType属性中的charset来指定，将UTF8形式的二进制码以charset的编码形式来输出。如果没有人为设定，则默认的是ISO-8859-1的形式。</p><h1 id="说法二"><a href="#说法二" class="headerlink" title="说法二"></a>说法二</h1><p>“ContentType” (描述内容类型的字符串。该字符串通常被格式化为类型/子类型，其中类型是常规内容范畴而子类为特定内容类型)</p><p>一句话总结就是，服务器响应客户端是以”ContentType” 的类型来响应的。这个很容易理解，但是在百度百科里面看了一下发现问题了，在contenttype里面有一个属性是charset 指定编码的，而pagEncoding也是编码的，这两个编码有什么区别呢？</p><p>查阅了资料之后有了深刻的了解！</p><p>pageEncoding是jsp文件本身的编码</p><p>contentType的charset是指服务器发送给客户端时的内容编码</p><p>JSP要经过两次的”编码”，第一阶段会用pageEncoding，第二阶段会用utf-8至utf-8，第三阶段就是由Tomcat出来的网页，用的是contentType</p><p>第一阶段是jsp编译成.java，它会根据pageEncoding的设定读取jsp，结果是由指定的编码方案翻译成统一的UTF-8 JAVA源码（即.java），如果pageEncoding设定错了，或没有设定，出来的就是中文乱码。</p><p>第二阶段是由JAVAC的JAVA源码至java byteCode的编译，不论JSP编写时候用的是什么编码方案，经过这个阶段的结果全部是UTF-8的encoding的java源码。</p><p>JAVAC用UTF-8的encoding读取java源码，编译成UTF-8 encoding的二进制码（即.class），这是JVM对常数字串在二进制码（java encoding）内表达的规范。</p><p>第三阶段是Tomcat（或其的application container）载入和执行阶段二的来的JAVA二进制码，输出的结果，也就是在客户端见到的，这时隐藏在阶段一和阶段二的参数contentType就发挥了功效</p><p>contentType的设定.</p><p>pageEncoding 和contentType的预设都是 ISO8859-1. 而随便设定了其中一个, 另一个就跟着一样了(TOMCAT4.1.27是如此). 但这不是绝对的, 这要看各自JSPC的处理方式. 而pageEncoding不等于contentType,</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">　　&lt;%@ page contentType&#x3D;&quot;text&#x2F;html;charset&#x3D;utf-8&quot; %&gt;</span><br></pre></td></tr></table></figure><p>记得老师上课讲的时候遇到了下面这种情况 他的处理办法是把utf-8改成了gbk,</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">　　&lt;%@ page contentType&#x3D;&quot;text&#x2F;html;charset&#x3D;gbk&quot; %&gt;</span><br></pre></td></tr></table></figure><p>貌似就是利用了随便改变其中一个另一个就跟着变的原理吧。实际上正规的该法应该是</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">　　&lt;%@ page contentType&#x3D;&quot;text&#x2F;html;charset&#x3D;utf-8&quot; pageEncoding&#x3D;&quot;GBK&quot;%&gt;</span><br></pre></td></tr></table></figure><p>但是如果改成了这样，在服务器端收到的获取的中文不是乱码，但是在客户端打开的还是乱码，因为charset=utf-8” 中charset指定了，输出到客户端的是utf-8的编码，所以想正规的该法应该改成</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">　　&lt;%@ page contentType&#x3D;&quot;text&#x2F;html;charset&#x3D;gbk&quot; pageEncoding&#x3D;&quot;GBK&quot;%&gt;</span><br></pre></td></tr></table></figure><p>貌似这样写，还不如</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">　　&lt;%@ page contentType&#x3D;&quot;text&#x2F;html;charset&#x3D;gbk&quot; %&gt;</span><br></pre></td></tr></table></figure><p>简单呢， 看来以后自己还是用 这种简单的写法吧！</p><p>纯属个人自学的理解。如果错误还望指出</p><h1 id="说法三"><a href="#说法三" class="headerlink" title="说法三"></a>说法三</h1><h2 id="名词解释及其作用"><a href="#名词解释及其作用" class="headerlink" title="名词解释及其作用"></a>名词解释及其作用</h2><pre><code>1. contentType: &lt;%@ page contentType=&quot;text/html; charset=UTF-8&quot;%&gt;   

2. pageEncoding:&lt;%@ page pageEncoding=&quot;UTF-8&quot;%&gt;   

3. html页面charset:&lt;META http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;   

4. setCharacterEncoding:request.setCharacterEncoding(),response.setCharacterEncoding()  

5. setContentType:response.setContentType()  

6. setHeader: response.setHeader()  

7. jsp页面编码: jsp文件本身的编码  

8. web页面显示编码:jsp的输出流在浏览器中显示的编码  

9. web页面输入编码: 输入框输入的字体编码  

10. web服务器输入的请求流: web Server相应浏览器的请求数据  

11. web服务器输出的响应流: web Server相应浏览器的输出数据  </code></pre><p>他们之间的相互影响和作用域,以及先后作用顺序</p><pre><code>1. pageEncoding: 只是指明了 JSP 页面本身的编码格式，跟页面显示的编码没有关系;  

容器在读取(文件)或者(数据库)或者(字符串常量)时将起转化为内部使用的 Unicode,而页面显示的时候将  </code></pre><p>内部的Unicode转换为contentType指定的编码后显示页面内容;</p><pre><code>如果pageEncoding属性存在，那么JSP页面的字符编码方式就由pageEncoding决定，  

否则就由contentType属性中的charset决定，如果charset也不存在，JSP页面的字符编码方式就采用  

默认的ISO-8859-1。  

2. contentType: 指定了MIME类型和JSP页面回应时的字符编码方式。MIME类型的默认值是“text/html”;   

字符编码方式的默认值是“ISO-8859-1”. MIME类型和字符编码方式由分号隔开;  </code></pre><p>pageEncoding和contentType的关系:</p><pre><code>1. pageEncoding的内容只是用于jsp输出时的编码，不会作为header发出去的; 是告诉web Server   

jsp页面按照什么编码输出,即web服务器输出的响应流的编码;  

2. 第一阶段是jsp编译成.java，它会根据pageEncoding的设定读取jsp，结果是由指定的编码方案翻译成统一的UTF-8 JAVA源码（即.java）.  

3. 第二阶段是由JAVAC的JAVA源码至java byteCode的编译，不论JSP编写时候用的是什么编码方案，经过这个阶段的结果全部是UTF-8的encoding的java源码.JAVAC用UTF-8的encoding读取java源码，编译成UTF-8 encoding的二进制码（即.class），这是JVM对常数字串在二进制码（java encoding）内表达的规范.

4. 第三阶段是Tomcat（或其的application container）载入和执行阶段二的来的JAVA二进制码，输出的结果，也就是在客户端见到的，这时隐藏在阶段一和阶段二的参数contentType就发挥了功效和contentType效果一样的设置方式还有 html页面charset,response.setCharacterEncoding(),response.setContentType(),response.setHeader();response.setContentType(),response.setHeader();优先级最好,其次是response.setCharacterEncoding();再者是&lt;%@page contentType=&quot;text/html;chareset=gbk&quot;%&gt;,最后是&lt;meta http-equiv=&quot;content-type&quot;content=&quot;text/html; charset=gb2312&quot; /&gt;.  

5. web页面输入编码: 在设置页面编码&lt;%@page contentType=&quot;text/html; chareset=gbk&quot;%&gt;的同时，也就指定了页面的输入编码;如果页面的显示被设置为UTF-8，那么用户所有的页面输入都会按照 UTF-8 编码; 服务器端程序在读取表单输入之前要设定输入编码; 表单被提交后，浏览器会将表单字段值转换为指定字符集对应的字节值，然后根据 HTTP 标准 URL编码方案对结果字节进行编码.但是页面需要告诉服务器当前页面的编码方式;request.setCharacterEncoding(),能修改Serverlet获取请求的编码,response.setCharacterEncoding(),能修改Serverlet返回结果的编码.</code></pre><p>或者用下面来说明：</p><ul><li><strong>pageEncoding是设置的JSP页面源代码的字符编码格式</strong>，如果该项的值是utf-8，则JSP源代码里不能写汉字了，如果你用的是eclipse等工具的话，保存时他会提示有一个错误，改成gbk就没事了，就是这个道理</li><li><strong>charset是请求服务器以后返回过来的内容的字符编码</strong>，即使pageEncoding设置了gbk，保存，运行程序，查看页面时会发现刚才写的汉字不能正常显示，把charset改成gbk，正常JSP要经过两次的“编码”，第一阶段会用pageEncoding，第二阶段会用utf-8至utf-8，第三阶段就是由Tomcat返回来的网页，用的是charset。</li></ul><h3 id="第一阶段"><a href="#第一阶段" class="headerlink" title="第一阶段"></a>第一阶段</h3><p>是jsp编译成.java，它会根据pageEncoding的设定读取jsp，结果是由指定的编码方案翻译成统一的UTF-8 JAVA源码（即.java），如果pageEncoding设定错了，或没有设定，出来的就是中文乱码。</p><h3 id="第二阶段"><a href="#第二阶段" class="headerlink" title="第二阶段"></a>第二阶段</h3><p>是由JAVAC的JAVA源码至java byteCode的编译，不论JSP编写时候用的是什么编码方案，经过这个阶段的结果全部是UTF-8的encoding的java源码。</p><h3 id="第三阶段"><a href="#第三阶段" class="headerlink" title="第三阶段"></a>第三阶段</h3><p>是Tomcat（或其的application container）载入和执行阶段，输出的结果，也就是在客户端见到的，这时隐藏在阶段一和阶段二的参数contentType就发挥了功效。</p><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>在设置JSP页面源代码字符编码的时候，如果有pageEncoding这一项，则采取这一项的值，如果没有，采取charset的值，如果都没有，采取iso8859-1。pageEncoding 和contentType的预设都是 ISO8859-1. 而随便设定了其中一个, 另一个就跟着一样了(TOMCAT4.1.27是如此). 但这不是绝对的, 这要看各自JSP容器的处理方式.</p><p>如：在Tomcat中如果在jsp中设定了pageEncoding，则contentType也跟着设定成相同的编码了,但是在resion中就不是，resin中还会用默认的，这点通过查看编译后的类servlet java文件就可以看到这一点，而问题恰恰就出在这里，所以，在jsp中，如果是在resin下最好还是明确的单独设定这2个属性。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>通常我们在JSP页面设定<code>&lt;%@ page contentType=&quot;text/html;charset=GB2312&quot;%&gt;</code>即可。</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>JavaWeb</tag>
      </tags>
  </entry>
  <entry>
    <title>训练计划</title>
    <url>/2020/02/17/%E8%AE%AD%E7%BB%83%E8%AE%A1%E5%88%92/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri Feb 21 2020 16:05:06 GMT+0800 (GMT+08:00) --><h1 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h1><p>体重：70kg（154磅）<br>基础代谢量：154 * 11 = 1696cal<br>代谢因子50%<br>维持现状所需的cal：1696+1696*50% = 2544cal<br>瘦体重：35.5kg（78.1磅）<br>每日蛋白质需求量：78.1 * 1.14 = 89.034g<br>每日从蛋白质摄取的cal：89.034 * 4 =356<br>除去来自蛋白的cal：2544 - 356 = 2187</p><a id="more"></a><h1 id="饮食计划"><a href="#饮食计划" class="headerlink" title="饮食计划"></a>饮食计划</h1><h2 id="高蛋白阶段"><a href="#高蛋白阶段" class="headerlink" title="高蛋白阶段"></a>高蛋白阶段</h2><h3 id="计划所需cal"><a href="#计划所需cal" class="headerlink" title="计划所需cal"></a>计划所需cal</h3><p>2187+500 = 2687cal</p><h4 id="每日需要从碳水和脂肪中获得的cal都等于"><a href="#每日需要从碳水和脂肪中获得的cal都等于" class="headerlink" title="每日需要从碳水和脂肪中获得的cal都等于"></a>每日需要从碳水和脂肪中获得的cal都等于</h4><p>2687/2 = 1344cal</p><h4 id="每日所需碳水化合物"><a href="#每日所需碳水化合物" class="headerlink" title="每日所需碳水化合物"></a>每日所需碳水化合物</h4><p>1344/4 = 336g</p><h4 id="每日所需脂肪"><a href="#每日所需脂肪" class="headerlink" title="每日所需脂肪"></a>每日所需脂肪</h4><p>1344/9 = 150g</p><h3 id="高蛋白阶段饮食计划"><a href="#高蛋白阶段饮食计划" class="headerlink" title="高蛋白阶段饮食计划"></a>高蛋白阶段饮食计划</h3><h4 id="蛋白"><a href="#蛋白" class="headerlink" title="蛋白"></a>蛋白</h4><p>刚训练完：总蛋白*25% = 22.5g<br>其余五餐：每餐67.5/5 = 13.5g</p><h4 id="碳水化合物"><a href="#碳水化合物" class="headerlink" title="碳水化合物"></a>碳水化合物</h4><p>刚训练完：100g高GI值碳水化合物<br>其余五餐：每餐(336-100)/5 = 47.2g</p><h4 id="脂肪"><a href="#脂肪" class="headerlink" title="脂肪"></a>脂肪</h4><p>刚训练完：30g<br>其余五餐：每餐(150-30)/5 = 24g</p><h2 id="蛋白缩减阶段"><a href="#蛋白缩减阶段" class="headerlink" title="蛋白缩减阶段"></a>蛋白缩减阶段</h2><h3 id="计划所需cal-1"><a href="#计划所需cal-1" class="headerlink" title="计划所需cal"></a>计划所需cal</h3><p>2544-120 = 2424cal（相当于减少30g蛋白的热量）</p><h3 id="每日cal需求"><a href="#每日cal需求" class="headerlink" title="每日cal需求"></a>每日cal需求</h3><p>2424+500 = 2924cal</p><h4 id="每日碳水化合物和脂肪"><a href="#每日碳水化合物和脂肪" class="headerlink" title="每日碳水化合物和脂肪"></a>每日碳水化合物和脂肪</h4><p>各自2924/2 = 1462cal</p><h4 id="每日碳水化合物需求"><a href="#每日碳水化合物需求" class="headerlink" title="每日碳水化合物需求"></a>每日碳水化合物需求</h4><p>1462/4 = 366g</p><h4 id="每日脂肪需求"><a href="#每日脂肪需求" class="headerlink" title="每日脂肪需求"></a>每日脂肪需求</h4><p>1462/9 = 163g</p><h3 id="蛋白缩减阶段饮食计划"><a href="#蛋白缩减阶段饮食计划" class="headerlink" title="蛋白缩减阶段饮食计划"></a>蛋白缩减阶段饮食计划</h3><h4 id="蛋白质"><a href="#蛋白质" class="headerlink" title="蛋白质"></a>蛋白质</h4><p>训练结束后立刻摄取每日所需的所有的30g蛋白质</p><h4 id="碳水化合物-1"><a href="#碳水化合物-1" class="headerlink" title="碳水化合物"></a>碳水化合物</h4><p>训练结束：100g高GI碳水化合物<br>其余五餐：每餐(366-100)/5 = 53.2g</p><h4 id="脂肪-1"><a href="#脂肪-1" class="headerlink" title="脂肪"></a>脂肪</h4><p>训练结束：30g<br>其余五餐：每餐(163-30)/5= 26.6g</p><h1 id="训练计划"><a href="#训练计划" class="headerlink" title="训练计划"></a>训练计划</h1><h2 id="训练次序：肩-臂-腹-腿-背-胸-腹-HIIT或休息"><a href="#训练次序：肩-臂-腹-腿-背-胸-腹-HIIT或休息" class="headerlink" title="训练次序：肩 臂+腹 腿 背 胸+腹 HIIT或休息"></a>训练次序：肩 臂+腹 腿 背 胸+腹 HIIT或休息</h2><h2 id="一周计划"><a href="#一周计划" class="headerlink" title="一周计划"></a>一周计划</h2><h3 id="周一（肩）"><a href="#周一（肩）" class="headerlink" title="周一（肩）"></a>周一（肩）</h3><h4 id="空手热身-4组"><a href="#空手热身-4组" class="headerlink" title="空手热身 4组"></a>空手热身 4组</h4><h4 id="坐姿哑铃提拉（后束）4组-15次"><a href="#坐姿哑铃提拉（后束）4组-15次" class="headerlink" title="坐姿哑铃提拉（后束）4组*15次"></a>坐姿哑铃提拉（后束）4组*15次</h4><h4 id="俯身侧平举（后束）4组-15次"><a href="#俯身侧平举（后束）4组-15次" class="headerlink" title="俯身侧平举（后束）4组*15次"></a>俯身侧平举（后束）4组*15次</h4><h4 id="站姿推举（前中束）4组-10次"><a href="#站姿推举（前中束）4组-10次" class="headerlink" title="站姿推举（前中束）4组*10次"></a>站姿推举（前中束）4组*10次</h4><h4 id="侧平举（后束）4组-15次"><a href="#侧平举（后束）4组-15次" class="headerlink" title="侧平举（后束）4组*15次"></a>侧平举（后束）4组*15次</h4><h4 id="阿诺德推举（前中束）4组-15次"><a href="#阿诺德推举（前中束）4组-15次" class="headerlink" title="阿诺德推举（前中束）4组*15次"></a>阿诺德推举（前中束）4组*15次</h4><h4 id="坐姿推举（中束）4组-15次"><a href="#坐姿推举（中束）4组-15次" class="headerlink" title="坐姿推举（中束）4组*15次"></a>坐姿推举（中束）4组*15次</h4><h4 id="哑铃前平举（前束）2组-15次"><a href="#哑铃前平举（前束）2组-15次" class="headerlink" title="哑铃前平举（前束）2组*15次"></a>哑铃前平举（前束）2组*15次</h4><h4 id="杠铃片前平举-旋转-2组-15次"><a href="#杠铃片前平举-旋转-2组-15次" class="headerlink" title="杠铃片前平举+旋转 2组*15次"></a>杠铃片前平举+旋转 2组*15次</h4><h3 id="周二"><a href="#周二" class="headerlink" title="周二"></a>周二</h3><h4 id="平板交替伸手抬腿-4组-15次"><a href="#平板交替伸手抬腿-4组-15次" class="headerlink" title="平板交替伸手抬腿 4组*15次"></a>平板交替伸手抬腿 4组*15次</h4><h4 id="平板支撑-力竭组-8"><a href="#平板支撑-力竭组-8" class="headerlink" title="平板支撑 力竭组*8"></a>平板支撑 力竭组*8</h4><h4 id="俄罗斯转体-8组-40次"><a href="#俄罗斯转体-8组-40次" class="headerlink" title="俄罗斯转体 8组*40次"></a>俄罗斯转体 8组*40次</h4><h4 id="哑铃弯举-6组-10次"><a href="#哑铃弯举-6组-10次" class="headerlink" title="哑铃弯举 6组*10次"></a>哑铃弯举 6组*10次</h4><h4 id="锤式弯举-6组-10次"><a href="#锤式弯举-6组-10次" class="headerlink" title="锤式弯举 6组*10次"></a>锤式弯举 6组*10次</h4><h4 id="俯身哑铃后平举-6组-15次"><a href="#俯身哑铃后平举-6组-15次" class="headerlink" title="俯身哑铃后平举 6组*15次"></a>俯身哑铃后平举 6组*15次</h4><h3 id="周三"><a href="#周三" class="headerlink" title="周三"></a>周三</h3><h4 id="坐姿腿平举"><a href="#坐姿腿平举" class="headerlink" title="坐姿腿平举"></a>坐姿腿平举</h4><p><code>1片-1组 20次</code><br><code>2片-2组 15次</code><br><code>3片-2组 12次</code><br><code>4片-2组 12次</code><br><code>3片-3组控制组 15次</code><br><code>2片-3组控制组 20次</code></p><h4 id="俯卧腿弯举"><a href="#俯卧腿弯举" class="headerlink" title="俯卧腿弯举"></a>俯卧腿弯举</h4><p><code>1片-1组 20次</code><br><code>2片-2组 15次</code><br><code>3片-2组 12次</code><br><code>4片-2组 12次</code><br><code>3片-3组控制组 15次</code><br><code>2片-3组控制组 20次</code></p><h3 id="周四"><a href="#周四" class="headerlink" title="周四"></a>周四</h3><h4 id="杠铃划船-4组-15次（2组1片，2组2片）"><a href="#杠铃划船-4组-15次（2组1片，2组2片）" class="headerlink" title="杠铃划船 4组*15次（2组1片，2组2片）"></a>杠铃划船 4组*15次（2组1片，2组2片）</h4><h4 id="俯卧撑-150个"><a href="#俯卧撑-150个" class="headerlink" title="俯卧撑 150个"></a>俯卧撑 150个</h4><h4 id="平板支撑-力竭组-8-1"><a href="#平板支撑-力竭组-8-1" class="headerlink" title="平板支撑 力竭组*8"></a>平板支撑 力竭组*8</h4><h3 id="周五"><a href="#周五" class="headerlink" title="周五"></a>周五</h3><h4 id="俯卧撑-500"><a href="#俯卧撑-500" class="headerlink" title="俯卧撑*500"></a>俯卧撑*500</h4><h3 id="周六"><a href="#周六" class="headerlink" title="周六"></a>周六</h3><h4 id="俯卧撑不限"><a href="#俯卧撑不限" class="headerlink" title="俯卧撑不限"></a>俯卧撑不限</h4><h3 id="周日"><a href="#周日" class="headerlink" title="周日"></a>周日</h3><h4 id="休息"><a href="#休息" class="headerlink" title="休息"></a>休息</h4><!-- rebuild by neat -->]]></content>
      <categories>
        <category>运动</category>
      </categories>
      <tags>
        <tag>训练计划</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWeb从入门到入土Part4.JSP执行流程</title>
    <url>/2020/02/17/JavaWeb%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-Part3.JSP%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri Feb 21 2020 16:05:06 GMT+0800 (GMT+08:00) --><p><img src="http://www.9553.com/upload/2015/1030/20151030022850505.png" alt></p><a id="more"></a><h1 id="JSP执行流程"><a href="#JSP执行流程" class="headerlink" title="JSP执行流程"></a>JSP执行流程</h1><p><img src="https://i.loli.net/2020/02/17/C9Dkv46Hsj3LKMm.png" alt="image.png"></p><p>第一次访问：<br><code>JSP -&gt; Java -&gt; class</code><br>jsp翻译成class文件和java文件（Servlet文件），文件路径为<code>/Library/Tomcat07/work/Catalina/localhost/JspProject/org/apache/jsp</code>。</p><p>第二次访问：</p><p>直接访问class文件，速度会比第一次快，如果服务端代码修改了，将会在访问时重新翻译和编译。</p><p>打开翻译完的.java文件，将会找到我们写的代码：</p><p><img src="https://i.loli.net/2020/02/17/RXPz1DrCE5NOLn7.png" alt="image.png"></p><p>Servlet和Jsp可以相互转换</p><p>早起没有JSP，只能写Servlet</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>因为第一次请求服务端，会有翻译和编译的过程，因此比较慢，后续访问，可以直接访问class，因此速度比较快。但是如果服务端修改了代码，则再次访问时，会重新翻译和编译。</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>JavaWeb</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWeb从入门到入土Part4.使用Eclipse开发WEB项目（JSP项目）</title>
    <url>/2020/02/17/JavaWeb%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-Part4.%E4%BD%BF%E7%94%A8Eclipse%E5%BC%80%E5%8F%91WEB%E9%A1%B9%E7%9B%AE%EF%BC%88JSP%E9%A1%B9%E7%9B%AE%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri Feb 21 2020 20:04:45 GMT+0800 (GMT+08:00) --><h1 id="Eclipse集成Tomcat"><a href="#Eclipse集成Tomcat" class="headerlink" title="Eclipse集成Tomcat"></a>Eclipse集成Tomcat</h1><p>本节使用Eclipse创建第一个WEB项目。<br>进入<code>Preference</code> -&gt; <code>server</code> -&gt; <code>Runtime Environment</code>-&gt; <code>Add</code> -&gt; 然后选自己对应的Tomcat版本号，然后选择对应的JRE版本 -&gt; <code>Finish</code><br>然后在Eclipse面板里配置Server，单击server里的链接，再次选择对应的Tomcat版本，Finish。</p><a id="more"></a><h1 id="新建一个WEB项目"><a href="#新建一个WEB项目" class="headerlink" title="新建一个WEB项目"></a>新建一个WEB项目</h1><p>新建一个Dynamic Web Project</p><p>填写项目名字，Target runtime选择Tomcat版本，然后next -&gt; next，勾选Generate web.xml deployment descriptor，Finish。</p><p>如果布局乱了，点击Window -&gt; Perspective -&gt; Reset Perspective。</p><p>在WebContent里新建一个index1.jsp，然后在WEB-INF里新建index2.jsp。</p><p>在index1.jsp里写入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    hello index1</span><br><span class="line">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure><p>在index2.jsp里写入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    hello index2</span><br><span class="line">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure><h1 id="启动服务访问项目"><a href="#启动服务访问项目" class="headerlink" title="启动服务访问项目"></a>启动服务访问项目</h1><p>然后右击刚配置的Servers，点击Add and Remove，点击左边现在的项目，Add到右边，Finish，然后右击Servers，Start，localhost:8888/项目名，然后发现项目404，是因为项目web.xml的<welcome-file-list>里面没有配置index.jsp，所以项目默认去找index.html等文件，找不到，所以404，所以想要访问index1.jsp需要访问<strong><em>localhost:8888/项目名/index1.jsp</em></strong>。</welcome-file-list></p><p>现在进入web.xml文件，添加一条<code>&lt;welcome-file&gt;index1.jsp&lt;/welcome-file&gt;</code>，然后重启服务，右击Servers -&gt; Restart。<strong>每次修改了web.xml都需要重启项目</strong>。</p><p>刚才访问index.jsp直接写的是<strong><em>localhost:8888/项目名/index1.jsp</em></strong>，由此可见WebContent目录就是项目目录，进入WebContent就相当于进入项目文件夹。写在WebContent里的文件，就可以直接在<code>localhost:8888/项目名/</code>后边写。</p><p>那如果按这个逻辑，访问index2.jsp，应该访问<strong><em>localhost:8888/项目名/WEB-INF/index2.jsp</em></strong>，然而我们发现，又404了，是因为<code>WEB-INF</code>是一个权限比较高的文件夹，客户端（浏览器）是不能直接访问的。只能通过<code>请求转发</code>访问。</p><p><strong>注意</strong>：并不是任何的内部跳转都能访问WEB-INF；原因是跳转方式有2种：<code>请求转发</code>和<code>重定向</code>。（后边会讲）</p><p>如果创建index1.jsp 第一行报错，说明需要配置Tomcat运行时环境，两种方法：<br>a. 将Tomcat/lib中的servlet-api.jar加入项目构建路径。<br>b. 右键项目 -&gt; Build Path -&gt; Add library -&gt; Server Runtime。（本质就是将lib文件夹的所有jar包都加进去了）</p><h1 id="统一字符集编码"><a href="#统一字符集编码" class="headerlink" title="统一字符集编码"></a>统一字符集编码</h1><h2 id="编码分类"><a href="#编码分类" class="headerlink" title="编码分类"></a>编码分类</h2><h3 id="设置jsp文件的编码（jsp文件中的pageEncoding属性）"><a href="#设置jsp文件的编码（jsp文件中的pageEncoding属性）" class="headerlink" title="设置jsp文件的编码（jsp文件中的pageEncoding属性）"></a>设置jsp文件的编码（jsp文件中的pageEncoding属性）</h3><p>jsp翻译为java文件的过程中，使用的编码。</p><h3 id="设置浏览器读取jsp文件的编码（jsp文件中的content属性）"><a href="#设置浏览器读取jsp文件的编码（jsp文件中的content属性）" class="headerlink" title="设置浏览器读取jsp文件的编码（jsp文件中的content属性）"></a>设置浏览器读取jsp文件的编码（jsp文件中的content属性）</h3><p>一般将上述设置成一致的编码，推荐使用UTF-8。</p><h3 id="contentType的charset是指服务器发送给客户端时的内容编码"><a href="#contentType的charset是指服务器发送给客户端时的内容编码" class="headerlink" title="contentType的charset是指服务器发送给客户端时的内容编码"></a>contentType的charset是指服务器发送给客户端时的内容编码</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; contentType&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot; pageEncoding&#x3D;&quot;UTF-8&quot;%&gt;</span><br></pre></td></tr></table></figure><p>关于编码，更多信息可以查看<a href="https://alvis.club/2020/02/21/ContentType，charset和pageEncoding的区别/" target="_blank" rel="noopener">ContentType，charset和pageEncoding的区别</a></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>JavaWeb</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWeb从入门到入土Part2.Tomcat配置虚拟路径和虚拟主机以及虚拟主机</title>
    <url>/2020/02/15/JavaWeb%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-Part2.Tomcat%E9%85%8D%E7%BD%AE%E8%99%9A%E6%8B%9F%E8%B7%AF%E5%BE%84/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri Feb 21 2020 16:05:06 GMT+0800 (GMT+08:00) --><p><img src="http://www.9553.com/upload/2015/1030/20151030022850505.png" alt></p><a id="more"></a><h1 id="为什么会有虚拟路径"><a href="#为什么会有虚拟路径" class="headerlink" title="为什么会有虚拟路径"></a>为什么会有虚拟路径</h1><p>Tomcat为什么知道项目在webapps文件夹里，而不是别的文件夹。原因就是webapps是<strong>虚拟路径</strong>。</p><h1 id="虚拟路径的作用"><a href="#虚拟路径的作用" class="headerlink" title="虚拟路径的作用"></a>虚拟路径的作用</h1><p>将web项目配置到webapps以外的目录，例如将JspProject项目放到别位置。</p><h1 id="配置虚拟路径-方法一（缺点：需要重启Tomcat）"><a href="#配置虚拟路径-方法一（缺点：需要重启Tomcat）" class="headerlink" title="配置虚拟路径-方法一（缺点：需要重启Tomcat）"></a>配置虚拟路径-方法一（缺点：需要重启Tomcat）</h1><p>打开根目录下的conf/server.xml文件，找到文件末尾<code>&lt;Engine&gt;</code>标签，里面的<code>&lt;Host&gt;</code>标签（大概116行）配置的就是虚拟路径，如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;Host appBase&#x3D;&quot;webapps&quot; autoDeploy&#x3D;&quot;true&quot; name&#x3D;&quot;localhost&quot; unpackWARs&#x3D;&quot;true&quot;&gt;</span><br><span class="line">    &#x2F;&#x2F;意为localhost本地主机的虚拟路径为webapps。</span><br><span class="line">    &lt;!-- SingleSignOn valve, share authentication between web applications</span><br><span class="line">Documentation at: &#x2F;docs&#x2F;config&#x2F;valve.html --&gt;</span><br><span class="line">    &lt;!--&lt;Valve className&#x3D;&quot;org.apache.catalina.authenticator.SingleSignOn&quot; &#x2F;&gt;--&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- Access log processes all example.</span><br><span class="line">          Documentation at: &#x2F;docs&#x2F;config&#x2F;valve.html</span><br><span class="line">          Note: The pattern used is equivalent to using pattern&#x3D;&quot;common&quot;--&gt;</span><br><span class="line">    &lt;Valve className&#x3D;&quot;org.apache.catalina.valves.AccessLogValve&quot; directory&#x3D;&quot;logs&quot; </span><br><span class="line">    pattern&#x3D;&quot;%h %l %u %t &quot;%r&quot; %s %b&quot; prefix&#x3D;&quot;localhost_access_log.&quot; suffix&#x3D;&quot;.txt&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;Host&gt;</span><br></pre></td></tr></table></figure><p>下面开始添加新的虚拟路径，假如现在将JspProject项目放到了<code>/Library/Study/JspProject</code>这个位置</p><p><img src="https://i.loli.net/2020/02/15/Y1OUQ64GvLf8It2.png" alt></p><p>在<code>&lt;/Host&gt;</code>标签前添加代码</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;Context docBase&#x3D;&quot;&#x2F;Library&#x2F;Study&#x2F;JspProject&quot; path&#x3D;&quot;&#x2F;Library&#x2F;Tomcat07&#x2F;webapps&#x2F;JspProject&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><p>Context严格区分大小写<br><strong><code>docBase</code></strong>为实际路径<br><strong><code>path</code></strong>为虚拟路径，要么写相对路径（相对webapps的位置），要么写绝对路径。</p><p>例如Tomcat访问JspProject项目时，所在的位置应该是<code>Tomcat/webapps/JspProject</code>，则path要么写成<code>path=&quot;/JspProject&quot;</code>，要么写成<code>path=&quot;/Library/Tomcat/webapps/JspProject&quot;</code>，Windows用户路径例如<code>D:\study\apache-tomcat-7\webapps\JspProject</code>（但是要注意，不管哪个系统，path写成相对路径时都要用<code>/</code>而不是<code>\</code></p><p>docBase写的是现在项目实际放在哪里，例如<code>/Library/Study/JspProject</code>，Windows用户例如<code>D:\study\apache-tomcat-7\webapps\JspProject</code></p><p><strong><code>访问path（相对webapps）时，path指向docBase（项目真实地址，绝对路径），其实访问的是docBase。</code></strong></p><h2 id="现在的情况"><a href="#现在的情况" class="headerlink" title="现在的情况"></a>现在的情况</h2><p>1.配置了<code>server.xml</code>文件</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;Context docBase&#x3D;&quot;&#x2F;Library&#x2F;Study&#x2F;JspProject&quot; path&#x3D;&quot;&#x2F;JspProject&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><p>2.将原本在Tomcat<code>/webapps目录下的JspProject</code>文件夹，搬到了<code>/Library/Study/JspProject</code>位置，所以webapps下现在没有JspProject。</p><p><img src="https://i.loli.net/2020/02/15/bLVZj8DIfRMQwod.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/02/15/V6fUiXpCdaMxZ2Q.png" alt="image.png"></p><h2 id="启动Tomcat验证"><a href="#启动Tomcat验证" class="headerlink" title="启动Tomcat验证"></a>启动Tomcat验证</h2><p>执行bin/startup.sh(startup.bat)<br>查看<strong><em><a href="http://localhost:8888/JspProject" target="_blank" rel="noopener">localhost:8888/JspProject</a></em></strong></p><p><img src="https://i.loli.net/2020/02/14/a9AsIhwJBi3do7c.png" alt></p><p><strong>虚拟路径配置成功！</strong></p><h1 id="配置虚拟路径-方法二（不需要重启Tomcat）"><a href="#配置虚拟路径-方法二（不需要重启Tomcat）" class="headerlink" title="配置虚拟路径-方法二（不需要重启Tomcat）"></a>配置虚拟路径-方法二（不需要重启Tomcat）</h1><p>上一个方法是在<code>conf/server.xml</code>文件中配置，这个方法有个缺点就是配置完后需要重启Tomcat服务，比较麻烦，现在介绍一种不用重启的方法。</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>将<code>conf/server.xml</code>文件中的<code>&lt;Context&gt;</code>标签内容剪切，进到Tomcat/conf/Catalina/localhost文件夹，新建一个xml文件例如<code>JspProject.xml</code>，将刚才剪切的内容放进去。</p><p><img src="https://i.loli.net/2020/02/15/ZoPlMBkcn1rR2ag.png" alt="image.png"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;Context docBase&#x3D;&quot;&#x2F;Library&#x2F;Study&#x2F;JspProject&quot; path&#x3D;&quot;&#x2F;JspProject&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><h2 id="启动Tomcat服务"><a href="#启动Tomcat服务" class="headerlink" title="启动Tomcat服务"></a>启动Tomcat服务</h2><p>执行bin/startup.sh(startup.bat)<br>查看<strong><em><a href="http://localhost:8888/JspProject" target="_blank" rel="noopener">localhost:8888/JspProject</a></em></strong></p><p><img src="https://i.loli.net/2020/02/14/a9AsIhwJBi3do7c.png" alt></p><h1 id="配置虚拟主机"><a href="#配置虚拟主机" class="headerlink" title="配置虚拟主机"></a>配置虚拟主机</h1><p>将localhost:9999变成例如<a href="http://www.test.com" target="_blank" rel="noopener">www.test.com</a></p><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p>在新网/西部数码/万网/阿里云等里，有一个域名解析器，作用是将一个网址例如<a href="http://www.alvis.club转换为124.156.123.74（一个IP地址）。" target="_blank" rel="noopener">www.alvis.club转换为124.156.123.74（一个IP地址）。</a></p><p>在去上述网络解析以前，先会在本机进行域名解析，例如<a href="http://www.test.com" target="_blank" rel="noopener">www.test.com</a> 在本机找到映射127.0.0.1(localhost:8888)，那就不会去新网/万网等进行解析了。</p><h2 id="配置虚拟主机步骤"><a href="#配置虚拟主机步骤" class="headerlink" title="配置虚拟主机步骤"></a>配置虚拟主机步骤</h2><h3 id="a-配置conf-server-xml"><a href="#a-配置conf-server-xml" class="headerlink" title="a.配置conf/server.xml"></a>a.配置conf/server.xml</h3><p>在conf/server.xml文件里，找到<engine>标签，然后找到<host>标签附近，添加一对新的<code>&lt;Host&gt;``&lt;/Host&gt;</code>标签，然后写入代码：</host></engine></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;Host appBase&#x3D;&quot;&#x2F;Library&#x2F;Study&#x2F;JspProject&quot; name&#x3D;&quot;www.test.com&quot;&gt;</span><br><span class="line">    &lt;Context docBase&#x3D;&quot;&#x2F;Library&#x2F;Study&#x2F;JspProject&quot; path&#x3D;&quot;&#x2F;&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;Host&gt;</span><br></pre></td></tr></table></figure><p>appBase里写的是目前项目的实际地址<br>name里写的是给Host起个名字，只是个名字<br>docBase写的是真实路径，path是虚拟路径<br>如果path写的还是/JspProject，那么以后访问该项目需要访问<a href="http://www.test.com/JspProject，所以省略掉后边的，直接访问/" target="_blank" rel="noopener">www.test.com/JspProject，所以省略掉后边的，直接访问/</a></p><h3 id="b-改变Engine的默认访问主机"><a href="#b-改变Engine的默认访问主机" class="headerlink" title="b.改变Engine的默认访问主机"></a>b.改变Engine的默认访问主机</h3><p>在conf/server.xml文件里，找到Engine标签，将dafaultHost改为<a href="http://www.test.com（只是一个名字，叫abc也可以，只要和下面配置的Host的name一致就可以）" target="_blank" rel="noopener">www.test.com（只是一个名字，叫abc也可以，只要和下面配置的Host的name一致就可以）</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;Engine defaultHost&#x3D;&quot;www.test.com&quot; name&#x3D;&quot;Catalina&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="配置hosts文件增加映射"><a href="#配置hosts文件增加映射" class="headerlink" title="配置hosts文件增加映射"></a>配置hosts文件增加映射</h3><h4 id="Windows系统："><a href="#Windows系统：" class="headerlink" title="Windows系统："></a>Windows系统：</h4><p>打开Windows/System32/drivers/etc/hosts文件，添加</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1      www.test.com</span><br></pre></td></tr></table></figure><p>意为以前通过localhost可以访问本机（127.0.0.1），现在通过<a href="http://www.test.com也可以访问本机（127.0.0.1）。" target="_blank" rel="noopener">www.test.com也可以访问本机（127.0.0.1）。</a></p><p><img src="https://i.loli.net/2020/02/17/rHt52pCmSjUsNEx.png" alt="image.png"></p><h4 id="Mac系统："><a href="#Mac系统：" class="headerlink" title="Mac系统："></a>Mac系统：</h4><p>在终端执行<code>sudo su</code>，然后输入密码获得管理员权限，然后执行<code>vim /private/etc/hosts</code>，</p><p>然后点击<code>i</code>，进入vim输入模式，在最下面添加：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1       www.test.com</span><br></pre></td></tr></table></figure><p>然后点击<code>esc</code>，输入<code>:wq</code>（保存，退出）</p><p><img src="https://i.loli.net/2020/02/17/ygazTIlF7LPc5xb.png" alt="image.png"></p><p>或打开finder，使用<code>Command+shift+.</code>快捷键，显示隐藏文件，然后找到host文件，</p><p><img src="https://i.loli.net/2020/02/17/M4dKgYRcUXnPzy8.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/02/17/xczBPAU4fNKs3nG.png" alt="image.png"></p><p>然后在下面添加</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1       www.test.com</span><br></pre></td></tr></table></figure><p>这种方法会提示权限不足，所以建议使用命令行</p><p><img src="https://i.loli.net/2020/02/17/dISGjC6H9uFtm3y.png" alt="image.png"></p><h2 id="重启服务，输入www-test-com"><a href="#重启服务，输入www-test-com" class="headerlink" title="重启服务，输入www.test.com"></a>重启服务，输入<a href="http://www.test.com" target="_blank" rel="noopener">www.test.com</a></h2><p>会出现无法访问或It works!</p><p><img src="https://i.loli.net/2020/02/17/nuMNC2mszxf9VTX.png" alt="image.png"></p><p>是因为我们现在Tomcat的端口号是8888，所以需要加上端口号，输入<a href="www.test.com:8888">www.test.com:8888</a>才行。</p><p><img src="https://i.loli.net/2020/02/17/3suKE5eLYWlUXJV.png" alt="image.png"></p><h2 id="将端口号也去掉"><a href="#将端口号也去掉" class="headerlink" title="将端口号也去掉"></a>将端口号也去掉</h2><p>web服务的默认端口号为80，所以我们将端口号改为80，即可省去输入<code>:8888</code>，进入conf/server.xml，将端口号改为80，然后重启服务。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;Connector connectionTimeout&#x3D;&quot;20000&quot; port&#x3D;&quot;80&quot; protocol&#x3D;&quot;HTTP&#x2F;1.1&quot; redirectPort&#x3D;&quot;8443&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>JavaWeb</tag>
      </tags>
  </entry>
  <entry>
    <title>改善圆肩[转自知乎]</title>
    <url>/2020/02/14/%E6%94%B9%E5%96%84%E5%9C%86%E8%82%A9%5B%E8%BD%AC%E8%87%AA%E7%9F%A5%E4%B9%8E%5D/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri Feb 21 2020 16:05:06 GMT+0800 (GMT+08:00) --><p>作者：Mindfulness<br>链接：<a href="https://www.zhihu.com/question/31211469/answer/733425798" target="_blank" rel="noopener">https://www.zhihu.com/question/31211469/answer/733425798</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><p>网上教程众多，可是你会发现，真正行之有效的很少。</p><p>先说说网上其他解决办法的问题与错误</p><a id="more"></a><p><strong>错误1.拉伸胸小肌</strong></p><p>比如下面这个动作</p><p><img src="https://pic3.zhimg.com/80/v2-a1cde19cb7b3860f3208be2366b4c668_hd.jpg" alt></p><p>首先你的胸小肌并不紧张，只是你维持长期双臂抱拢拿手机之类的姿势让你的双肩靠拢，导致胸小肌自身和周围组织包括肋骨等等发生了粘连，或者说是长时间这个姿势对胸小肌的挤压，让胶原纤维从肌肉中释放出来，肌肉变得致密而坚硬，整块肌肉会缩的很小且致密。这个时候胸小肌会像三条硬塑料绳一样贴合在你的三四五跟肋骨上，这个状态非常非常的稳固而坚硬，有很强的抗压能力。所以你直接拉伸根本就拉不开。</p><p>如果你做上面动作，你会发现不管你怎么拉，拉到永远只是下面这个位置。你可以试试，你拉时候只是下图上这个黑色圈起来的部位，而你的肩膀还是内扣的。</p><p><img src="https://pic1.zhimg.com/80/v2-9899b5ee8185676bf4721b9b3e890e6d_hd.jpg" alt></p><p>假设你是正常体态，肩部可以打开，那么理想情况是下面这样</p><p><img src="https://pic1.zhimg.com/80/v2-24b6351809aa529193f26599f7da5edd_hd.jpg" alt></p><p>但关键你已经是圆肩，胸小肌已经致密坚固，它的弹性和伸缩能力远远不如胸大肌(实际上已经没有任何弹性)，牢固程度又远大于胸大肌。所以你做这个动作实际只能拉到胸大肌。实际情况是这样的。</p><p><img src="https://pic1.zhimg.com/80/v2-a34494fa866e493d219056291201dd36_hd.jpg" alt></p><p>所以，你把胸大肌拉到撕裂感也拉不到胸小肌。你就是拉到胸大肌撕裂也是没用的。</p><p>但是这个动作错的离谱的地方还不在这里，错的地方是这个时候胸小肌根本就不该拉伸。</p><p><strong>胸小肌此时是处于稳定性状态，这种稳固状态恰恰就是防止外力的破坏(牵拉或压迫）而形成的，怎么可能通过拉伸解决胸小肌的问题呢？</strong></p><p><strong>错误2.加强后背肩胛菱形肌之类肌群</strong></p><p>类似做这个动作</p><p><img src="https://pic1.zhimg.com/80/v2-116f8a17c7d0421d880f9182cbae565d_hd.jpg" alt></p><p>或者这个</p><p><img src="https://pic2.zhimg.com/80/v2-e44b28016e3c370ef34765960f2df102_hd.jpg" alt></p><p>你做这个动作虽然你的后背肌群得到锻炼了，但是你更多的练到的是你的斜方肌(根据圆肩的程度，圆肩越厉害，斜方肌代偿越严重)，最后圆肩没改善，练的斜方肌非常壮……</p><p>你只会把这里练壮</p><p><img src="https://pic3.zhimg.com/80/v2-0462e52e32e35dc396f347b2c91beb45_hd.jpg" alt></p><p><img src="https://pic2.zhimg.com/80/v2-c51de1cbff58f1e066237cd2e0f46fc1_hd.jpg" alt></p><p>为什么会这样，道理很简单，上面那些锻炼后背肌群的动作只是针对正常体态而说的，但是你已经是圆肩了。你的肩膀已经处于你躯干的前测，不管你是站着，趴着，游泳，任何动作，就是做出花来，也是斜方肌发力。</p><p>正常体态：肩膀和躯体在同一平面(后背肌群发力)</p><p><img src="https://pic2.zhimg.com/80/v2-96b96b667b0ec3ab1e3cf4a0cf89d2ed_hd.jpg" alt></p><p>圆肩状态：</p><p><img src="https://pic4.zhimg.com/80/v2-e04416cd84de4e5d896edef680d22f06_hd.jpg" alt></p><p><strong>只要你的肩膀是内扣的，也就是在这个水平面的前方，那么任何动作都会斜方肌发力。</strong></p><hr><p><strong>下面是解决办法</strong></p><p>1.A松解胸小肌</p><p>先松解以下胸大肌，一般这个过程比较容易，胸大肌在胸小肌外面很好松解，按摩到稍微松软即可。</p><p><img src="https://pic1.zhimg.com/80/v2-285720bad5fda84f28a934ec3c57e0ff_hd.jpg" alt></p><p>胸大肌松解后，然后逐渐顺着你的三四五三根肋骨的位置，一点一点的找到你的三条胸小肌，你可能开始摸不到，因为它已经坚硬的像骨骼一样了，但是随着你的不断摸索，它会逐渐发现它。然后顺着条状肌肉的边缘一点点撬起它或者刮起它(可以用一个三角雀)，每刮一下，像刮一层乳胶塑料膜，刮起以后会感受到一个致密的组织一样像弹开了一样变成松软的肌肉了。这需要一个过程，大概需要一周，每天坚持，然后突然有一天，量产发生质变，而且就是那么一瞬间，立竿见影，你的胸小肌整个弹开了，肩关节异常的灵活，活动胳膊像没有了一样(这时候不要做什么肩部运动了，你的肩灵活性取代了稳定性，容易受伤)。(而且你的斜方肌突然松软了，很神奇，胳膊，甚至腿都发生了变化。而且一侧松解开，另一侧也突然自己就松开了，很吓人。可能是一种神经调节。所以胆小的不要试了。不过这种状态只会维持几个小时，一会身体肩膀又会失去灵活性)。</p><p><strong>松解了以后，你会发现你的锁骨会有明显的下沉，平成平行状态。</strong></p><p><img src="https://pic3.zhimg.com/80/v2-a428c6ce22eb65e7dff9d42a11d28f9d_hd.jpg" alt></p><p><strong>但是，肩膀仍然是圆肩，还是内扣状态，所以这个松解胸小肌的过程只是解除了导致你圆肩的一部分病因，还没法完全改善。</strong></p><p><strong>胸小肌松解后锁骨会变平，也就是肩膀在上下位置回到正常状态。但是在前后位置，还没有回正。也就是圆肩主要是胸大肌上端和锁骨的粘连，这才是病因。</strong></p><p><strong>胸小肌主要了决定你肩膀的高低位置，也就是否你是否会耸肩。所以网上教程似乎不对(胸小肌导致圆肩，这个是错的)。也即，你对着镜子看自己锁骨是平的仍然有可能是肩膀内扣。</strong></p><p><strong>你用力做一个沉肩的动作，锁骨会变平，但仍旧是圆肩。</strong></p><p>所以下面是最关键</p><p><strong>1.B剥离胸大肌上端和锁骨的粘连</strong></p><p><strong>这个其实才是本教程中的核心的核心</strong></p><p><img src="https://pic1.zhimg.com/80/v2-246014a59d79a67ada0047dd0f9f6362_hd.jpg" alt></p><p><img src="https://pic4.zhimg.com/80/v2-ea45b1bf02f1b59d6a99ab7c96819161_hd.jpg" alt></p><p><strong>你在上图A处还能摸到自己肋骨的外侧，到了B处如果挤压的厉害，估计只能摸到肋骨的上缘了，胸肌已经把肋骨淹没了。把按摩棒沿着锁骨下沿紧紧的压在一起的肌肉，向下一点一点，一点一点，慢慢剥离出来，先压住，然后往下剥，先从A位置开始，一直顺着锁骨拨到B处(前提是先松解开胸小肌)</strong></p><p>再细致一些的：</p><p>上图A是你的锁骨</p><p><strong>插一句：你的圆肩</strong>也间接导致你锁骨下沉，头前倾，你的<strong>胸锁乳突肌</strong>(一条从锁骨出发连接到耳后处的肌肉)会把你的头拉的前倾，即圆肩加剧了你的头前倾，如果这里不解决，颈部肌群怎么练也没用，<strong>这又是网上教程的一个错误(你的颈部肌群得到锻段炼的同时，会相对改善一些保持你头前后位置，让你的头从前伸水平方向向后，但是，注意，由于你的头已经不是正常位置，你锻炼颈部肌群的同时，会自然的发力向上拉你的锁骨，发生了一个上下位置的拉力，也就是你头前伸而不是和身体在水平面的同时，无论你怎么做，都会导致乳突肌发力，最后变成大粗脖子)</strong>。下图A把头拉下来，同时B处竖脊肌连接头部位置会粘连(释放枕下肌群团缩)(解决头前倾的另说了)</p><p><img src="https://pic2.zhimg.com/80/v2-532604d1352b446e8e05f7e99b154016_hd.jpg" alt></p><p>教程里可能会让你做下面这个动作(一个错误的动作)</p><p><img src="https://pic1.zhimg.com/80/v2-fb7e513d71eca4ede371ac4f83c0977a_hd.jpg" alt></p><p>上面这个动作怎么做都没用，<strong>你做的时候只会感觉到下意识的锁骨被往上拉</strong>，它只会让你的胸锁乳突肌越来越状(又是代偿)。本身胸锁乳突肌的功能只负责你左右转头，现在开始代偿。在错误的结构下，做动作。<strong>最后头前倾没有改善，脖子练的非常粗……</strong></p><p><img src="https://pic2.zhimg.com/80/v2-e5f49a19265c9443f0521fc90884d3f1_hd.jpg" alt></p><p><img src="https://pic1.zhimg.com/80/v2-eab97ea845769821c2cd1ade567cddaf_hd.jpg" alt></p><p>你的头是颈椎支撑，头前倾是结构失衡不是肌肉拮抗问题，你把圆肩改善，锁骨提起来，枕下肌群再松解释放开(恢复原有长度)，你的头自然而然就靠颈椎顶起来了。</p><p>再另外，你的肋骨外翻也会同步改善。呼吸会更深，胸廓会打开。</p><p><strong>下面是一个平时锻炼避免让圆肩加剧的维持方法</strong></p><p><strong>2.顶肩锻炼后背肌群</strong></p><p>这里顶肩是关键。由于你还是肩膀内扣所以仍旧没法充分练到菱形肌等等。原因就在于你的肩膀向前扣，所以你的斜方肌始终紧张，向后拉着你的肩膀。这时候，你要让斜方肌不发力，那么你就可以通过一种外力去替代斜方肌向后拉着肩膀的力。做法是用一块瑜伽砖顶住肩膀，或者直接把肩膀顶在墙上。原理如下图：</p><p>原始状态</p><p><img src="https://pic3.zhimg.com/80/v2-53397dab923a6526fee7540aa96e8a2a_hd.jpg" alt></p><p>通过外力代替斜方肌状态</p><p><img src="https://pic1.zhimg.com/80/v2-d086f5d81ece44113e56af5444763764_hd.jpg" alt></p><p><strong>用肩膀顶住墙(这是关键)，然后摸自己的斜方肌，应该已经处于松弛状态</strong>，然后做ytwl动作，这过程中斜方肌始终是松弛的，你可以充分锻炼到背后肌群。</p><p>或者你可以练习背部肌群的时候带一个背背佳，带的时候靠上一些，主要让两个背带往后拉住肩膀，这样能更充分调动背部肌群，减少斜方肌代偿(注意是练背时候带，平时带背背佳对纠正你体态没什么用)</p><p>逐渐的，你的菱形肌强壮起来，你的圆肩就会被拉平了。</p><p>上面两个是最主要的两个改善圆肩的方法，还需要配合其他的细微之处，如果你有头前倾和胸椎曲度不正常(有圆肩肯定就有头前倾和胸椎曲度紊乱或者骨盆前倾o型腿等等)。</p><p><strong><em>最后总结下：</em></strong></p><p><strong><em>错误1 拉伸胸小肌(本身拉不到，就算能拉到更加剧胸小肌稳定性)</em></strong></p><p><strong><em>错误2 圆肩状态下做ytwl：背后发力同时，斜方肌会代偿，在胸小肌没剥离恢复为有弹性肌肉前，怎么练也没用。整个身体会挤在一起，非常丑。</em></strong></p><p><strong><em>正确1</em></strong></p><p>***A.剥离松解胸小肌(肌肉稳定性转化为灵活性)</p><hr><p><strong><em>B.剥离胸大肌最上端与锁骨的粘连(你会拨出很大一块，像硬塑料一样被压的很紧的肌肉，然后把玻出来的按摩松解开，这时候你的胸型会更饱满，上胸轮廓会出来)</em></strong></p><p><strong><em>C.最后最好把肩胛骨位置和肩胛骨粘连的肌肉也都玻离开，因为那会影响你肩膀的角度</em></strong></p><p><strong><em>(Ps：ABC最好同步进行，或者更好的，骨盆前倾，圆肩，头前倾所有的体态改善全都同步进行，需要耐心，因为很难局部改善，都是相互影响的。尤其是你的背部和后颈肌肉臀肌，在你圆肩情况下都是被拉长变硬的，松解他们让他们恢复长度和弹性）人体真是牵一发动全身的。</em></strong></p><p><strong><em>正确2 肩膀顶墙ytwl:100%完全锻炼菱形肌，斜方肌松软0发力</em></strong></p><p>总而言之，<strong>体态矫正是一个非常复杂的问题，并不是网上教程讲的拮抗肌群不平衡那么简单，更多的应该物理结构失衡。</strong>很多时候都是牵一发而动全身，有可能你足底出了问题，都可能导致你头前倾。改善某一个局部并没有太大用处，反而会破坏身体自然而然形成的力学结构，因为你当前的体态就是身体自动调整出来来应对你当前的生活习惯的。</p><hr><p>补充：1.松解胸小肌</p><p>松解胸小肌（原帖<a href="https://www.zhihu.com/question/31211469/answer/733425798" target="_blank" rel="noopener">视频</a>）</p><p>好多人说找不到胸小肌，如果你就是摸肌肉的话，你肯定是摸不出来的。但是你可以找肌肉的<strong>起止点</strong>，然后这两个起止点之间的就是。先找到<strong>三四五肋骨应该不难吧，然后找到肋骨的中段</strong>，胸小肌的起点。下图：在红色圈起来的部分，沿着肌肉的走向(蓝色)，<strong>横向拨动</strong>(按照绿色的方向横着左右拨蓝色走向的)。另外你的胸小肌肯定不是图上那样壮，它应该都薄薄的贴在那肋骨上了，你就从起点开始拨你的肋骨中段上贴的紧紧的那块像纤维硬塑料一样的胸小肌(完全没弹性，即Tight了的肌肉<strong>让它一点点恢复供血，最后完全释放开。你把贴在肋骨上这部分松解开，从肋骨上玻璃粘连，上面的整块胸小肌就自然松开了。慢慢找感觉。</strong></p><p><img src="https://pic1.zhimg.com/80/v2-572444c1f85c3b101c15be8e1a0557b9_hd.jpg" alt></p><p>2.拨出隐藏在锁骨下的胸大肌：</p><p><img src="https://pic1.zhimg.com/80/v2-df80d40ef60f638e83397c2b096255f7_hd.jpg" alt></p><p>上图那个绿色的锁骨下面有个<strong>空隙</strong>，胸大束会卡在那里</p><p><img src="https://pic4.zhimg.com/80/v2-18e10be1df77fc9dc763d2a6155d61f6_hd.jpg" alt></p><p>俯视图</p><p><img src="https://pic4.zhimg.com/80/v2-faf4bfd81c9ed742f3ca60730ff88406_hd.jpg" alt></p><p>上图全红圈那部分，如果你的胸肌很薄弱，肯定有一部分已经缩的非常小，然后这些缩的非常小的肌肉会藏在锁骨下面。</p><p>办法是你可以在胸上盖块枕巾，按住了，然后一边仰头一边把它<strong>拉出来</strong></p><p>或者你用过工具(什么都行，我用一个三角雀)按住肌肉，<strong>压住了往下拽，或者给它抠出来</strong>。外侧比较好拉出来，内测锁骨那里藏的最近，不好拉。需要每天拉一点。拉出的肌肉都是硬硬的 条索一样，没什么弹性的。慢慢会恢复弹性。</p><p>也因人而异吧，我个人经验，也可能你没有被卡主的肉。</p><p>3.顶肩练习：</p><p>其实这个动作的还有一个重要目的，就是为了找一个感觉：<strong>手臂外展的时候，斜方肌不发力，背部发力。</strong></p><p><strong>完成这个练习就可以了解斜方肌代偿背肌的原理了</strong></p><p>推荐找个门框试一下，体验下那种感觉</p><p>1.不断调整顶肩角度去找感觉，<strong>使斜方肌松弛，最后让斜方肌摸着是软的(重要，必须做到)</strong></p><p>2.抬起手臂，感受背部充分发力的感觉</p><p>原帖<a href="https://www.zhihu.com/question/31211469/answer/733425798" target="_blank" rel="noopener">视频</a></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>运动</category>
      </categories>
      <tags>
        <tag>圆肩驼背</tag>
      </tags>
  </entry>
  <entry>
    <title>骨盆前倾矫正[转载自知乎]</title>
    <url>/2020/02/14/%E9%AA%A8%E7%9B%86%E5%89%8D%E5%80%BE%E7%9F%AB%E6%AD%A3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri Feb 21 2020 16:05:06 GMT+0800 (GMT+08:00) --><p>作者：Mindfulness<br>链接：<a href="https://www.zhihu.com/question/43888394/answer/691126099" target="_blank" rel="noopener">https://www.zhihu.com/question/43888394/answer/691126099</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><p>其实网上的教程并不对，都是互相copy。网上教程的理论基本基于这两点：维持骨盆正位拮抗肌群不平衡这个不平衡从两个方面导致，分别是肌肉力量和紧张程度或长度(肌肉在紧张收缩的状态会变短)<br><img src="https://pic1.zhimg.com/80/v2-a86d3181aa075dd60ee8e9a9422c601e_hd.jpg" alt></p><a id="more"></a><p>然后得出下面结论：</p><p><em>A.从后面上拉骨盆的竖脊肌太紧张(缩短)</em></p><p><em>B.从后面下拉骨盆的臀大肌过弱</em></p><p><em>C.从前面上拉骨盆的腹肌过弱</em></p><p><em>D.从前面下拉骨盆的髂腰肌过紧(缩短)</em></p><p>这里面C只有没有问题，<strong>D是严重错误</strong>。<strong>实际AB也有问题，后面说。</strong></p><p><strong>错误1.</strong></p><p>拉伸髂腰肌先说什么情况肌肉会紧张缩短。只有肌肉处于长期被动牵拉的状态，人体进行自我的调节，才会在无意识的状态下让肌肉紧张缩短(应该是一种神经调节)。比如后背竖脊肌，长期坐姿被被动的牵拉，人体会自我保护的让它无意识的处于紧张状态并变短，或者更进一步的条索化(肌束横向的缩紧，类似把一把筷子攥在一起)，变得更有韧性。</p><p>所以，长期坐姿，<strong>髂腰肌(屈髋肌群)并不会被牵拉，是不可能过紧和也不可能是力量过强的。但是骨盆前倾最关键的问题就是D，问题就出在屈髋肌群这里。所以这个最关键的位置理论错了，自然就解决不了。</strong></p><p>实际上屈髋肌群确下拉骨盆导致前倾的原因在于肌肉和其他组织或骨骼的粘连。大腿根部的肌肉和骨盆，股直肌和内收肌粘在一起了(内收肌拉着骨盆前下端，股直肌拉着骨盆的耻骨到髂前上棘整个部分。所以你的骨盆前面是整体被下拉的，相反腹肌的作用反而不大)。长期坐姿这部分之间的组织没有相对滑动，长期下来腹股沟大腿根这里的组织间的分隔它们的筋膜无法正常运作了，因此这部分都粘在一起了。大腿根部间接骨盆的肌腱也都蜷缩在一起了。</p><p><strong>所以根本就不该拉伸髂腰肌。况且，你做下面这个动作是没用的。这时候屈髋肌群区粘在一起，你根本拉不到髂腰肌，你拉到的只有股直肌中段，你只会感到大腿被撕裂的感觉，实际腹股沟部还是卷缩在一起。</strong>你拉到的只是图中的A和B处，根本拉不到深层的髂肌。另外，<strong>如果你是静态拉伸，一直不动让大腿被动牵拉，只会让它越来越紧，更加恶化骨盆前倾。(另外，拉伸不会让肌肉变长，只有松解才会让紧张的肌肉恢复原有长度，所以这个动作错的离谱)</strong></p><p><img src="https://pic3.zhimg.com/80/v2-e373aefe885e532e56a094c5b73c1322_hd.jpg" alt></p><p><strong>错误2.</strong></p><p><strong>或者说没啥大用的办法：锻炼腹肌</strong></p><p>另一个动作，加强下腹肌(类似反向卷腹之类)，也是用处不大。<strong>因为这个动作除了加强你的下腹肌，无可避免的也加强了你的髂腰肌，腰方肌，只会让你的屈髋肌群更有力，更加剧骨盆前倾。。。。过强的腰方肌还会拉着你的腰椎进一步前凸。。骨盆前倾没好，又变成了腰椎前凸。。而且腹肌弱和强对骨盆的影响也不大，练这个意义不大。</strong></p><p><img src="https://pic4.zhimg.com/80/v2-cad9a2ceb9d6fff551d531900633b1ee_hd.jpg" alt></p><p><strong>错误3.</strong></p><p><strong>(或者说没啥大用的办法)臀桥</strong></p><p><img src="https://pic1.zhimg.com/80/v2-1ea1fe40127501626dc38a0ea1d57504_hd.jpg" alt></p><p>这个可以做，但是也不是太推荐(如果你臀肌实在太弱，可以做做。因为臀桥其实也有风险，<strong>虽然它加强了你的臀大肌，但做这个动作，你的后腰处，即竖脊肌下段也是非常坚固的，会让竖脊肌更强，更加剧向上拉你的骨盆。所以这个动作其实更多加强你骨盆的稳定性，对改善骨盆前倾意义也不大)</strong></p><p><strong>所以，什么腹肌臀肌练来练去都收效甚微，你这些肌群其实可以通过神经调节来产生交互抑制，自动的调整他们的平衡。</strong></p><p><img src="https://pic2.zhimg.com/80/v2-064d0a1f2381da76e8a6581917a3b3df_hd.jpg" alt></p><p><strong>你不需要时刻观察自己拮抗肌群是不是在平衡状态，今天臀肌是不是强了，明天腹肌是不是太弱了，然后去每天都调整以维持骨盆平衡……相信我，你的大脑可以通过神经调节自带这个功能…..(所谓主动肌群和拮抗肌群的交互抑制原理)</strong></p><p><img src="https://pic1.zhimg.com/80/v2-2cec8389f101738883307ad7913f57c2_hd.jpg" alt></p><p><strong>(经常健身和运动导致的 交互抑制性薄弱(网球肘) 另说，久坐不可能产生这个现象）</strong></p><p><strong>以上是分析网上教程的错误，暂告一段落</strong></p><p><strong>下面是解决办法，还有本教程基于的原理：</strong></p><p><strong>不从调整拮抗肌群平衡方面出发，而且从物理调整肌肉位置的角度出发。</strong></p><p><strong>需要解决的：</strong></p><p><strong>A.长期久坐导致的肌肉与骨盆的粘连，被长期外力挤压肌肉的失活，被过去牵拉引起的肌肉条索化</strong></p><p><strong>B.久坐导致的肌肉与肌肉的粘连，筋膜间滑动能力的降低</strong></p><hr><p><strong><em>正式开始：</em></strong></p><p><strong>步骤1.解决骨盆前侧面粘连(股直肌和腹股沟处粘连)</strong></p><p>把你大腿根部和骨盆和腹股沟粘连在一起的组织分开。用一根小棍，沿着腹股沟最下端可以摸到分界线的地方，把粘在一起的大腿根部肌肉和其他组织撬开。你会感觉到，呼吸都更深了。完全撬开的话，你的腹股沟是会有一道明显的凹陷，瘦的话，还可以摸到骨盆下边缘，然后骨盆瞬间就可以回正一部分了。<strong>沿着腹股沟韧带的凹陷处(图中A点)开始，一点点剥开，慢慢找感觉。最开始要先找到A点的凹陷。</strong></p><p><img src="https://pic3.zhimg.com/80/v2-e4d8e5b5863d989be37255326b4d7faa_hd.jpg" alt></p><p><strong><em><a href="https://www.zhihu.com/question/43888394/answer/691126099" target="_blank" rel="noopener">原帖</a>有演示视频</em></strong></p><p><strong>2.分离内收肌和股内测肌缝匠肌的粘连，恢复肌肉间筋膜相对滑动能力</strong></p><p><strong>分离下图A区域(大腿内收肌）与B区域(股直肌股内侧肌缝匠肌等）的粘连，恢复C位置筋膜滑动能力。</strong></p><p><strong>目标：总之让这一部分的肌肉都恢复滑动能力(可以先按重点分离主要的，然后再修补细节大范围松解)</strong></p><p><img src="https://pic4.zhimg.com/80/v2-70d6f3ebefa2340e6b31d1387e80f6d1_hd.jpg" alt></p><p><strong>先泡沫轴松解上图AB处</strong>，压倒泡沫轴上面然后弯曲和伸展大腿，<strong>不要大腿静止不动的在泡沫轴上反复的滚来滚去(如下图，不要这样绷直了腿滚)</strong></p><p><img src="https://pic2.zhimg.com/80/v2-8dda858932d65a147d641d2d1146f186_hd.jpg" alt></p><p>压在上面然后折叠大腿同时很慢很慢的滚动，目的是让泡沫轴压住即固定住肌肉，然后同时大腿运动让肌肉伸缩，让大腿肌肉运动，从而牵拉松解粘连的组织。否则你只是在单纯的反复按压那里而已，没法分离粘连的组织。</p><p><strong>(1)手动剥离</strong></p><p><strong>筋膜枪或者按摩棒沿着内收肌和股直肌分界线顺着肌肉走向横着推，怎么弄都行，总之让这两块肌肉分开。</strong></p><p><strong>(2)大腿夹泡沫轴推墙分离</strong></p><p>用力夹住，然后<strong>慢慢直起大腿</strong>起身，一边<strong>夹紧</strong>一边<strong>向前顶</strong>。维持一段时间，泡沫轴要贴着骨盆下端，因为主要分离股直肌和内收肌上端的肌肉。</p><p><img src="https://pic4.zhimg.com/80/v2-9dadc2440f473d93544a60140e885aff_hd.jpg" alt></p><p><strong>校验成果阶段：</strong></p><p>做完1.2，如果你做到位了，你应该已经大大改善了，你会发现<strong>呼吸更深了，你站着的时候，腹肌明显绷紧了，后背竖脊肌明显松弛了，走路时候两腿的重心也自然的回到了腿的内测，走起来臀肌发力也明显了</strong></p><p><strong>步骤3 (可忽略)</strong></p><p><strong>a.剥离臀大肌与臀中肌的粘连，恢复相对滑动能力</strong></p><p><strong>b.恢复失活的臀中肌这里先插入一个原理：</strong></p><p><strong>当肌肉受到持续外部压力的时候它会失去弹性而改为韧性，有弹性的肌肉会变成塑料一样坚硬稳固，同时意味着变得非常薄。</strong></p><p><img src="https://pic3.zhimg.com/80/v2-1e6827db13f3bb32340d9c13738a5e87_hd.jpg" alt></p><p><strong>关于受压：</strong>本身人类演化出来的身体构造，并不是适合久坐的。如果你一直坐着，你本来有弹性和力量和伸缩能力的臀肌会有部分贴在骨盆上，变得薄硬且失去伸缩性失去力量。<strong>这里受压的主要是臀中肌和臀小肌(正襟危坐时候应该没影响，所以这一步可以取消，躺着坐，可能有粘连)</strong>这一部分的失效可以说是间接导致了你的骨盆前倾。你的臀小肌梨状肌由于粘连所以它失去了本该有的力量与弹性，如让股骨外旋的能力。<strong>大腿发生内旋(也许你没有，腿型正常就代表正常)，大腿股骨内旋间接导致骨盆前倾。</strong>可以自己做一个把两腿内旋的动作，看看是不是骨盆向下倾了。</p><p><strong>关于被牵拉：</strong>你在坐姿状态臀肌处于被牵拉状态，长期拉伸发生牵拉性薄弱，也会导致力量下降</p><p><strong>操作方法：</strong></p><p>用一根按摩棒，从屁股按进去，顶到骨盆(不要太深，别太用力按到神经血管啥的)，顺着骨盆后面的肌肌走向，横向的拨动或者撬动。</p><p>你会感觉到贴合在骨盆上面的肌肉已经变成硬塑料一样的东西，还有条索化的一条条硬棱，沿着这个棱的边缘拨动这些硬的肌肉，感受撬动的一瞬间，肌肉在一瞬间弹开的感觉。这个过程很缓慢，每次只能释放开一层肌肉，需要慢慢来，可能需要一两周(平时还有避免再压屁股，避免久坐)。但是一晚上时间你大概就能感到臀部变得有弹性了。</p><p>其实就是一个<strong>更深层臀肌的松解</strong>。</p><p>校验步骤3的做法：做一个身体略前倾，收紧绷紧腰部，抬起一侧大腿起跑的姿势，是不是感觉抬腿时候腹部核心肌群(腹肌等)可以有自动收紧的感觉。</p><p><strong>最后来个总结：</strong></p><p><strong>1.分离骨盆 腹股沟处 的粘连。</strong></p><p><strong>2.分离 股内测肌缝匠肌区域 和 内收肌区域 的粘连</strong></p><p><strong>3.激活臀部肌肉</strong></p><p>维持方法：把骨盆回正以后，不需要额外的练习，<strong>只要正常站着，腹肌就会加强，竖脊肌就会松解。只要正常走路，臀肌就会被加强。</strong>打破了之前的恶性循环以后，身体自然而然的进入了正向的循环。多走路，多站着就是维持方法。<strong>当然练练卷腹，练练臀桥也更好(而这两个只是维持方法，不属于解决办法。反过来说，解决办法也可就是避免久坐，也即避免粘连和长期牵拉)。</strong></p><p><strong>风险提示：</strong>不要伤害到骨盆周围的神经(下图黄色)和动静脉(红蓝色)(<strong>大腿处有一根股动脉，别伤到</strong>)，疼的话一定不要按了，不要太深入，轻一些，慢慢来。<strong>你是松解肌肉不是给自己造成物理外伤，不要往死里怼。。不过也别怕，一般按摩伤不到神经血管。</strong></p><p><img src="https://pic3.zhimg.com/80/v2-a46975c2224c3915a28b21b8e12fb171_hd.jpg" alt></p><p><img src="https://pic3.zhimg.com/80/v2-85c223594e2da26dfd330097822f723b_hd.jpg" alt></p><p>最后，本文只适用于久坐导致的骨盆前倾。而且，其实如果你真的因为身体不舒服了，那应该先改变生活方式，导致你身体损伤的根本原因不是骨盆前倾而且久坐(实际你任何一种姿势，时间长了都不好，一直站着一直躺着都会不好），所以说影响你健康的更进一步说，其实是“久”。这个久不光是长期维持一种姿势，也包括过度运动，过度拉伸。</p><p><strong>如果你的骨盆前倾不影响到你的健康，实则没有改变的必要，只要不是长期经常主动发力的肌肉那它就不会紧张）</strong></p><p><strong>体态不良不是病理性的，把它理解为身体的一种适应性行为更好。</strong></p><p><strong>最主要是不要久坐。</strong></p><p><strong>最后，祝大家都拥有美好体态。</strong></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>运动</category>
      </categories>
      <tags>
        <tag>体态</tag>
      </tags>
  </entry>
  <entry>
    <title>Why Losing Kobe Bryant Felt Like Losing a Relative or Friend</title>
    <url>/2020/02/13/Why-Losing-Kobe-Bryant-Felt-Like-Losing-a-Relative-or-Friend/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri Feb 21 2020 16:05:06 GMT+0800 (GMT+08:00) --><p><img src="https://media-image1.baydn.com/85f5f5911e5b8517408539bca0d5dcea0fdf350892173d0ec6530b996846ac74.png?x-oss-process=image/quality,Q_90" alt></p><a id="more"></a><p>On the afternoon of January 26, I was at the Indiana men’s basketball game when a <strong>chorus</strong> of cellphones in the crowd pinged, alertinsg them to the news of Kobe Bryant’s death. I was <strong>astonished</strong> at how quickly fans’ attention switched from the game to <strong>utter shock</strong> and disbelief at the news of Bryant’s passing.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chorus [n]齐声，异口同声，合唱团，副歌，朗诵演员；[v]合唱，齐声说，异口同声地说</span><br><span class="line">utter [v]以口发出声音，讲，说；[adj]彻底的，完全的，绝对的</span><br><span class="line">utter shock 彻底震惊，无比震惊</span><br><span class="line">disbelief 不相信，怀疑</span><br></pre></td></tr></table></figure><blockquote><p>在1月26号的下午，我正在印第安纳步行者队的篮球比赛现场，这时，人群中手机铃声响起，告知人们科比布莱恩特死亡的消息。粉丝的注意力立刻从比赛转为对这个消息的无比震惊和不可置信，对此我大为惊讶。</p></blockquote><p>Soon, it seemed like the entire nation was in mourning.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mourning 悲痛，丧服，灵柩车</span><br><span class="line">    mourn [v]哀悼，服丧，忧伤</span><br><span class="line">    mourn for&#x2F;over 追悼，悼念</span><br><span class="line">    grieve [v]使悲伤，使苦恼，悲痛，哀悼</span><br><span class="line">    grieve for&#x2F;over 哀悼，追悼</span><br></pre></td></tr></table></figure><blockquote><p>很快，整个国家似乎都陷入了悲伤。</p></blockquote><p>Sure, we might <strong>expect</strong> the basketball world to <strong>grieve the passing of</strong> one its <strong>all-time</strong> greats. But <strong>grief</strong> came from all <strong>corners</strong>. The <strong>Grammy Awards</strong> <strong>featured</strong> <strong>poignant</strong> <strong>tributes</strong> to Bryant. People who had never met Bryant told reporters they felt like they just lose a family member.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">expect 预料，预期，认为...会发生，理应得到，期望，期待，猜想，认为某事是真实的</span><br><span class="line">grieve [v]使悲伤，使苦恼，悲痛，哀悼</span><br><span class="line">grieve the passing of 为...的逝世悲伤</span><br><span class="line">all-time greats 空前的，创纪录的，最伟大的球员</span><br><span class="line">grief 悲伤，悲痛，悲伤的事，悲痛的缘由</span><br><span class="line">corner 角落，拐角处，困境，窘境，地区，偏僻处；[v]相交成角，囤积，垄断，使陷入绝境，把...难住</span><br><span class="line">Grammy Awards 格莱美奖</span><br><span class="line">    award [v]授予，判定；[n]奖品，判决</span><br><span class="line">feature 容貌，特色，特征，起重要作用，以...为特色，由...主演；特写</span><br><span class="line">poignant 伤心至极的，辛酸的，痛切的，令人心碎的，强烈深刻的</span><br><span class="line">tribute 贡品，颂词，礼物</span><br><span class="line">    pay a tribute to 称赞，歌颂</span><br></pre></td></tr></table></figure><blockquote><p>诚然，我们可能期待篮球界为它最伟大的球员之一的逝去悲伤，不过伤痛弥漫了每个角落。格莱美奖给科比特写了悲伤的悼词。从来没有亲眼见到布莱恩特的人告诉笔者，他们感觉他们刚刚失去了家人。</p></blockquote><p>How can so many be so deeply <strong>affected</strong> by the death of someone they’ve never even met? Why might some people see Kobe Bryant as a family member?</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">affected 假装的；做作的；受到影响的；</span><br><span class="line">    affect [v]影响，假装，感动，感染，倾向，喜欢；[n]情感，引起感情的因素</span><br></pre></td></tr></table></figure><blockquote><p>一个人的死亡，怎么能如此广泛而深远地影响从未见过他的人？为什么有些人把科比布莱恩特视为家人？</p></blockquote><p>As a social <strong>psychologist</strong>, I’m not <strong>surprised by</strong> these <strong>reactions</strong>. I see three main reasons, <strong>grounded in</strong> psychology, that <strong>explain</strong> why Bryant’s death had such a <strong>profound</strong> <strong>effect</strong> on so many people.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">social 社会的，社交的，群居的；[n]联欢会联谊会</span><br><span class="line">psychologist 心理学家</span><br><span class="line">reaction 反应，感应，反作用，反动，复古</span><br><span class="line">ground in 训练...，打好...基础</span><br><span class="line">grounded in &#x3D; based on 基于</span><br><span class="line">explain 说明，解释</span><br><span class="line">profound 深刻深刻深远深奥的，知识渊博的，见解深刻的</span><br><span class="line">effect [n]效果，作用，影响；[v]产生，达到目的</span><br></pre></td></tr></table></figure><blockquote><p>作为社会心理学家，我对这些反应并不感到惊奇。基于心理学我找到三个主要的原因，可以解释为什么科比・布莱恩特的死亡深深的影响了如此多的人。</p></blockquote><p>Feelings Formed From <strong>Afar</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">afar [adv]从远处，远处，遥远，远离着</span><br></pre></td></tr></table></figure><blockquote><p>潜移默化的感情。</p></blockquote><p>Psychologists Shira Gabriel and Melanie Green have written about how many of us form what are called “<strong>parasocial bonds</strong>“ with other people. These <strong>tend to</strong> be one-way relationships with people whom we’ve never met or interacted with, but <strong>nonetheless</strong> feel <strong>intimately</strong> <strong>connected</strong> to.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">* parasocial bonds 准社会关系</span><br><span class="line">para- [前缀] 表示“超” “相似“ “准“ “旁“ “侧</span><br><span class="line">tend to 往往，倾向于，易于，引起，造成，势必</span><br><span class="line">one-way 单行道的，单向的</span><br><span class="line">nonetheless 虽然如此，但是</span><br><span class="line">intimately 熟悉地，亲密地，私下地，秘密地，详尽地</span><br><span class="line">    intimate 亲密的，私人的；[v]暗示，通知，宣布；[n]至交，知己</span><br><span class="line">connected 连接的，有关系的，有联系的，有社交关系的，有血统关系的</span><br></pre></td></tr></table></figure><blockquote><p>心理学家Shira Gabriel和Melanie Green撰写了有关我们中有多少人与他人形成所谓的“准社会关系”的文章。这些往往是与我们从未见过面或互相交流过的，但是依然觉得密切相关的人之间建立的单向关系。</p></blockquote><p>Although ideas about parasocial bonds were first developed in the 1950s, they’ve <strong>garnered</strong> a lot of attention over <strong>the past couple of decades</strong>. For example, loyal fans of Oprah Winfrey and Ellen DeGeneres watch their shows almost every day, with the hosts actively trying to build a warm rapport with their viewers and their audience developing intense feelings of attachment.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">* garner 储存；获得；把...存入谷仓；[n]谷仓</span><br><span class="line">the past couple of decades 过去几十年</span><br></pre></td></tr></table></figure><blockquote></blockquote><!-- rebuild by neat -->]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英文短文阅读</tag>
      </tags>
  </entry>
  <entry>
    <title>The Ecnomist——The World in 2019</title>
    <url>/2020/02/10/The%20Ecnomist%E2%80%94%E2%80%94The%20World%20in%202019/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri Feb 21 2020 16:05:06 GMT+0800 (GMT+08:00) --><p><img src="http://q5iywwuvz.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202020-02-11%20%E4%B8%8B%E5%8D%883.01.27.png" alt></p><a id="more"></a><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="520" height="86" src="//music.163.com/outchain/player?type=2&id=28357876&auto=1&height=66"></iframe><p><code>Leonardo da Vinci</code> 500 years on<br><code>Angelina Jolie</code> Responding to refugees<br><code>Laurene Powell Jobs</code> Voting rights<br><code>Christine Lagarde</code> Inclusive growth<br><code>Pony Ma</code> Virtuous tech<br><code>Stacey Cunningham</code> Markets and Main St</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Leonardo da Vinci 李奥纳多·达·芬奇</span><br><span class="line">Responding to refugees 对难民的回应</span><br><span class="line">Laurence Powell Jobs 劳伦哪·鲍威尔·乔布斯 Steve Jobs&#39;s daughter</span><br><span class="line">voting rights 投票权</span><br><span class="line">Christine Lagarde 克里斯蒂娜·拉加德 法国财政部长</span><br><span class="line">Pony Ma 马化腾</span><br><span class="line">Virtuous tech 良性技术</span><br><span class="line">Stacey Cunningham 史黛西-坎宁安 纽交所首位女总裁</span><br></pre></td></tr></table></figure><h1 id="From-the-Editor"><a href="#From-the-Editor" class="headerlink" title="From the Editor"></a>From the Editor</h1><h2 id="The-World-in-2019"><a href="#The-World-in-2019" class="headerlink" title="The World in 2019"></a>The World in 2019</h2><p><strong>Daniel Franklin, Editor,</strong> <strong><em>The World in 2019</em></strong><br><img src="http://q5iywwuvz.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202020-02-11%20%E4%B8%8B%E5%8D%883.04.11.png" alt><br>It’s the year of <code>vegan</code>, <code>&quot;slow social&quot;</code>, <code>gender self-ID</code> and <code>civil partnerships</code>.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vegan&#x2F;veganism 纯素主义者</span><br><span class="line">slow social 慢社交</span><br><span class="line">gender self-ID 性别自我认同</span><br><span class="line">civil partnerships 公民伙伴关系&#x2F;民事伙伴关系</span><br></pre></td></tr></table></figure><blockquote><p><strong>这是纯素食，慢社交，性别自我认同和公民伙伴关系的一年。</strong></p></blockquote><p>GOING INTO 2019, the world looks <code>wobbly</code>. From <code>Brazil</code> to Italy, more <code>populists</code> are <code>in power</code>, the global economy is more <code>fragile</code> than it was a year age, the markets are <code>jittery</code>, a trade war between America and China is <code>under way</code>, technology (and <code>giant</code> tech companies) <code>arouse</code> growing <code>angst</code> and the rules-based international order is under threat. That makes this a <code>tricky</code> time for <code>predictions</code>, but also an <code>intriguing</code> one.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wobbly 摆动的，不稳定的，歪斜的</span><br><span class="line">Brazil 巴西🇧🇷</span><br><span class="line">populist 平民主义者</span><br><span class="line">in power 当权，执政</span><br><span class="line">fragile 易碎的，虚弱的，脆弱的，禁不起折腾的</span><br><span class="line">jittery 神经过敏的，紧张不安的，战战兢兢的</span><br><span class="line">under way 航行中，进行中</span><br><span class="line">giant 巨人，大力士，伟人，卓越人物，巨大的特大的</span><br><span class="line">giant tech company 大型科技公司</span><br><span class="line">arouse 引起，激发，唤醒</span><br><span class="line">angst （因忧世忧民引起的）焦虑不安，烦恼</span><br><span class="line">tricky 机警的，狡猾的</span><br><span class="line">prediction 预言，预言的事物</span><br><span class="line">intriguing 引起好奇心的，令人感兴趣的，有迷惑力的</span><br></pre></td></tr></table></figure><blockquote><p><strong>进入2019年，世界看起来摇摆不定，从巴西到意大利，更多的民粹主义者掌权，全球经济比上一年更加脆弱，市场风声鹤唳，中美贸易战正在进行，技术（包括大型科技公司）出引起越来越多的焦虑，基于规则的国际秩序正受到威胁。这使得这是一个很难预测的时刻，但也是一个有趣的时刻。</strong></p></blockquote><p>What do The Economist’s <code>journalists</code> and <code>guest</code> <code>contributors</code> <code>foresee</code> for the year <code>ahead</code>? Here are a <code>dozen</code> <code>takeaways</code>.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">journalists 记日志者，新闻工作者</span><br><span class="line">guest 客人，旅客，客串演员</span><br><span class="line">contributors 捐款人，促成因素，撰稿人，投稿人</span><br><span class="line">foresee 预知，预见</span><br><span class="line">ahead 向前，预先，领先，先前的，领先的</span><br><span class="line">dozen 一打的，十二个[n][adj]</span><br><span class="line">takeaway 外卖食品，外卖餐馆；外卖的，外吃的</span><br></pre></td></tr></table></figure><blockquote><p><strong>《经济学人》的记者和客座撰稿人对未来一年有何预测？这里有十几份外卖。</strong></p></blockquote><p><strong>1. The economic wind is changing.</strong> By <code>mid-year</code> America will break its <code>record</code> for its longest <code>uninterrupted</code> <code>expansion</code>, but <code>by the end of</code> the year it could be <code>heading into</code> a <code>recession</code>. China’s <code>growth rate</code> will <code>slow down</code>, while India’s <code>speeds up</code>. <code>Post-chaos</code> <code>Syria</code> will top <code>the global growth league</code>; <code>at the other end</code> will be a <code>shrinking</code> <code>Venezuela</code> and <code>Iran</code>. In Europe, Italy will <code>flirt with</code> <code>financial crisis</code>.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mid-year 年中，学年中期考试</span><br><span class="line">record</span><br><span class="line">uninterrupted 不间断的，连续的</span><br><span class="line">interrupted 被阻止的，中断的，不通的</span><br><span class="line">expansion 扩张，扩大，膨胀，扩张物，膨胀物</span><br><span class="line">by the end of 到...时为止，在...之前</span><br><span class="line">head into 走进，进入，走向，陷入</span><br><span class="line">recession 经济衰退，不景气，后退，撤退，撤回</span><br><span class="line">growth rate 增长率</span><br><span class="line">slow down 减速</span><br><span class="line">speed up 加速</span><br><span class="line">Post-chaos 后混乱时期</span><br><span class="line">Syria 叙利亚🇸🇾</span><br><span class="line">league 联盟，社团，使...结盟，与...联合</span><br><span class="line">the global growth league 全球增长联盟</span><br><span class="line">at the other end 在另一端</span><br><span class="line">shrinking 皱缩 shrink 收缩，退缩</span><br><span class="line">Venezuela 委内瑞拉🇻🇪</span><br><span class="line">Iran 伊朗🇮🇷</span><br><span class="line">flirt with 对...调情，不认真考虑</span><br><span class="line">financial crisis 金融危机</span><br></pre></td></tr></table></figure><blockquote><p><strong>经济风向正在改变。到年中，美国将打破其最长不间断扩张记录，但到年底，美国可能会陷入衰退。中国的增长速度将放缓，而印度的增长速度将加快。后混乱时期的叙利亚将在全球经济增长联盟中名列前茅；另一端将是不断萎缩的委内瑞拉和伊朗。在欧洲，意大利将面临金融危机。</strong></p></blockquote><p><strong>2. The markets <code>converge</code>.</strong> But which way? Will America’s <code>stockmarket</code> <code>fall back</code>, or <code>the rest of</code> the world rise? The smart <code>bet</code> is on the latter. America’s bosses, however, should enjoy life while they can: the good times for usa <code>Inc</code> won’t <code>last</code>.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">converge 集中于一点，会于一点，趋于相似或相同</span><br><span class="line">stockmarket 证券市场，证券交易所，证券交易，证券行情</span><br><span class="line">fall back 后退，（对方因被击败而）退却</span><br><span class="line">the rest of 其余的，剩下的</span><br><span class="line">bet 打赌，赌金赌注，肯定，确信</span><br><span class="line">Inc 股份有限公司 incorporated【股份有限的，组成公司的】</span><br><span class="line">last 延续，持续，最后的，经受住，上一次，最近一次，最后</span><br></pre></td></tr></table></figure><blockquote><p><strong>市场收缩。但是是哪条路呢？美国股市会回落？还是世界其他地区会上升？明智的选择是后者。然而，美国的老板们应该尽可能享受生活：美国公司的美好时光不会长久。</strong></p></blockquote><p><strong>3. Democracy has a big year.</strong> Countries with more than a third of the world’s population will hold <code>nationwide</code> elections——including India, the world’s biggest democracy, as well as <code>Indonesia</code> and <code>Nigeria</code>. <code>Optimists</code> hope this will bring the beginnings of <code>reversal</code> in the global <code>trend</code> of <code>recent</code> years towards <code>declining</code> freedoms.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">democracy 民主，民主制，民主国家</span><br><span class="line">nationwide 全国范围的，全国性的</span><br><span class="line">Indonesia 印度尼西亚🇮🇩</span><br><span class="line">Nigeria 尼日利亚🇳🇬</span><br><span class="line">Optimist 乐观主义者</span><br><span class="line">reversal [n]逆转，撤销，反转</span><br><span class="line">trend 趋势，倾向，流行</span><br><span class="line">recent 不久前的，近来的</span><br><span class="line">decline 下降，减少，衰退，辞谢，谢绝（邀请等），（太阳）落下</span><br></pre></td></tr></table></figure><blockquote><p><strong>民主有一个重要的一年。世界人口超过三分之一的国家将举行全国性的选举，其中包括世界上最大的民主国家印度，以及印尼和尼日利亚。乐观主义者希望，这将带来近年来全球自由度下降趋势逆转的开端。</strong></p></blockquote><p><strong>4. <code>Brexit</code> happens.</strong> And <code>as</code> <code>Britain</code> leaves the European Union the <code>recriminations</code> will <code>intensify</code>. The EU, <code>meanwhile</code>, will get a new <code>commission</code>, a new <code>parliament</code> and a new head for the European Central Bank.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Brexit 英国脱欧</span><br><span class="line">as 因为，随着，依照，如同，同样地；和...一样的</span><br><span class="line">Britain&#x2F; 英国 Great Britain</span><br><span class="line">recriminations 吵架，相互指责</span><br><span class="line">intensify 增强，加剧</span><br><span class="line">meanwhile 同时，其间</span><br><span class="line">commission 授权，委托，委员会，佣金，回扣</span><br><span class="line">parliament 议会，国会</span><br></pre></td></tr></table></figure><blockquote><p><strong>英国脱欧发生了。并且随着英国退出欧盟，相互指责将愈演愈烈。与此同时，欧盟将获得一个新的委员会，一个新的议会和一个新的欧洲央行行长。</strong></p></blockquote><p><strong>5. China gets nervous about the number nine.</strong> Years ending in nine bring a <code>clutch</code> of <code>awkward</code> <code>anniversaries</code> that worry China’s leaders. In 2019 it is 100 years since the May Fourth Movement, a much-<code>celebrated</code> <code>protest</code>, and 30 years since the bloody <code>suppression</code> of <code>student-led</code> <code>demonstrations</code> in Tiananmen <code>Square</code>.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">clutch [v]抓住，紧握；[n]控制，离合器，紧急关头；[adj]紧急关头的，没有手提带或背带的</span><br><span class="line">a clutch of 一系列，一次产的或孵的蛋，一群人，一组</span><br><span class="line">awkward 笨拙的，尴尬的，棘手的，不合适的</span><br><span class="line">anniversary 周年纪念</span><br><span class="line">celebrated 有名的，著名的</span><br><span class="line">protest [n]抗议，反对；[v]声明，抗议</span><br><span class="line">suppression 压制，镇压，禁止，抑制，阻止，忍住，隐瞒，压抑，被压抑的思想（或冲动）</span><br><span class="line">student-led 学生领导的</span><br><span class="line">demonstrate 游行示威，说明，演示，论证，证明，表示，显露</span><br><span class="line">demonstration 表明，证明，游行示威</span><br><span class="line">square 直角的，正方形的，正直的，平方，正方形，广场，与...一致</span><br></pre></td></tr></table></figure><blockquote><p><strong>中国对数字九感到紧张。以九为结尾的年份带来了一系列令中国领导人担忧的尴尬的周年纪念。2019年是五四运动100周年，这是一次非常著名的抗议活动，也是血腥镇压天安门广场</strong></p></blockquote><p><strong>6. <code>Famous figures</code> return to the <code>limelight</code>.</strong> They do so thanks to their <code>anniversaries</code>: 150 years since <code>Mahatma</code> <code>Gandhi</code>‘s birth, 500 years since Hernán Cortés arrived in Mexico and since Leonardo da Vinci’s death(the Tuscan genius time-travels to 2019 to share his <code>observations</code> about the modern world, and his drawings <code>inspire</code> our cover).</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">figure [n]图形，数字，体形，人物，画像，价格；[v]出现，计算，扮演角色，描绘，认为，象征</span><br><span class="line">Famous figures 著名人物</span><br><span class="line">limelight 众人注意的的中心，关注焦点</span><br><span class="line">anniversary 周年纪念</span><br><span class="line">mahatma 大圣，超人，圣雄</span><br><span class="line">Gandhi 甘地</span><br><span class="line">observation 注意，观察，观察力，言论，评论，意见</span><br><span class="line">modern 现代的，近代的，新式的，时髦的，当代风格的，现代派的</span><br><span class="line">inspire 鼓舞，激发，启示，产生</span><br></pre></td></tr></table></figure><blockquote><p><strong>名人又重新成为人们关注的焦点。他们这样做是由于他们的周年纪念：圣雄甘地诞辰150周年，埃尔南·科尔特斯抵达墨西哥500年，莱昂纳多·达·芬奇逝世（托斯卡纳天才时间旅行到2019，分享他对现代世界的观察，他的画激发我们的封面）。</strong></p></blockquote><p><strong>7. A new <code>Moonrush</code> begins.</strong> Fifty years after neil Armstrong took his giant <code>leap</code> for <code>mankind</code>, <code>spacecraft</code>(some of them private) are <code>heading back</code> to the Moon. Meanwhile, NASA’s New Horizons probe reaches <code>Ultima Thule</code>, in the most <code>distant</code> <code>encounter</code> in the history of <code>spaceflight</code>.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Moonrush 奔月</span><br><span class="line">leap 跳跃，飞跃</span><br><span class="line">mankind 人类，男性</span><br><span class="line">spacecraft 航天器</span><br><span class="line">head back 返回</span><br><span class="line">Ultima Thule 天涯海角，最远点</span><br><span class="line">distant （时间或空间）远隔的，遥远的，不太友好，不太热情</span><br><span class="line">encounter 遇到，遭遇，突然碰到</span><br><span class="line">spaceflight 航天，宇宙飞行</span><br></pre></td></tr></table></figure><blockquote><p><strong>新一轮的奔月开始。在尼尔·阿姆斯特朗为人类实现巨大飞跃的五十年后，宇宙飞船（其中一些是私人飞船）正在重返月球。与此同时，NASA的「新视野号」探测器到达被称为「极北之地」（Ultima Thule）的柯伊伯带天体，这是太空飞行史上最遥远的探索。</strong></p></blockquote><p><strong>8. There’s no <code>hiding from</code>, or for, tech.</strong> Whether it’s <code>artificial intelligence</code> or <code>facial</code> <code>recognition</code>, tech will be everywhere. But <code>Silicon Valley</code> may have <code>peaked</code>, and the tech giants will be in <code>regulators</code>‘ <code>sights</code> in both America and Europe.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hide 隐藏，隐瞒，兽皮，皮革</span><br><span class="line">hide from 隐瞒</span><br><span class="line">artificial intelligence 人工智能</span><br><span class="line">artificial 人造的，人工的，虚假的，不真挚的，人为的</span><br><span class="line">intelligence 智力，智慧，理解力，情报，消息，情报人员</span><br><span class="line">facial 面部的，表面的，脸的，美容，美颜，脸部按摩</span><br><span class="line">recognition 认出，识别，承认</span><br><span class="line">Silicon Valley 硅谷</span><br><span class="line">peak [n]顶点，山峰，最高点；[v]使到达最高点，使竖起，消瘦，到达最高点，变憔悴；[adj]最高的，最大值的</span><br><span class="line">peaked 尖的</span><br><span class="line">regulator 调节器，校准器，监管机构</span><br><span class="line">regulate 调节，规定，有系统的管理，控制，校准</span><br><span class="line">sight 视野，视力，情景，景象，看见</span><br></pre></td></tr></table></figure><blockquote><p><strong>没有什么可以逃过技术。无论是人工智能还是面部识别，科技将无处不在。但硅谷可能已经见顶，科技巨头们将进入欧美监管机构的视野。</strong></p></blockquote><p><strong>9. Big culture makes a <code>splash</code>.</strong> America has the <code>excitement</code> of The <code>Shed</code> in New York (a giant new space for the arts). Germany experiences the <code>shock</code> of the <code>controversial</code> new Humboldt <code>Forum</code> in Berlin.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">splash 溅起，溅落，</span><br><span class="line">make a splash 引起轰动</span><br><span class="line">excitement 兴奋，激动，令人兴奋的事</span><br><span class="line">shed 棚，库，流出，流下，蜕皮，树叶脱落</span><br><span class="line">shock 打击，震动，休克，受到震动，感到震惊，蓬乱的，浓密的</span><br><span class="line">controversial 有争议的，引起争议的</span><br><span class="line">forum 论坛，讨论会，法庭，公开讨论的广场</span><br><span class="line">new Humboldt Forum</span><br></pre></td></tr></table></figure><blockquote><p><strong>大文化引起轰动。美国对纽约棚屋（一个巨大的艺术新空间）感到兴奋。德国经历了柏林有争议的新洪堡论坛的冲击。</strong></p></blockquote><p>The arts <code>represent</code> an <code>outlet</code> of <code>expression</code>, that is usually influenced by culture and which <code>in turn</code> helps to change culture. <code>As such</code>, the arts are a <code>physical</code> <code>manifestation</code> of the <code>internal</code> <code>creative</code> <code>impulse</code>. <code>Major</code> <code>constituents</code> of the arts include literature – including <code>poetry</code>, <code>novels</code> and short stories, and <code>epics</code>; performing arts – <code>among</code> them music, dance, and <code>theatre</code>; <code>culinary</code> arts such as baking, <code>chocolatiering</code>, and <code>winemaking</code>; media arts like <code>photography</code> and <code>cinematography</code>, and visual arts – including drawing, painting, <code>ceramics</code>, and <code>sculpting</code>. Some art forms combine a visual element with <code>performance</code> (e.g. film) and the <code>written</code> word (e.g. comics).</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">represent 表现，描绘，代表，象征，表示，作为...的代表</span><br><span class="line">    representative 代表，代理人，有代表性的，典型的</span><br><span class="line">expression 表达，表现，表示，表情，感情，措辞，词组</span><br><span class="line">in turn 依次，轮流，反之，反过来</span><br><span class="line">as such 因此，照这样，就这点而论</span><br><span class="line">physical 身体的，物质的，物理的，体格检查</span><br><span class="line">manifestation 显示，表示，示威运动</span><br><span class="line">internal 国内的，内部的，内在的</span><br><span class="line">creative 创造性的，有创造力的</span><br><span class="line">    creation 创造，创作，创作物，产物</span><br><span class="line">    creativity 创造性，创造力，创作能力</span><br><span class="line">impulse [n]冲动，脉冲，刺激，推动力，神经冲动；[v]推动</span><br><span class="line">major 主要的，主修的，重要的，成年人，主修科目，陆军少校，主修</span><br><span class="line">literature 文学，文学作品，文献，图书资料</span><br><span class="line">poetry 诗篇，诗歌，诗集，作诗法，诗情诗意</span><br><span class="line">    poem 诗 poet 诗人</span><br><span class="line">    portray [v]画像，描述，扮演</span><br><span class="line">    portrait [n]肖像，画像，生动的描写</span><br><span class="line">novel 新奇的，异常的，小说</span><br><span class="line">epic [adj]史诗的，叙事诗的；[n]史诗，叙事诗</span><br><span class="line">performing arts 表演艺术</span><br><span class="line">among 在...中间，在... 之中</span><br><span class="line">theatre 电影院，戏院，戏剧，阶梯式讲堂</span><br><span class="line">culinary 厨房的，烹饪的 culinary arts 烹饪艺术，厨艺</span><br><span class="line">chocolatiering 巧克力分层</span><br><span class="line">    chocolatier 巧克力生产（或销售）商</span><br><span class="line">winemaking 酿酒</span><br><span class="line">photography 摄影术</span><br><span class="line">    photograph 照片，相片，拍照</span><br><span class="line">cinematograph电影术</span><br><span class="line">    cinematograph 电影放映机，电影摄影机</span><br><span class="line">    cinema 电影院，电影艺术，电影业</span><br><span class="line">ceramics 制陶术，陶器，陶瓷</span><br><span class="line">sculpting 雕刻品</span><br><span class="line">    sculpt 雕刻，造型，雕刻品</span><br><span class="line">written 书面的，全挂在脸上的，形之于色，明显受到...的影响；显然有（某特点）</span><br><span class="line">comics 连环画，漫画</span><br><span class="line">    comic 滑稽的，好笑的，喜剧的，</span><br><span class="line">    comedy 喜剧，喜剧狂</span><br></pre></td></tr></table></figure><blockquote><p><strong>艺术代表着一种表达方式，它通常受到文化的影响，反过来又有助于改变文化。因此，艺术是一种内在创造冲动的物质表现。艺术的主要组成部分包括文学——包括诗歌、小说、短篇小说和史诗；表演艺术——其中包括音乐、舞蹈和戏剧；烹饪艺术，例如烘焙，巧克力加工和酿酒；摄影，电影摄影等媒体艺术，以及绘画，绘画，陶瓷和雕刻等视觉艺术。一些艺术形式将视觉元素与表演（例如电影）和文字（例如漫画）结合在一起。</strong></p></blockquote><h1 id="Leaders"><a href="#Leaders" class="headerlink" title="Leaders"></a>Leaders</h1><!-- rebuild by neat -->]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>The Economist</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWeb从入门到入土Part1. JSP环境搭建及入门</title>
    <url>/2019/03/05/JavaWeb%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-Part1.JSP%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8A%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri Feb 21 2020 16:05:06 GMT+0800 (GMT+08:00) --><p><img src="http://www.9553.com/upload/2015/1030/20151030022850505.png" alt></p><a id="more"></a><h1 id="静态网页和动态网页区别"><a href="#静态网页和动态网页区别" class="headerlink" title="静态网页和动态网页区别"></a>静态网页和动态网页区别</h1><h2 id="静态网页"><a href="#静态网页" class="headerlink" title="静态网页"></a>静态网页</h2><p>html、cs、js、jquery</p><h2 id="动态网页"><a href="#动态网页" class="headerlink" title="动态网页"></a>动态网页</h2><p>百度搜索房价、天气（会随着时间、地点、用户操作改变而改变）</p><h1 id="CS架构-amp-BS架构"><a href="#CS架构-amp-BS架构" class="headerlink" title="CS架构&amp;BS架构"></a>CS架构&amp;BS架构</h1><h2 id="CS架构"><a href="#CS架构" class="headerlink" title="CS架构"></a>CS架构</h2><p>Client Server架构（如QQ客户端，各种电脑端游戏）</p><h3 id="CS架构优势"><a href="#CS架构优势" class="headerlink" title="CS架构优势"></a>CS架构优势</h3><ol><li>能充分发挥客户端PC的处理能力，很多工作可以在客户端处理后再提交给服务器，所以CS客户端响应速度快。</li><li>C/S结构的管理信息系统具有较强的事务处理能力，能实现复杂的业务流程。</li><li>操作界面漂亮、形式多样，可以充分满足客户自身的个性化要求。</li><li>安全性能可以很容易保证，C/S一般面向相对固定的用户群，程序更加注重流程，它可以对权限进行多层次校验，提供了更安全的存取模式，对信息安全的控制能力很强。一般高度机密的信息系统采用C/S结构适宜。</li></ol><h3 id="CS架构劣势"><a href="#CS架构劣势" class="headerlink" title="CS架构劣势"></a>CS架构劣势</h3><ol><li>如果软件升级，所有软件都需要升级</li><li>维护麻烦：需要维护每一台客户端软件</li><li>每一台客户端都需要安装客户端软件</li><li>分布功能弱，针对点多面广且不具备网络条件的用户群体，不能够实现快速部署安装和配置。</li><li>用户群固定。由于程序需要安装才可使用，因此不适合面向一些不可知的用户，所以适用面窄，通常用于局域网中。</li></ol><h2 id="BS架构"><a href="#BS架构" class="headerlink" title="BS架构"></a>BS架构</h2><p>Browser Server架构（如网页QQ，网页游戏）</p><h3 id="BS架构优势"><a href="#BS架构优势" class="headerlink" title="BS架构优势"></a>BS架构优势</h3><ol><li>分布性强，客户端零维护。只要有网络、浏览器，可以随时随地进行查询、浏览等业务处理。</li><li>业务扩展简单方便，通过增加网页即可增加服务器功能。</li><li>维护简单方便，只需要改变网页，即可实现所有用户的同步更新。</li><li>开发简单，共享性强。</li></ol><h3 id="BS架构劣势"><a href="#BS架构劣势" class="headerlink" title="BS架构劣势"></a>BS架构劣势</h3><ol><li>个性化特点明显降低，无法实现具有个性化的功能要求。</li><li>在跨浏览器上，BS架构不尽如人意。</li><li>客户端服务器端的交互是请求-响应模式，通常动态刷新页面，响应速度明显降低（Ajax可以一定程度上解决这个问题）。无法实现分页显示，给数据库访问造成较大的压力。</li><li>在速度和安全性上需要花费巨大的设计成本。</li><li>功能弱化，难以实现传统模式下的特殊功能要求。</li></ol><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>CS响应速度快，安全性强，一般应用于局域网中，但是开发维护成本高；BS可以实现跨平台，客户端零维护，但是个性化能力低，响应速度较慢。所以有些单位日常办公应用BS，在实际生产中使用CS结构。</p><h1 id="Tomcat下载安装、目录结构及功能"><a href="#Tomcat下载安装、目录结构及功能" class="headerlink" title="Tomcat下载安装、目录结构及功能"></a>Tomcat下载安装、目录结构及功能</h1><h2 id="Tomcat下载安装"><a href="#Tomcat下载安装" class="headerlink" title="Tomcat下载安装"></a>Tomcat下载安装</h2><p>将Tomcat从官网<strong><em><a href="https://tomcat.apache.org/whichversion.html" target="_blank" rel="noopener">https://tomcat.apache.org</a></em></strong>或（（注意不同版本号对应的Java-Version要求）<br>Tomcat<strong><em><a href="https://mirrors.cnnic.cn/apache/tomcat/" target="_blank" rel="noopener">国内镜像</a></em></strong>，根据<strong><em><a href="https://blog.csdn.net/qq_41113081/article/details/88061570" target="_blank" rel="noopener">步骤</a></em></strong>进行下载安装，速度会快一点。</p><h2 id="文件结构及功能"><a href="#文件结构及功能" class="headerlink" title="文件结构及功能"></a>文件结构及功能</h2><blockquote><p><strong>bin</strong>: 可执行文件:(Windows:startup.bat/shutdown.bat)<br>Mac/Linux:startup.sh/shutdown.sh)<br><strong>conf</strong>:配置文件（server.xml）用于配置Tomcat<br><strong>lib</strong>：Tomcat依赖的jar包<br><strong>log</strong>：日志文件（记录出错等信息）<br><strong>temp</strong>：临时文件<br><strong>webapps</strong>：可执行的项目（将我们开发的项目 放入该目录）<br><strong>work</strong>：存放由jsp翻译成的Java，以及编译成的class文件</p></blockquote><p><em>只需要写jsp，最终执行文件是class文件。jsp -&gt; java -&gt; class</em></p><h1 id="配置Tomcat"><a href="#配置Tomcat" class="headerlink" title="配置Tomcat"></a>配置Tomcat</h1><h2 id="a-配置jdk（配置TOMCAT必须配置JAVA-HOME）"><a href="#a-配置jdk（配置TOMCAT必须配置JAVA-HOME）" class="headerlink" title="a. 配置jdk（配置TOMCAT必须配置JAVA_HOME）"></a>a. 配置jdk（配置TOMCAT必须配置JAVA_HOME）</h2><p>以及java_home classPath path</p><h2 id="b-配置catalinahome"><a href="#b-配置catalinahome" class="headerlink" title="b. 配置catalinahome"></a>b. 配置catalinahome</h2><p><strong>Windows系统：</strong><br>电脑 -&gt; 属性 -&gt; 高级系统设置 -&gt; 高级 -&gt; 环境变量 -&gt; 系统变量 -&gt; 新建：<br>变量名：<code>CATALINA_HOME</code>；变量值：TOMCAT文件夹目录</p><h2 id="验证是否配置成功："><a href="#验证是否配置成功：" class="headerlink" title="验证是否配置成功："></a>验证是否配置成功：</h2><p>Windows系统直接执行<code>bin/startup.bat</code>，执行成功最终会出现Server startup in *** ms。<br>Linux系统用命令行执行<code>./startup.sh</code>执行成功最终会出现Tomcat started.<br>关闭Tomcat服务时，不要直接关闭终端窗口，而是运行<code>shutdown.bat</code>/<code>shutdown.sh</code>，否则有可能导致非正常关闭。</p><h2 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h2><p>可能与其他服务的端口号冲突，tomcat默认端口号<code>8080</code>（此端口较为常见，容易冲突），建议修改此端口（例如<code>8888</code>）。<br><code>conf -&gt; server.xml</code>大概65行附近</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;Connector connectionTimeout&#x3D;&quot;20000&quot; port&#x3D;&quot;8080&quot; protocol&#x3D;&quot;HTTP&#x2F;1.1&quot; redirectPort&#x3D;&quot;8443&quot;&#x2F;&gt;</span><br><span class="line">&#x2F;&#x2F;修改8080为8888</span><br></pre></td></tr></table></figure><p>改完之后重新启动就可以了<br>然后浏览器访问<strong><em><a href="http://localhost:8888" target="_blank" rel="noopener">localhost:8888</a></em></strong>，如果出现以下页面，则说明配置成功：</p><p><img src="https://i.loli.net/2020/02/14/Ik3wVzbxDeZufig.png" alt></p><p>默认访问的位置是apache-tomcat-x-x-x/webapps/ROOT文件</p><p><img src="https://i.loli.net/2020/02/14/pf7DOhQcUT9gP6j.png" alt="屏幕快照 2020-02-14 下午6.20.30.png"></p><p>例如访问examples文件，则地址为<strong><em><a href="http://localhost:8888/examples" target="_blank" rel="noopener">localhost:8888/examples</a></em></strong></p><p>在examples/WEB-INF/web.xml文件最后</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;welcome-file-list&gt;</span><br><span class="line">    &lt;welcome-file&gt;index.html&lt;&#x2F;welcome-file&gt;</span><br><span class="line">    &lt;welcome-file&gt;index.xhtml&lt;&#x2F;welcome-file&gt;</span><br><span class="line">    &lt;welcome-file&gt;index.htm&lt;&#x2F;welcome-file&gt;</span><br><span class="line">    &lt;welcome-file&gt;index.jsp&lt;&#x2F;welcome-file&gt;</span><br><span class="line">&lt;&#x2F;welcome-file-list&gt;</span><br></pre></td></tr></table></figure><p><code>&lt;welcome-file-list&gt;</code>是<strong><em><a href="https://blog.csdn.net/Goodbye_Youth/article/details/80792935" target="_blank" rel="noopener">xml标签</a></em></strong>，以<code>&lt;/welcome-file-list&gt;</code>结尾，里面记录了访问该项目时，默认打开的页面，从上到下依次查找的顺序是index.html、index.xhtml等等<code>&lt;welcome-file&gt;</code>里记录的信息，如果上一个不存在，则打开下一个，我们访问<strong><em><a href="http://localhost:8888/examples" target="_blank" rel="noopener">localhost:8888/examples</a></em></strong>时，有一<code>index.html</code>存在，所以打开的就是列表中的第一个页面<code>index.html</code>。</p><p><img src="https://i.loli.net/2020/02/14/j52aV8uX6kmfIKB.png" alt></p><h2 id="常见状态码"><a href="#常见状态码" class="headerlink" title="常见状态码"></a>常见状态码</h2><p>200: 一切正常<br>404: 一切正常<br>300/301: 页面重定向（跳转）<br>403: 权限不足（如果访问a目录，但是目录设置不可见）<br>500: 服务器内部错误（代码有误）<br>其他: 慢慢积累</p><h1 id="手动搭建一个项目"><a href="#手动搭建一个项目" class="headerlink" title="手动搭建一个项目"></a>手动搭建一个项目</h1><p>（给初学者的建议，一定要自己手动搭建过项目，要不然到后面还得重新学，避免吃夹生饭）</p><h2 id="创建文件结构："><a href="#创建文件结构：" class="headerlink" title="创建文件结构："></a>创建文件结构：</h2><p>1.在<code>webapps</code>文件夹中创建一个新文件夹（名字为项目名，如JspProject）。<br>2.便于学习，先从别的项目随便copy一个<code>web.xml</code>过来，放进<code>WEB-INF</code>文件夹，新建两个空文件夹<code>classes</code>和<code>lib</code>。</p><blockquote><p>每个项目都有一个<code>WEB-INF</code>文件夹，里面有一个<code>web.xml</code>文件，还有<code>classes</code>文件夹（存放字节码文件，前面提到过，<code>jsp</code>文件翻译成<code>java</code>文件，再编译成<code>class</code>文件，最终就放在<code>classes</code>文件夹），以及<code>lib</code>目录（存放<strong>当前</strong>项目需要的<code>jar</code>包，<strong>局部</strong>），在Tomcat根目录下也有一个lib文件夹，里面存放的jar包每一个项目都会包含（<strong>全局</strong>）。</p></blockquote><p><strong><code>web.xml</code></strong>内容:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;web-app xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot; xmlns&#x3D;&quot;http:&#x2F;&#x2F;xmlns.jcp.org&#x2F;xml&#x2F;ns&#x2F;javaee&quot; xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;xmlns.jcp.org&#x2F;xml&#x2F;ns&#x2F;javaee http:&#x2F;&#x2F;xmlns.jcp.org&#x2F;xml&#x2F;ns&#x2F;javaee&#x2F;web-app_3_1.xsd&quot; id&#x3D;&quot;WebApp_ID&quot; version&#x3D;&quot;3.1&quot;&gt;</span><br><span class="line">  &lt;display-name&gt;JspProject&lt;&#x2F;display-name&gt;</span><br><span class="line">  &lt;welcome-file-list&gt;</span><br><span class="line">    &lt;welcome-file&gt;index.html&lt;&#x2F;welcome-file&gt;</span><br><span class="line">    &lt;welcome-file&gt;index.htm&lt;&#x2F;welcome-file&gt;</span><br><span class="line">    &lt;welcome-file&gt;index.jsp&lt;&#x2F;welcome-file&gt;</span><br><span class="line">    &lt;welcome-file&gt;default.html&lt;&#x2F;welcome-file&gt;</span><br><span class="line">    &lt;welcome-file&gt;default.htm&lt;&#x2F;welcome-file&gt;</span><br><span class="line">    &lt;welcome-file&gt;default.jsp&lt;&#x2F;welcome-file&gt;</span><br><span class="line">  &lt;&#x2F;welcome-file-list&gt;</span><br><span class="line">&lt;&#x2F;web-app&gt;</span><br></pre></td></tr></table></figure><p>3.返回JspProject文件夹，创建index.jsp。<br>4.写入html代码，如：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Jsp Test&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    hello jsp;</span><br><span class="line">    &lt;% </span><br><span class="line">        out.print(&quot;Hello World!&quot;);</span><br><span class="line">    %&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h2 id="启动Tomcat服务"><a href="#启动Tomcat服务" class="headerlink" title="启动Tomcat服务"></a>启动Tomcat服务</h2><p>5.执行bin/startup.sh(startup.bat)</p><h2 id="访问项目"><a href="#访问项目" class="headerlink" title="访问项目"></a>访问项目</h2><p>6.浏览器访问<strong><em><a href="http://localhost:8888/JspProject" target="_blank" rel="noopener">localhost:8888/JspProject</a></em></strong></p><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p><img src="https://i.loli.net/2020/02/14/a9AsIhwJBi3do7c.png" alt></p><h1 id="对JSP宏观的了解"><a href="#对JSP宏观的了解" class="headerlink" title="对JSP宏观的了解"></a>对JSP宏观的了解</h1><p>JSP就是在HTML中通过<code>&lt;% %&gt;</code>标签嵌套的Java代码。<br>在项目/WEB-INF/web.xml中设置的默认的初始界面</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;welcome-file-list&gt;</span><br><span class="line">    &lt;welcome-file&gt;index.jsp&lt;&#x2F;welcome-file&gt;</span><br><span class="line">&lt;&#x2F;welcome-file-list&gt;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>JavaWeb</tag>
      </tags>
  </entry>
  <entry>
    <title>解决HexoMenu图标和路径不能共存的问题</title>
    <url>/2019/01/01/%E8%A7%A3%E5%86%B3HexoMenu%E5%9B%BE%E6%A0%87%E5%92%8C%E8%B7%AF%E5%BE%84%E4%B8%8D%E8%83%BD%E5%85%B1%E5%AD%98%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri Feb 21 2020 16:05:06 GMT+0800 (GMT+08:00) --><h1 id="Step-1"><a href="#Step-1" class="headerlink" title="Step 1."></a>Step 1.</h1><h2 id="config-yml文件中：menu改为"><a href="#config-yml文件中：menu改为" class="headerlink" title="_config.yml文件中：menu改为"></a>_config.yml文件中：menu改为</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F;</span><br><span class="line">  # about: &#x2F;about</span><br><span class="line">  tags: &#x2F;tags</span><br><span class="line">  categories: &#x2F;categories</span><br><span class="line">  archives: &#x2F;archives</span><br><span class="line">  # schedule: &#x2F;schedule</span><br><span class="line">  # sitemap: &#x2F;sitemap.xml || sitemap</span><br><span class="line">  #commonweal: &#x2F;404&#x2F; || heartbeat</span><br></pre></td></tr></table></figure><p>⁨</p><a id="more"></a><h1 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2."></a>Step 2.</h1><h2 id="Macintosh-HD⁩-gt-⁨用户⁩-gt-⁨dai⁩-gt-⁨blog⁩-gt-⁨themes⁩-gt-⁨hexo-theme-next-master⁩-gt-⁨languages⁩-gt-zh-Hans-yml：menu位置改为："><a href="#Macintosh-HD⁩-gt-⁨用户⁩-gt-⁨dai⁩-gt-⁨blog⁩-gt-⁨themes⁩-gt-⁨hexo-theme-next-master⁩-gt-⁨languages⁩-gt-zh-Hans-yml：menu位置改为：" class="headerlink" title="Macintosh HD⁩ -&gt; ⁨用户⁩ -&gt; ⁨dai⁩ -&gt; ⁨blog⁩ -&gt; ⁨themes⁩ -&gt; ⁨hexo-theme-next-master⁩ -&gt; ⁨languages⁩ -&gt; zh-Hans.yml：menu位置改为："></a>Macintosh HD⁩ -&gt; ⁨用户⁩ -&gt; ⁨dai⁩ -&gt; ⁨blog⁩ -&gt; ⁨themes⁩ -&gt; ⁨hexo-theme-next-master⁩ -&gt; ⁨languages⁩ -&gt; zh-Hans.yml：menu位置改为：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &lt;span class&#x3D;&quot;with-love&quot;&gt;&lt;i class&#x3D;&quot;fa fa-home&quot;&gt;&lt;&#x2F;i&gt;&lt;&#x2F;span&gt;首页</span><br><span class="line">  archives: &lt;span class&#x3D;&quot;with-love&quot;&gt;&lt;i class&#x3D;&quot;fa fa-archive&quot;&gt;&lt;&#x2F;i&gt;&lt;&#x2F;span&gt;归档</span><br><span class="line">  categories: &lt;span class&#x3D;&quot;with-love&quot;&gt;&lt;i class&#x3D;&quot;fa fa-th&quot;&gt;&lt;&#x2F;i&gt;&lt;&#x2F;span&gt;分类</span><br><span class="line">  tags: &lt;span class&#x3D;&quot;with-love&quot;&gt;&lt;i class&#x3D;&quot;fa fa-tags&quot;&gt;&lt;&#x2F;i&gt;&lt;&#x2F;span&gt;标签</span><br><span class="line">  about: 关于</span><br><span class="line">  search: &lt;span class&#x3D;&quot;with-love&quot;&gt;&lt;i class&#x3D;&quot;fa fa-search&quot;&gt;&lt;&#x2F;i&gt;&lt;&#x2F;span&gt;搜索</span><br><span class="line">  schedule: 日程表</span><br><span class="line">  sitemap: 站点地图</span><br><span class="line">  commonweal: 公益404</span><br></pre></td></tr></table></figure><h1 id="Step-3"><a href="#Step-3" class="headerlink" title="Step 3."></a>Step 3.</h1><h2 id="⁨Macintosh-HD⁩-gt-⁨用户⁩-gt-⁨dai⁩-gt-⁨blog⁩-gt-⁨themes⁩-gt-⁨hexo-theme-next-master⁩-gt-⁨layout⁩-gt-⁨-partials⁩-gt-header-swig：第45行"><a href="#⁨Macintosh-HD⁩-gt-⁨用户⁩-gt-⁨dai⁩-gt-⁨blog⁩-gt-⁨themes⁩-gt-⁨hexo-theme-next-master⁩-gt-⁨layout⁩-gt-⁨-partials⁩-gt-header-swig：第45行" class="headerlink" title="⁨Macintosh HD⁩ -&gt; ⁨用户⁩ -&gt; ⁨dai⁩ -&gt; ⁨blog⁩ -&gt; ⁨themes⁩ -&gt; ⁨hexo-theme-next-master⁩ -&gt; ⁨layout⁩ -&gt; ⁨_partials⁩ -&gt; header.swig：第45行"></a>⁨Macintosh HD⁩ -&gt; ⁨用户⁩ -&gt; ⁨dai⁩ -&gt; ⁨blog⁩ -&gt; ⁨themes⁩ -&gt; ⁨hexo-theme-next-master⁩ -&gt; ⁨layout⁩ -&gt; ⁨_partials⁩ -&gt; header.swig：第45行</h2><p>由：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;i class&#x3D;&quot;menu-item-icon fa fa-fw fa-&#123;&#123; path.split(&#39;||&#39;)[1] | trim | default(&#39;question-circle&#39;) &#125;&#125;&quot;&gt;&lt;&#x2F;i&gt; &lt;br &#x2F;&gt;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;i class&#x3D;&quot;menu-item-icon fa fa-fw fa-&#123;&#123; path.split(&#39;||&#39;)[1] | trim  &#125;&#125;&quot;&gt;&lt;&#x2F;i&gt; &lt;br &#x2F;&gt;</span><br></pre></td></tr></table></figure><hr><p>更新：<br>将_config.yml文件中的menu 每个项目/和||中间的空格删除就好了。。。</p><!-- rebuild by neat -->]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue.js - Day1</title>
    <url>/2018/04/11/Vue.js%20-%20Day1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri Feb 21 2020 16:05:06 GMT+0800 (GMT+08:00) --><h1 id="Vue-js-Day1"><a href="#Vue-js-Day1" class="headerlink" title="Vue.js - Day1"></a>Vue.js - Day1</h1><h2 id="课程介绍"><a href="#课程介绍" class="headerlink" title="课程介绍"></a>课程介绍</h2><p>前5天： 都在学习Vue基本的语法和概念；打包工具 Webpack , Gulp<br>后5天： 以项目驱动教学；</p><h3 id="什么是Vue-js"><a href="#什么是Vue-js" class="headerlink" title="什么是Vue.js"></a>什么是Vue.js</h3><ul><li><p>Vue.js 是目前最火的一个前端框架，React是最流行的一个前端框架（React除了开发网站，还可以开发手机App， Vue语法也是可以用于进行手机App开发的，需要借助于Weex）</p></li><li><p>Vue.js 是前端的<strong>主流框架之一</strong>，和Angular.js、React.js 一起，并成为前端三大主流框架！</p></li><li><p>Vue.js 是一套构建用户界面的框架，<strong>只关注视图层</strong>，它不仅易于上手，还便于与第三方库或既有项目整合。（Vue有配套的第三方类库，可以整合起来做大型项目的开发）</p></li></ul><a id="more"></a><ul><li>前端的主要工作？主要负责MVC中的V这一层；主要工作就是和界面打交道，来制作前端页面效果；</li></ul><h2 id="为什么要学习流行框架"><a href="#为什么要学习流行框架" class="headerlink" title="为什么要学习流行框架"></a>为什么要学习流行框架</h2><ul><li>企业为了提高开发效率：在企业中，时间就是效率，效率就是金钱；<ul><li>企业中，使用框架，能够提高开发的效率；</li></ul></li></ul><ul><li>提高开发效率的发展历程：原生JS -&gt; Jquery之类的类库 -&gt; 前端模板引擎 -&gt; Angular.js / Vue.js（能够帮助我们减少不必要的DOM操作；提高渲染效率；双向数据绑定的概念【通过框架提供的指令，我们前端程序员只需要关心数据的业务逻辑，不再关心DOM是如何渲染的了】）</li><li>在Vue中，一个核心的概念，就是让用户不再操作DOM元素，解放了用户的双手，让程序员可以更多的时间去关注业务逻辑；</li></ul><ul><li>增强自己就业时候的竞争力<ul><li>人无我有，人有我优</li><li>你平时不忙的时候，都在干嘛？</li></ul></li></ul><h2 id="框架和库的区别"><a href="#框架和库的区别" class="headerlink" title="框架和库的区别"></a>框架和库的区别</h2><ul><li><p>框架：是一套完整的解决方案；对项目的侵入性较大，项目如果需要更换框架，则需要重新架构整个项目。</p><ul><li>node 中的 express；</li></ul></li></ul><ul><li>库（插件）：提供某一个小功能，对项目的侵入性较小，如果某个库无法完成某些需求，可以很容易切换到其它库实现需求。<ul><li><ol><li>从Jquery 切换到 Zepto</li></ol></li><li><ol start="2"><li>从 EJS 切换到 art-template</li></ol></li></ul></li></ul><h2 id="Node（后端）中的-MVC-与-前端中的-MVVM-之间的区别"><a href="#Node（后端）中的-MVC-与-前端中的-MVVM-之间的区别" class="headerlink" title="Node（后端）中的 MVC 与 前端中的 MVVM 之间的区别"></a>Node（后端）中的 MVC 与 前端中的 MVVM 之间的区别</h2><ul><li><p>MVC 是后端的分层开发概念；</p></li><li><p>MVVM是前端视图层的概念，主要关注于 视图层分离，也就是说：MVVM把前端的视图层，分为了 三部分 Model, View , VM ViewModel</p></li><li><p><img src="https://i.loli.net/2020/02/11/CxHjZAv9uUmcVSr.png" alt="01.MVC和MVVM的关系图解.png"></p></li><li><p>为什么有了MVC还要有MVVM</p></li></ul><h2 id="Vue-js-基本代码-和-MVVM-之间的对应关系"><a href="#Vue-js-基本代码-和-MVVM-之间的对应关系" class="headerlink" title="Vue.js 基本代码 和 MVVM 之间的对应关系"></a>Vue.js 基本代码 和 MVVM 之间的对应关系</h2><h2 id="Vue之-基本的代码结构和插值表达式、v-cloak"><a href="#Vue之-基本的代码结构和插值表达式、v-cloak" class="headerlink" title="Vue之 - 基本的代码结构和插值表达式、v-cloak"></a>Vue之 - <code>基本的代码结构</code>和<code>插值表达式</code>、<code>v-cloak</code></h2><h2 id="Vue指令之v-text和v-html"><a href="#Vue指令之v-text和v-html" class="headerlink" title="Vue指令之v-text和v-html"></a>Vue指令之<code>v-text</code>和<code>v-html</code></h2><h2 id="Vue指令之v-bind的三种用法"><a href="#Vue指令之v-bind的三种用法" class="headerlink" title="Vue指令之v-bind的三种用法"></a>Vue指令之<code>v-bind</code>的三种用法</h2><ol><li><p>直接使用指令<code>v-bind</code></p></li><li><p>使用简化指令<code>:</code></p></li><li><p>在绑定的时候，拼接绑定内容：<code>:title=&quot;btnTitle + &#39;, 这是追加的内容&#39;&quot;</code></p></li></ol><h2 id="Vue指令之v-on和跑马灯效果"><a href="#Vue指令之v-on和跑马灯效果" class="headerlink" title="Vue指令之v-on和跑马灯效果"></a>Vue指令之<code>v-on</code>和<code>跑马灯效果</code></h2><h3 id="跑马灯效果"><a href="#跑马灯效果" class="headerlink" title="跑马灯效果"></a>跑马灯效果</h3><ol><li>HTML结构：</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;p&gt;&#123;&#123;info&#125;&#125;&lt;&#x2F;p&gt;</span><br><span class="line"></span><br><span class="line">    &lt;input type&#x3D;&quot;button&quot; value&#x3D;&quot;开启&quot; v-on:click&#x3D;&quot;go&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;input type&#x3D;&quot;button&quot; value&#x3D;&quot;停止&quot; v-on:click&#x3D;&quot;stop&quot;&gt;</span><br><span class="line"></span><br><span class="line">  &lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>Vue实例：</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;&#x2F; 创建 Vue 实例，得到 ViewModel</span><br><span class="line"></span><br><span class="line">   var vm &#x3D; new Vue(&#123;</span><br><span class="line"></span><br><span class="line">     el: &#39;#app&#39;,</span><br><span class="line"></span><br><span class="line">     data: &#123;</span><br><span class="line"></span><br><span class="line">       info: &#39;猥琐发育，别浪~！&#39;,</span><br><span class="line"></span><br><span class="line">       intervalId: null</span><br><span class="line"></span><br><span class="line">     &#125;,</span><br><span class="line"></span><br><span class="line">     methods: &#123;</span><br><span class="line"></span><br><span class="line">       go() &#123;</span><br><span class="line"></span><br><span class="line">         &#x2F;&#x2F; 如果当前有定时器在运行，则直接return</span><br><span class="line"></span><br><span class="line">         if (this.intervalId !&#x3D; null) &#123;</span><br><span class="line"></span><br><span class="line">           return;</span><br><span class="line"></span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         &#x2F;&#x2F; 开始定时器</span><br><span class="line"></span><br><span class="line">         this.intervalId &#x3D; setInterval(() &#x3D;&gt; &#123;</span><br><span class="line"></span><br><span class="line">           this.info &#x3D; this.info.substring(1) + this.info.substring(0, 1);</span><br><span class="line"></span><br><span class="line">         &#125;, 500);</span><br><span class="line"></span><br><span class="line">       &#125;,</span><br><span class="line"></span><br><span class="line">       stop() &#123;</span><br><span class="line"></span><br><span class="line">         clearInterval(this.intervalId);</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">   &#125;);</span><br></pre></td></tr></table></figure><h2 id="Vue指令之v-on的缩写和事件修饰符"><a href="#Vue指令之v-on的缩写和事件修饰符" class="headerlink" title="Vue指令之v-on的缩写和事件修饰符"></a>Vue指令之<code>v-on的缩写</code>和<code>事件修饰符</code></h2><h3 id="事件修饰符："><a href="#事件修饰符：" class="headerlink" title="事件修饰符："></a>事件修饰符：</h3><ul><li><p>.stop 阻止冒泡</p></li><li><p>.prevent 阻止默认事件</p></li><li><p>.capture 添加事件侦听器时使用事件捕获模式</p></li><li><p>.self 只当事件在该元素本身（比如不是子元素）触发时触发回调</p></li><li><p>.once 事件只触发一次</p></li></ul><h2 id="Vue指令之v-model和双向数据绑定"><a href="#Vue指令之v-model和双向数据绑定" class="headerlink" title="Vue指令之v-model和双向数据绑定"></a>Vue指令之<code>v-model</code>和<code>双向数据绑定</code></h2><h2 id="简易计算器案例"><a href="#简易计算器案例" class="headerlink" title="简易计算器案例"></a>简易计算器案例</h2><ol><li>HTML 代码结构</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line"></span><br><span class="line">  &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;n1&quot;&gt;</span><br><span class="line"></span><br><span class="line">  &lt;select v-model&#x3D;&quot;opt&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;option value&#x3D;&quot;0&quot;&gt;+&lt;&#x2F;option&gt;</span><br><span class="line"></span><br><span class="line">    &lt;option value&#x3D;&quot;1&quot;&gt;-&lt;&#x2F;option&gt;</span><br><span class="line"></span><br><span class="line">    &lt;option value&#x3D;&quot;2&quot;&gt;*&lt;&#x2F;option&gt;</span><br><span class="line"></span><br><span class="line">    &lt;option value&#x3D;&quot;3&quot;&gt;÷&lt;&#x2F;option&gt;</span><br><span class="line"></span><br><span class="line">  &lt;&#x2F;select&gt;</span><br><span class="line"></span><br><span class="line">  &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;n2&quot;&gt;</span><br><span class="line"></span><br><span class="line">  &lt;input type&#x3D;&quot;button&quot; value&#x3D;&quot;&#x3D;&quot; v-on:click&#x3D;&quot;getResult&quot;&gt;</span><br><span class="line"></span><br><span class="line">  &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;result&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>Vue实例代码：</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;&#x2F; 创建 Vue 实例，得到 ViewModel</span><br><span class="line"></span><br><span class="line">   var vm &#x3D; new Vue(&#123;</span><br><span class="line"></span><br><span class="line">     el: &#39;#app&#39;,</span><br><span class="line"></span><br><span class="line">     data: &#123;</span><br><span class="line"></span><br><span class="line">       n1: 0,</span><br><span class="line"></span><br><span class="line">       n2: 0,</span><br><span class="line"></span><br><span class="line">       result: 0,</span><br><span class="line"></span><br><span class="line">       opt: &#39;0&#39;</span><br><span class="line"></span><br><span class="line">     &#125;,</span><br><span class="line"></span><br><span class="line">     methods: &#123;</span><br><span class="line"></span><br><span class="line">       getResult() &#123;</span><br><span class="line"></span><br><span class="line">         switch (this.opt) &#123;</span><br><span class="line"></span><br><span class="line">           case &#39;0&#39;:</span><br><span class="line"></span><br><span class="line">             this.result &#x3D; parseInt(this.n1) + parseInt(this.n2);</span><br><span class="line"></span><br><span class="line">             break;</span><br><span class="line"></span><br><span class="line">           case &#39;1&#39;:</span><br><span class="line"></span><br><span class="line">             this.result &#x3D; parseInt(this.n1) - parseInt(this.n2);</span><br><span class="line"></span><br><span class="line">             break;</span><br><span class="line"></span><br><span class="line">           case &#39;2&#39;:</span><br><span class="line"></span><br><span class="line">             this.result &#x3D; parseInt(this.n1) * parseInt(this.n2);</span><br><span class="line"></span><br><span class="line">             break;</span><br><span class="line"></span><br><span class="line">           case &#39;3&#39;:</span><br><span class="line"></span><br><span class="line">             this.result &#x3D; parseInt(this.n1) &#x2F; parseInt(this.n2);</span><br><span class="line"></span><br><span class="line">             break;</span><br><span class="line"></span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">   &#125;);</span><br></pre></td></tr></table></figure><h2 id="在Vue中使用样式"><a href="#在Vue中使用样式" class="headerlink" title="在Vue中使用样式"></a>在Vue中使用样式</h2><h3 id="使用class样式"><a href="#使用class样式" class="headerlink" title="使用class样式"></a>使用class样式</h3><ol><li><p>数组</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;h1 :class&#x3D;&quot;[&#39;red&#39;, &#39;thin&#39;]&quot;&gt;这是一个邪恶的H1&lt;&#x2F;h1&gt;</span><br></pre></td></tr></table></figure></li><li><p>数组中使用三元表达式</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;h1 :class&#x3D;&quot;[&#39;red&#39;, &#39;thin&#39;, isactive?&#39;active&#39;:&#39;&#39;]&quot;&gt;这是一个邪恶的H1&lt;&#x2F;h1&gt;</span><br></pre></td></tr></table></figure></li><li><p>数组中嵌套对象</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;h1 :class&#x3D;&quot;[&#39;red&#39;, &#39;thin&#39;, &#123;&#39;active&#39;: isactive&#125;]&quot;&gt;这是一个邪恶的H1&lt;&#x2F;h1&gt;</span><br></pre></td></tr></table></figure></li><li><p>直接使用对象</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;h1 :class&#x3D;&quot;&#123;red:true, italic:true, active:true, thin:true&#125;&quot;&gt;这是一个邪恶的H1&lt;&#x2F;h1&gt;</span><br></pre></td></tr></table></figure></li></ol><h3 id="使用内联样式"><a href="#使用内联样式" class="headerlink" title="使用内联样式"></a>使用内联样式</h3><ol><li><p>直接在元素上通过 <code>:style</code> 的形式，书写样式对象</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;h1 :style&#x3D;&quot;&#123;color: &#39;red&#39;, &#39;font-size&#39;: &#39;40px&#39;&#125;&quot;&gt;这是一个善良的H1&lt;&#x2F;h1&gt;</span><br></pre></td></tr></table></figure></li><li><p>将样式对象，定义到 <code>data</code> 中，并直接引用到 <code>:style</code> 中</p><ul><li>在data上定义样式：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">data: &#123;</span><br><span class="line">        h1StyleObj: &#123; color: &#39;red&#39;, &#39;font-size&#39;: &#39;40px&#39;, &#39;font-weight&#39;: &#39;200&#39; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在元素中，通过属性绑定的形式，将样式对象应用到元素中：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;h1 :style&#x3D;&quot;h1StyleObj&quot;&gt;这是一个善良的H1&lt;&#x2F;h1&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>在 <code>:style</code> 中通过数组，引用多个 <code>data</code> 上的样式对象</p><ul><li>在data上定义样式：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">data: &#123;</span><br><span class="line">        h1StyleObj: &#123; color: &#39;red&#39;, &#39;font-size&#39;: &#39;40px&#39;, &#39;font-weight&#39;: &#39;200&#39; &#125;,</span><br><span class="line">        h1StyleObj2: &#123; fontStyle: &#39;italic&#39; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在元素中，通过属性绑定的形式，将样式对象应用到元素中：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;h1 :style&#x3D;&quot;[h1StyleObj, h1StyleObj2]&quot;&gt;这是一个善良的H1&lt;&#x2F;h1&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="Vue指令之v-for和key属性"><a href="#Vue指令之v-for和key属性" class="headerlink" title="Vue指令之v-for和key属性"></a>Vue指令之<code>v-for</code>和<code>key</code>属性</h2><ol><li>迭代数组</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">  &lt;li v-for&#x3D;&quot;(item, i) in list&quot;&gt;索引：&#123;&#123;i&#125;&#125; --- 姓名：&#123;&#123;item.name&#125;&#125; --- 年龄：&#123;&#123;item.age&#125;&#125;&lt;&#x2F;li&gt;</span><br><span class="line">&lt;&#x2F;ul&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>迭代对象中的属性</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!-- 循环遍历对象身上的属性 --&gt;</span><br><span class="line"></span><br><span class="line">   &lt;div v-for&#x3D;&quot;(val, key, i) in userInfo&quot;&gt;&#123;&#123;val&#125;&#125; --- &#123;&#123;key&#125;&#125; --- &#123;&#123;i&#125;&#125;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>迭代数字</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;p v-for&#x3D;&quot;i in 10&quot;&gt;这是第 &#123;&#123;i&#125;&#125; 个P标签&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure><blockquote><p>2.2.0+ 的版本里，<strong>当在组件中使用</strong> v-for 时，key 现在是必须的。</p></blockquote><p>当 Vue.js 用 v-for 正在更新已渲染过的元素列表时，它默认用 “<strong>就地复用</strong>” 策略。如果数据项的顺序被改变，Vue将<strong>不是移动 DOM 元素来匹配数据项的顺序</strong>， 而是<strong>简单复用此处每个元素</strong>，并且确保它在特定索引下显示已被渲染过的每个元素。</p><p>为了给 Vue 一个提示，<strong>以便它能跟踪每个节点的身份，从而重用和重新排序现有元素</strong>，你需要为每项提供一个唯一 key 属性。</p><h2 id="Vue指令之v-if和v-show"><a href="#Vue指令之v-if和v-show" class="headerlink" title="Vue指令之v-if和v-show"></a>Vue指令之<code>v-if</code>和<code>v-show</code></h2><blockquote><p>一般来说，v-if 有更高的切换消耗而 v-show 有更高的初始渲染消耗。因此，如果需要频繁切换 v-show 较好，如果在运行时条件不大可能改变 v-if 较好。</p></blockquote><h2 id="品牌管理案例"><a href="#品牌管理案例" class="headerlink" title="品牌管理案例"></a>品牌管理案例</h2><h3 id="添加新品牌"><a href="#添加新品牌" class="headerlink" title="添加新品牌"></a>添加新品牌</h3><h3 id="删除品牌"><a href="#删除品牌" class="headerlink" title="删除品牌"></a>删除品牌</h3><h3 id="根据条件筛选品牌"><a href="#根据条件筛选品牌" class="headerlink" title="根据条件筛选品牌"></a>根据条件筛选品牌</h3><ol><li>1.x 版本中的filterBy指令，在2.x中已经被废除：</li></ol><p><a href="https://v1-cn.vuejs.org/api/#filterBy" target="_blank" rel="noopener">filterBy - 指令</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;tr v-for&#x3D;&quot;item in list | filterBy searchName in &#39;name&#39;&quot;&gt;</span><br><span class="line"></span><br><span class="line">  &lt;td&gt;&#123;&#123;item.id&#125;&#125;&lt;&#x2F;td&gt;</span><br><span class="line"></span><br><span class="line">  &lt;td&gt;&#123;&#123;item.name&#125;&#125;&lt;&#x2F;td&gt;</span><br><span class="line"></span><br><span class="line">  &lt;td&gt;&#123;&#123;item.ctime&#125;&#125;&lt;&#x2F;td&gt;</span><br><span class="line"></span><br><span class="line">  &lt;td&gt;</span><br><span class="line"></span><br><span class="line">    &lt;a href&#x3D;&quot;#&quot; @click.prevent&#x3D;&quot;del(item.id)&quot;&gt;删除&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line">  &lt;&#x2F;td&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;tr&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>在2.x版本中<a href="https://cn.vuejs.org/v2/guide/list.html#显示过滤-排序结果" target="_blank" rel="noopener">手动实现筛选的方式</a>：</li></ol><ul><li>筛选框绑定到 VM 实例中的 <code>searchName</code> 属性：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;hr&gt; 输入筛选名称：</span><br><span class="line"></span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;searchName&quot;&gt;</span><br></pre></td></tr></table></figure><ul><li>在使用 <code>v-for</code> 指令循环每一行数据的时候，不再直接 <code>item in list</code>，而是 <code>in</code> 一个 过滤的methods 方法，同时，把过滤条件<code>searchName</code>传递进去：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;tbody&gt;</span><br><span class="line"></span><br><span class="line">      &lt;tr v-for&#x3D;&quot;item in search(searchName)&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;td&gt;&#123;&#123;item.id&#125;&#125;&lt;&#x2F;td&gt;</span><br><span class="line"></span><br><span class="line">        &lt;td&gt;&#123;&#123;item.name&#125;&#125;&lt;&#x2F;td&gt;</span><br><span class="line"></span><br><span class="line">        &lt;td&gt;&#123;&#123;item.ctime&#125;&#125;&lt;&#x2F;td&gt;</span><br><span class="line"></span><br><span class="line">        &lt;td&gt;</span><br><span class="line"></span><br><span class="line">          &lt;a href&#x3D;&quot;#&quot; @click.prevent&#x3D;&quot;del(item.id)&quot;&gt;删除&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line">        &lt;&#x2F;td&gt;</span><br><span class="line"></span><br><span class="line">      &lt;&#x2F;tr&gt;</span><br><span class="line"></span><br><span class="line">    &lt;&#x2F;tbody&gt;</span><br></pre></td></tr></table></figure><ul><li><code>search</code> 过滤方法中，使用 数组的 <code>filter</code> 方法进行过滤：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">search(name) &#123;</span><br><span class="line"></span><br><span class="line">  return this.list.filter(x &#x3D;&gt; &#123;</span><br><span class="line"></span><br><span class="line">    return x.name.indexOf(name) !&#x3D; -1;</span><br><span class="line"></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Vue调试工具vue-devtools的安装步骤和使用"><a href="#Vue调试工具vue-devtools的安装步骤和使用" class="headerlink" title="Vue调试工具vue-devtools的安装步骤和使用"></a>Vue调试工具<code>vue-devtools</code>的安装步骤和使用</h2><p><a href="https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd?hl=zh-CN" target="_blank" rel="noopener">Vue.js devtools - 翻墙安装方式 - 推荐</a></p><h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><p>概念：Vue.js 允许你自定义过滤器，<strong>可被用作一些常见的文本格式化</strong>。过滤器可以用在两个地方：<strong>mustache 插值和 v-bind 表达式</strong>。过滤器应该被添加在 JavaScript 表达式的尾部，由“管道”符指示；</p><h3 id="私有过滤器"><a href="#私有过滤器" class="headerlink" title="私有过滤器"></a>私有过滤器</h3><ol><li>HTML元素：</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;td&gt;&#123;&#123;item.ctime | dataFormat(&#39;yyyy-mm-dd&#39;)&#125;&#125;&lt;&#x2F;td&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>私有 <code>filters</code> 定义方式：</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">filters: &#123; &#x2F;&#x2F; 私有局部过滤器，只能在 当前 VM 对象所控制的 View 区域进行使用</span><br><span class="line"></span><br><span class="line">    dataFormat(input, pattern &#x3D; &quot;&quot;) &#123; &#x2F;&#x2F; 在参数列表中 通过 pattern&#x3D;&quot;&quot; 来指定形参默认值，防止报错</span><br><span class="line"></span><br><span class="line">      var dt &#x3D; new Date(input);</span><br><span class="line"></span><br><span class="line">      &#x2F;&#x2F; 获取年月日</span><br><span class="line"></span><br><span class="line">      var y &#x3D; dt.getFullYear();</span><br><span class="line"></span><br><span class="line">      var m &#x3D; (dt.getMonth() + 1).toString().padStart(2, &#39;0&#39;);</span><br><span class="line"></span><br><span class="line">      var d &#x3D; dt.getDate().toString().padStart(2, &#39;0&#39;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      &#x2F;&#x2F; 如果 传递进来的字符串类型，转为小写之后，等于 yyyy-mm-dd，那么就返回 年-月-日</span><br><span class="line"></span><br><span class="line">      &#x2F;&#x2F; 否则，就返回  年-月-日 时：分：秒</span><br><span class="line"></span><br><span class="line">      if (pattern.toLowerCase() &#x3D;&#x3D;&#x3D; &#39;yyyy-mm-dd&#39;) &#123;</span><br><span class="line"></span><br><span class="line">        return &#96;$&#123;y&#125;-$&#123;m&#125;-$&#123;d&#125;&#96;;</span><br><span class="line"></span><br><span class="line">      &#125; else &#123;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 获取时分秒</span><br><span class="line"></span><br><span class="line">        var hh &#x3D; dt.getHours().toString().padStart(2, &#39;0&#39;);</span><br><span class="line"></span><br><span class="line">        var mm &#x3D; dt.getMinutes().toString().padStart(2, &#39;0&#39;);</span><br><span class="line"></span><br><span class="line">        var ss &#x3D; dt.getSeconds().toString().padStart(2, &#39;0&#39;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        return &#96;$&#123;y&#125;-$&#123;m&#125;-$&#123;d&#125; $&#123;hh&#125;:$&#123;mm&#125;:$&#123;ss&#125;&#96;;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><blockquote><p>使用ES6中的字符串新方法 String.prototype.padStart(maxLength, fillString=’’) 或 String.prototype.padEnd(maxLength, fillString=’’)来填充字符串；</p></blockquote><h3 id="全局过滤器"><a href="#全局过滤器" class="headerlink" title="全局过滤器"></a>全局过滤器</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;&#x2F; 定义一个全局过滤器</span><br><span class="line"></span><br><span class="line">Vue.filter(&#39;dataFormat&#39;, function (input, pattern &#x3D; &#39;&#39;) &#123;</span><br><span class="line"></span><br><span class="line">  var dt &#x3D; new Date(input);</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; 获取年月日</span><br><span class="line"></span><br><span class="line">  var y &#x3D; dt.getFullYear();</span><br><span class="line"></span><br><span class="line">  var m &#x3D; (dt.getMonth() + 1).toString().padStart(2, &#39;0&#39;);</span><br><span class="line"></span><br><span class="line">  var d &#x3D; dt.getDate().toString().padStart(2, &#39;0&#39;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; 如果 传递进来的字符串类型，转为小写之后，等于 yyyy-mm-dd，那么就返回 年-月-日</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; 否则，就返回  年-月-日 时：分：秒</span><br><span class="line"></span><br><span class="line">  if (pattern.toLowerCase() &#x3D;&#x3D;&#x3D; &#39;yyyy-mm-dd&#39;) &#123;</span><br><span class="line"></span><br><span class="line">    return &#96;$&#123;y&#125;-$&#123;m&#125;-$&#123;d&#125;&#96;;</span><br><span class="line"></span><br><span class="line">  &#125; else &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 获取时分秒</span><br><span class="line"></span><br><span class="line">    var hh &#x3D; dt.getHours().toString().padStart(2, &#39;0&#39;);</span><br><span class="line"></span><br><span class="line">    var mm &#x3D; dt.getMinutes().toString().padStart(2, &#39;0&#39;);</span><br><span class="line"></span><br><span class="line">    var ss &#x3D; dt.getSeconds().toString().padStart(2, &#39;0&#39;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    return &#96;$&#123;y&#125;-$&#123;m&#125;-$&#123;d&#125; $&#123;hh&#125;:$&#123;mm&#125;:$&#123;ss&#125;&#96;;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>注意：当有局部和全局两个名称相同的过滤器时候，会以就近原则进行调用，即：局部过滤器优先于全局过滤器被调用！</p></blockquote><h2 id="键盘修饰符以及自定义键盘修饰符"><a href="#键盘修饰符以及自定义键盘修饰符" class="headerlink" title="键盘修饰符以及自定义键盘修饰符"></a>键盘修饰符以及自定义键盘修饰符</h2><h3 id="1-x中自定义键盘修饰符【了解即可】"><a href="#1-x中自定义键盘修饰符【了解即可】" class="headerlink" title="1.x中自定义键盘修饰符【了解即可】"></a>1.x中自定义键盘修饰符【了解即可】</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Vue.directive(&#39;on&#39;).keyCodes.f2 &#x3D; 113;</span><br></pre></td></tr></table></figure><h3 id="2-x中自定义键盘修饰符"><a href="#2-x中自定义键盘修饰符" class="headerlink" title="2.x中自定义键盘修饰符"></a><a href="https://cn.vuejs.org/v2/guide/events.html#键值修饰符" target="_blank" rel="noopener">2.x中自定义键盘修饰符</a></h3><ol><li>通过<code>Vue.config.keyCodes.名称 = 按键值</code>来自定义案件修饰符的别名：</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Vue.config.keyCodes.f2 &#x3D; 113;</span><br></pre></td></tr></table></figure><ol start="2"><li>使用自定义的按键修饰符：</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;name&quot; @keyup.f2&#x3D;&quot;add&quot;&gt;</span><br></pre></td></tr></table></figure><h2 id="自定义指令"><a href="#自定义指令" class="headerlink" title="自定义指令"></a><a href="https://cn.vuejs.org/v2/guide/custom-directive.html" target="_blank" rel="noopener">自定义指令</a></h2><ol><li>自定义全局和局部的 自定义指令：</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;&#x2F; 自定义全局指令 v-focus，为绑定的元素自动获取焦点：</span><br><span class="line"></span><br><span class="line">Vue.directive(&#39;focus&#39;, &#123;</span><br><span class="line"></span><br><span class="line">  inserted: function (el) &#123; &#x2F;&#x2F; inserted 表示被绑定元素插入父节点时调用</span><br><span class="line"></span><br><span class="line">    el.focus();</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 自定义局部指令 v-color 和 v-font-weight，为绑定的元素设置指定的字体颜色 和 字体粗细：</span><br><span class="line"></span><br><span class="line">  directives: &#123;</span><br><span class="line"></span><br><span class="line">    color: &#123; &#x2F;&#x2F; 为元素设置指定的字体颜色</span><br><span class="line"></span><br><span class="line">      bind(el, binding) &#123;</span><br><span class="line"></span><br><span class="line">        el.style.color &#x3D; binding.value;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#39;font-weight&#39;: function (el, binding2) &#123; &#x2F;&#x2F; 自定义指令的简写形式，等同于定义了 bind 和 update 两个钩子函数</span><br><span class="line"></span><br><span class="line">      el.style.fontWeight &#x3D; binding2.value;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>自定义指令的使用方式：</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;searchName&quot; v-focus v-color&#x3D;&quot;&#39;red&#39;&quot; v-font-weight&#x3D;&quot;900&quot;&gt;</span><br></pre></td></tr></table></figure><h2 id="Vue-1-x-中-自定义元素指令【已废弃-了解即可】"><a href="#Vue-1-x-中-自定义元素指令【已废弃-了解即可】" class="headerlink" title="Vue 1.x 中 自定义元素指令【已废弃,了解即可】"></a>Vue 1.x 中 自定义元素指令【已废弃,了解即可】</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Vue.elementDirective(&#39;red-color&#39;, &#123;</span><br><span class="line">  bind: function () &#123;</span><br><span class="line">    this.el.style.color &#x3D; &#39;red&#39;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>使用方式：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;red-color&gt;1232&lt;&#x2F;red-color&gt;</span><br></pre></td></tr></table></figure><h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><ol><li><a href="https://v1-cn.vuejs.org/" target="_blank" rel="noopener">vue.js 1.x 文档</a></li><li><a href="https://cn.vuejs.org/" target="_blank" rel="noopener">vue.js 2.x 文档</a></li><li><a href="http://www.css88.com/archives/7715" target="_blank" rel="noopener">String.prototype.padStart(maxLength, fillString)</a></li><li><a href="http://www.cnblogs.com/wuhua1/p/6686237.html" target="_blank" rel="noopener">js 里面的键盘事件对应的键码</a></li><li><a href="http://www.cnblogs.com/kidney/p/6052935.html" target="_blank" rel="noopener">Vue.js双向绑定的实现原理</a></li></ol><!-- rebuild by neat -->]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Vue</tag>
      </tags>
  </entry>
</search>
